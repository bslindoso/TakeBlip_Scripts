{"flow":{"onboarding":{"$contentActions":[{"input":{"bypass":false,"$cardContent":{"document":{"id":"e46361e2-38f5-4e9b-9ea8-7d7795f3712f","type":"text/plain","content":"User input"},"editable":false,"deletable":false,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[{"stateId":"welcome","conditions":[{"source":"input","comparison":"matches","values":[".*"]}],"$id":"713f5ae5-024c-48ce-a665-476b11ff8d12","$connId":"con_3","$invalid":false}],"$enteringCustomActions":[],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false},"$tags":[],"id":"onboarding","root":true,"$title":"Start","$position":{"top":"135.5px","left":"376.5px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"fallback":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"d514b2b9-4f0c-421c-9f79-9fa54ff89dcc","type":"text/plain","content":"User input"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[{"stateId":"377afe1e-202d-4223-9c32-b36c39c0b811","typeOfStateId":"state","$connId":"con_8","$id":"a2218525-d54a-4459-8b4e-2ad124f0ad8e","conditions":[{"source":"input","comparison":"notExists","values":[]}],"$invalid":false},{"stateId":"377afe1e-202d-4223-9c32-b36c39c0b811","typeOfStateId":"state","$connId":"con_13","$id":"1a305d89-8f67-4c09-b258-ea3746b7f5b2","conditions":[{"source":"input","comparison":"exists","values":[]}],"$invalid":false}],"$enteringCustomActions":[{"$id":"0160eb16-c120-4889-8151-6c8d4967e5b6","$typeOfContent":"","type":"ExecuteScript","$title":"exception","$invalid":false,"settings":{"function":"run","source":"function run(previousState, typeInput, previousId) {\n    try {\n        typeInput = JSON.parse(typeInput).input\n        let idFormated = previousState.split(' ');\n        idFormated = idFormated[0].replace(/\\[/g,'').replace(/\\]/g,'').replace(/\\./g,'');\n        const exception = {\n            id: `${idFormated}`,\n            input: '{{input.content}}',\n            redirectMenu: `${typeInput}`,\n            blockId: previousId\n        }\n        return exception\n    }\n    catch (e) {\n        return 'error'\n    }\n}","inputVariables":["state.previous.name","validInputJs","state.previous.id"],"outputVariable":"exception","LocalTimeZoneEnabled":false},"conditions":[]}],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"onboarding","$invalid":false},"$tags":[{"background":"#FF961E","label":"executeScript","id":"blip-tag-10da33cd-3fdf-48d2-f8c7-275ffd02103c","canChangeBackground":false}],"id":"fallback","$title":"Exceptions","$position":{"top":"122px","left":"877px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"welcome":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"f961d4b1-ed0e-4055-8a4c-65a8c884cedb","type":"text/plain","content":"User input"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[{"stateId":"959b012a-ccc6-442f-b9a0-28ea0ae1b8d8","typeOfStateId":"state","$connId":"con_18","$id":"4c701ca2-f14b-44c6-a2e2-8a66dc700445","conditions":[{"source":"context","comparison":"equals","values":["true"],"variable":"returnException"}],"$invalid":false},{"stateId":"556c434f-4e7f-46d6-ad5d-33960a7ae4fa","typeOfStateId":"state","$connId":"con_23","$id":"13c61d70-bf33-453e-9097-d4ed96a55340","conditions":[{"source":"context","comparison":"equals","values":["IB02","IB03"],"variable":"validaIcebreakers@validation"}],"$invalid":false},{"stateId":"ba0dfd5f-b56c-490b-9b6a-9d9bcb82a684","typeOfStateId":"state","$connId":"con_28","$id":"35fe7fb6-e284-42e5-8664-5282b7f40955","conditions":[{"source":"context","comparison":"equals","values":["match-regex-medidas medidas"],"variable":"validaRegexMedidas@validation"}],"$invalid":false},{"stateId":"ba0dfd5f-b56c-490b-9b6a-9d9bcb82a684","typeOfStateId":"state","$connId":"con_33","$id":"c226ff79-ce73-4ae2-b23b-91572bcbb2b1","conditions":[{"source":"input","comparison":"equals","values":["goToConsultaPneus"]}],"$invalid":false},{"stateId":"cc726834-df39-4f8f-946c-b2442fb75783","typeOfStateId":"state","$connId":"con_38","$id":"304c85a0-f498-48a8-b3cb-e9e31b02fad6","conditions":[{"source":"input","comparison":"exists","values":[]}],"$invalid":false}],"$enteringCustomActions":[{"$id":"fdc1d3a5-3c54-4f20-936f-e3b3dd4d1ddd","$typeOfContent":"","type":"SetVariable","$title":"service","$invalid":false,"settings":{"variable":"service","value":"pneus"},"conditions":[]},{"$id":"c8154e62-f96b-425e-8286-aa295dbfea7d","$typeOfContent":"","type":"ExecuteScript","$title":"Lista do Combo","$invalid":false,"settings":{"function":"run","source":"function run(listaDeCombo) {\n    listaDeCombo = listaDeCombo.split(';')\n    if (listaDeCombo[listaDeCombo.length - 1] == '') { listaDeCombo.pop() }    \n    let listaObjCombo = []\n\n    for (let i = 0; i < listaDeCombo.length; i++) { \n        let obj = {}\n        listaDeCombo[i] = listaDeCombo[i].trim()\n\n        const regex = /(R|r)\\$/\n        while (listaDeCombo[i].search(regex) != -1) {\n            listaDeCombo[i] = listaDeCombo[i].replace(regex, '')\n        }\n        while (listaDeCombo[i].search('R') != -1) {\n            listaDeCombo[i] = listaDeCombo[i].replace('R', '')\n        }\n        \n        listaDeCombo[i] = listaDeCombo[i].split(' ')\n        obj.aro = listaDeCombo[i][0]\n        obj.valor_combo = listaDeCombo[i][1]\n        obj.desconto_pneu = listaDeCombo[i][2]\n\n        listaObjCombo.push(obj)        \n    }\n\n    return JSON.stringify(listaObjCombo)    \n}","inputVariables":["resource.listaDeCombos"],"outputVariable":"listaDeCombos","LocalTimeZoneEnabled":false},"conditions":[]}],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false},"$tags":[{"background":"#FF4A1E","label":"Set variable","id":"blip-tag-024ed08b-c8b4-9452-aa33-a09569f77a2d","canChangeBackground":false}],"id":"welcome","$title":"[REQUERIMENTS]","$position":{"top":"237px","left":"377px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"addonsSettings":{"backgroundColor":"#000000","textColor":"#ffffff"}},"377afe1e-202d-4223-9c32-b36c39c0b811":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"f4a76ec3-f892-4cad-ad43-60297c09eb7b","type":"text/plain","content":"User input"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[],"$leavingCustomActions":[{"$id":"3fb7ef00-299c-4276-8405-acb5cf3a78a4","$typeOfContent":"","type":"Redirect","$title":"[GO TO] Exceções","$invalid":false,"settings":{"context":{"type":"text/plain","value":"{{exception}}"},"address":"{{resource.serviceList@excecao}}"},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"onboarding","$invalid":false},"$tags":[{"background":"#0A6045","label":"REDIRECT TO","id":"blip-tag-82243cbc-e3cc-2e9d-4799-05fe802b8731","canChangeBackground":false}],"id":"377afe1e-202d-4223-9c32-b36c39c0b811","$title":"[REDIRECT TO] Exceções","$position":{"top":"122px","left":"1061px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"addonsSettings":{"backgroundColor":"#c8e6c9","textColor":"#000000","commentsIdList":[]}},"20f2a16a-1d69-47d1-9a24-d087fc0b331b":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"581d2ca6-5ab2-4e38-8726-d22b30bcf23c","type":"text/plain","textContent":"User input","content":"User input"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[{"$id":"3ed14941-bd24-4013-a18d-1f4c6e4ace91","$typeOfContent":"","type":"SetVariable","$title":"clearException","$invalid":false,"settings":{"variable":"exception"},"conditions":[]}],"$leavingCustomActions":[{"$id":"5e626b84-9cf6-49b5-995e-53b56f2befdf","$typeOfContent":"","type":"Redirect","$title":"[GO TO] Finalizar","$invalid":false,"settings":{"context":{"type":"text/plain","value":"finalizacao"},"address":"{{resource.serviceList@finalizacao}}"},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"onboarding","$invalid":false,"typeOfStateId":"state"},"$tags":[{"background":"#0A6045","label":"REDIRECT TO","id":"blip-tag-82243cbc-e3cc-2e9d-4799-05fe802b8731","canChangeBackground":false},{"background":"#FF4A1E","label":"Set variable","id":"blip-tag-024ed08b-c8b4-9452-aa33-a09569f77a2d","canChangeBackground":false}],"id":"20f2a16a-1d69-47d1-9a24-d087fc0b331b","root":false,"$title":"[REDIRECT TO] Finalizar","$position":{"top":"253.5px","left":"1062.25px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"addonsSettings":{"backgroundColor":"#c8e6c9","textColor":"#000000"}},"79699b3e-9792-4285-afc5-b5aa42552260":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"6d96947e-81eb-4195-9a03-8a7f8906e5eb","type":"text/plain","textContent":"User input","content":"User input"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[],"$leavingCustomActions":[{"$id":"7455ae48-cff1-4bbb-b8f7-34f0ecea3ba1","$typeOfContent":"","type":"Redirect","$title":"[GO TO] Menu Principal","$invalid":false,"settings":{"context":{"type":"text/plain","value":"Menu"},"address":"{{resource.serviceList@boas_vindas}}"},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"onboarding","$invalid":false,"typeOfStateId":"state"},"$tags":[{"background":"#0A6045","label":"REDIRECT TO","id":"blip-tag-82243cbc-e3cc-2e9d-4799-05fe802b8731","canChangeBackground":false}],"id":"79699b3e-9792-4285-afc5-b5aa42552260","root":false,"$title":"[REDIRECT TO] Menu Principal","$position":{"top":"387px","left":"1061px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"addonsSettings":{"backgroundColor":"#c8e6c9","textColor":"#000000"}},"959b012a-ccc6-442f-b9a0-28ea0ae1b8d8":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"aebf3f0a-56ac-4466-b042-70cabc54dbf4","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[{"stateId":"{{exception@blockId}}","typeOfStateId":"variable","$id":"35fb96e1-c5fa-463f-b82f-b328a40d881a","conditions":[{"source":"input","comparison":"exists","values":[]}],"$invalid":false}],"$enteringCustomActions":[{"$id":"ad440f48-87c3-4fa8-be77-43d1b0e5b835","$typeOfContent":"","type":"SetVariable","$title":"returnException","$invalid":false,"settings":{"variable":"returnException","value":"false"},"conditions":[]}],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false},"$tags":[{"background":"#FF4A1E","label":"Set variable","id":"blip-tag-024ed08b-c8b4-9452-aa33-a09569f77a2d","canChangeBackground":false}],"id":"959b012a-ccc6-442f-b9a0-28ea0ae1b8d8","root":false,"$title":"Retorno Exceção","$position":{"top":"144px","left":"625px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"addonsSettings":{"backgroundColor":"#eb9694","textColor":"#000000","commentsIdList":[]}},"298d4178-2ba6-44f1-a49c-00f3beea487c":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"581d2ca6-5ab2-4e38-8726-d22b30bcf23c","type":"text/plain","textContent":"User input","content":"User input"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[],"$leavingCustomActions":[{"$id":"8735939c-ee24-45e9-ba72-24fe28e39c0d","$typeOfContent":"","type":"Redirect","$title":"[GO TO] Transbordo","$invalid":false,"settings":{"context":{"type":"text/plain","value":"ola"},"address":"{{resource.serviceList@transbordo}}"},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"onboarding","$invalid":false,"typeOfStateId":"state"},"$tags":[{"background":"#0A6045","label":"REDIRECT TO","id":"blip-tag-82243cbc-e3cc-2e9d-4799-05fe802b8731","canChangeBackground":false}],"id":"298d4178-2ba6-44f1-a49c-00f3beea487c","root":false,"$title":"[REDIRECT TO] Transbordo","$position":{"top":"522.25px","left":"1063px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"addonsSettings":{"backgroundColor":"#c8e6c9","textColor":"#000000","commentsIdList":[]}},"08a4cf74-6174-4e82-8e39-c012939c432b":{"$contentActions":[{"action":{"$id":"40ccc244-df19-4bf9-a7d1-e4f5f4c46722","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"19eb619d-6f11-4923-b326-72ab8352b8ba","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"19eb619d-6f11-4923-b326-72ab8352b8ba","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"b5a6f654-d2d1-4e03-b68a-1f821b914c28","$typeOfContent":"raw-content","type":"SendRawMessage","settings":{"metadata":{},"type":"{{objMenu@type}}","rawContent":"{{contentJs}}"}},"$invalid":false},{"input":{"bypass":false,"$cardContent":{"document":{"id":"be996d59-606a-485c-bd73-cb31970b6f66","type":"text/plain","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false,"expiration":"1:0"},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[{"$id":"0af07bf9-f694-4636-a08b-fc1d339ed605","$typeOfContent":"","type":"ExecuteScript","$title":"inputOptionJs","$invalid":false,"settings":{"function":"run","source":"function run(hideInputText, sentenceOtherMistakesJs, returnJs, platform) {\n\n  let text = 'Você sabe as medidas do pneu do seu veículo?'\n  let opt = [\"Sim\", \"Não\"]\n  let properties = {\n    text: text,\n    options: opt,\n    values: opt,\n    description: [],\n    itens: [\n      { name: [opt[0]] },\n      { name: [opt[1]] }\n    ],\n    menuScope: {\n      \"whatsappButton\": true,\n      \"whatsappList\": false,\n      \"blipchatQuickReply\": true,\n      \"blipchatMenu\": false,\n      \"defaultText\": true\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Exibe mensagem e exceção no MENU\n  // if (hideInputText == 'true' || hideInputText == true) {\n  //   properties.text = sentenceOtherMistakesJs\n  // } else {\n  //   // Exibe mensagem de retorno\n  //   // if (returnJs == 'true' || returnJs == true) {\n  //   //   properties.text = 'Certo! Selecione a seguir como eu posso te ajudar hoje. 👇'\n  //   // }\n  // }\n  ////////////////////////////////////////////////////////////////////////////////\n\n  properties.itens = addItensNumeracao(properties.itens);\n\n  // Adição de opções sem numeração\n  let opcoesExtras = []\n\n  opcoesExtras = addItens(opcoesExtras);\n\n  for (let i = 0; i < opcoesExtras.length; i++) {\n    properties.itens.push(opcoesExtras[i]);\n  }\n\n  return JSON.stringify(properties);\n}\n\nfunction addItens(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n  }\n  return newItens;\n}\n\nfunction addItensNumeracao(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n    newNames.push(`${i + 1}`); // Acrescenta numeração automática\n  }\n  return newItens;\n} \n","inputVariables":["hideInputText","sentenceOtherMistakesJs","return","platform"],"outputVariable":"inputOptionJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"9c05b11e-5b04-4263-8f63-129950856526","$typeOfContent":"","type":"ExecuteScript","$title":"objMenu","$invalid":false,"settings":{"function":"run","source":"// {{resource.FunctionGetMenu}}\n\n// const run = (platform, menu) => {\n//   menu = JSON.parse(menu);\n//   platform = platform.toLowerCase();\n\n//   if (platform == 'instagram' || platform == 'messenger') {\n//     const objMenu = {\n//       'type': `text/plain`,\n//       'content' : geraMenuNumerico(menu)\n//     }\n//     return objMenu\n//   };\n\n//   let default_msg = {\n//     \"text\": menu.text,\n//     \"header\": 'Menu',\n//     \"body\": menu.text,\n//     \"footer\": '',\n//     \"button\": 'Menu',\n//     \"title\": 'Menu',\n//     \"namespaceTemplate\": '',\n//     \"nameTemplate\": '',\n//     \"options\": menu.options,\n//     \"values\": menu.values,\n//     \"submenu\": [],\n//     \"description\": menu.description,\n//     \"menuScope\": {\n//       ... menu.menuScope,\n//       \"platform\": platform\n//     },\n//   };\n\n//   var newMenu = getMenuForPlatform(default_msg);\n\n//   return newMenu;\n// };\n\n// function geraMenuNumerico(menu) {\n//   // menu = JSON.parse(menu);\n\n//   let listaOptions = '\\n\\n';\n//   for (let i = 0; i < menu.options.length; i++) {\n//     listaOptions = listaOptions + (i + 1) + '. ' + menu.options[i] + '\\n';\n//   }\n\n//   return menu.text + listaOptions;\n// }\n\n\n{{resource.FunctionGetMenu}}\n\nconst run = (platform, menu) => {\n  let convertPlatform = platform.toLowerCase();\n  menu = JSON.parse(menu);\n  platform = platform.toLowerCase();\n\n  if (platform == 'instagram' || platform == 'messenger') {\n    const objectType = {\n      'type': `text/plain`\n    }\n    return objectType\n  };\n\n  let default_msg = {\n    \"text\": menu.text,\n    \"header\": '',\n    \"body\": menu.text,\n    \"footer\": '',\n    \"button\": 'Click and select',\n    \"title\": 'Menu',\n    \"namespaceTemplate\": '',\n    \"nameTemplate\": '',\n    \"options\": menu.options,\n    \"values\": menu.values,\n    \"submenu\": [],\n    \"description\": menu.description,\n    \"menuScope\": {\n      \"whatsappButton\": true,\n      \"whatsappList\": false,\n      \"blipchatQuickReply\": false,\n      \"blipchatMenu\": true,\n      \"defaultText\": false,\n      \"platform\": convertPlatform\n    },\n  };\n\n  var newMenu = getMenuForPlatform(default_msg);\n\n  return newMenu;\n};","inputVariables":["platform","inputOptionJs"],"outputVariable":"objMenu","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"6998181c-2d53-4126-9bec-05f62f2c8017","$typeOfContent":"","type":"ExecuteScript","$title":"contentJs","$invalid":false,"settings":{"function":"run","source":"function run(menu, platform, objMenu) {\n  objMenu = JSON.parse(objMenu);\n  platform = platform.toLowerCase();\n\n  switch (platform) {\n    case 'instagram':\n      return geraMenuNumerico(menu);\n\n    case 'messenger':\n      return geraMenuNumerico(menu);\n\n    default:\n      return objMenu.content;\n  }\n}\n\nfunction geraMenuNumerico(menu) {\n  menu = JSON.parse(menu);\n\n  let listaOptions = '\\n\\n';\n  for (let i = 0; i < menu.options.length; i++) {\n    listaOptions = listaOptions + '{{n1}}' + (i + 1) + '.{{n2}} ' + menu.options[i] + '\\n';\n  }\n\n  return menu.text + listaOptions;\n}","inputVariables":["inputOptionJs","platform","objMenu"],"outputVariable":"contentJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"19b44b1c-95c2-4d6f-be90-4d0f0d3f8a6e","$typeOfContent":"","type":"TrackEvent","$title":"pergunta sabe medidas exibicao","$invalid":false,"settings":{"extras":{},"category":"pergunta sabe medidas exibicao","action":"Exibicao"},"conditions":[]}],"$leavingCustomActions":[{"$id":"4c3fd580-c601-45cc-8eae-e805e71a605f","$typeOfContent":"","type":"ExecuteScript","$title":"validInputJs","$invalid":false,"settings":{"function":"run","source":"// ============================================================================\n//      TYPE\n// ============================================================================\n// - reserved => quando há alguma palavra reservada que o bot deverá processar, \n// como SAIR E MENU por exemplo\n// - error => quando alguma validação deverá retornar um erro para cair em exceção\n// - success => quando a validação foi bem sucedida.\n// ============================================================================\n//      INPUT\n// ============================================================================\n// Retorna o input após processamento.\n// - Se type == error => o input será a descrição do erro. Ex: ERRO CEP\n// - Se type == success => o input será o input original processado.\n// ============================================================================\n//      VALIDATION\n// ============================================================================\n// Retorna em qual validação o input foi processado. Ex: cep\n// ============================================================================\n{{resource.FunctionProcessInput}}\n\nfunction run(input, inputType, platform, menu) {\n    try {\n\n        // =================================================================================\n        //             ATENÇÃO: MANIPULAR SOMENTE AS DUAS CONSTANTES A SEGUIR\n        // =================================================================================\n        // - validacaoMenu => true para validação de Menu, false para Input\n        // - validacoesInput => insira aqui que tipo de validação de input vai ser  \n        //   necessário (se mais de um for selecionado, apenas o mais acima será validado)\n        // - erroMenuEspecial => altere somente se, caso a validação seja um Menu e para\n        //   este menu haja um tratamento diferente de exceção.\n        // =================================================================================\n        const validacaoMenu = true;\n        const erroMenuEspecial = 'ERRO DINAMICO';\n        const validacoesInput = {\n            data: false,\n            email: false,\n            cep: false,\n            img: false,\n            imgTxt: false,\n            nome: false\n        };\n        // ========================================================================\n\n        // Inicia o objeto que será retornado pela função\n        let processedInput = {\n            'type': null,\n            'input': null,\n            'validation': 'none'\n        }\n\n        // Verifica se o usuário digitou SAIR ou MENU\n        if (input == 'sair' || input == 'SAIR' || input == 'Sair') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'SAIR'\n            return JSON.stringify(processedInput)\n        } else if (input == 'voltar' || input == 'VOLTAR' || input == 'Menu' || input == 'Voltar' || input == 'menu' || input == 'MENU') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'VOLTAR'\n            return JSON.stringify(processedInput)\n        }\n\n        // Formata variáveis\n        menu = JSON.parse(menu);\n        platform = platform.toUpperCase()\n\n        if (validacaoMenu) {\n            // Validação de MENU\n            processedInput = validaMenu(input, menu, platform)\n\n            // Verifica se precisa mudar a mensagem de erro do Menu Dinâmico para o Especial\n            if ((processedInput.input == 'ERRO DINAMICO' || processedInput.input == 'ERRO NUMERICO') && erroMenuEspecial != '') {\n                processedInput.input = erroMenuEspecial; \n            }\n            return JSON.stringify(processedInput);\n\n        } else {\n            // Validação de INPUT\n            const val = Object.entries(validacoesInput);\n            processedInput = validaInput(val, input, inputType)\n\n            // Se nenhuma validação foi processada, retorna o input sem validação\n            if (processedInput.input == 'INPUT SEM VALIDAÇÕES') {\n                return JSON.stringify({type: 'success', input: input, validation: 'none'});\n\n            } else {\n                return JSON.stringify(processedInput);\n            }\n        }\n\n    } catch (e) {\n        return {type: 'error', input: 'ERRO INESPERADO', validation: 'none'}\n    }\n}","inputVariables":["input.content","input.type","platform","inputOptionJs"],"outputVariable":"validInputJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"ca0780fb-4590-4991-b281-fda1d115b2b6","$typeOfContent":"","type":"TrackEvent","$title":"pergunta sabe medidas selecao","$invalid":false,"settings":{"extras":{},"category":"pergunta sabe medidas selecao","action":"{{validInputJs@input}}"},"conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"},{"source":"input","comparison":"exists","values":[]}]},{"$id":"66155932-cd0b-4c34-9628-39d25d459551","$typeOfContent":"","type":"TrackEvent","$title":"pergunta sabe medidas inesperado","$invalid":false,"settings":{"extras":{},"category":"pergunta sabe medidas inesperado","action":"{{input.content}}"},"conditions":[{"source":"input","comparison":"exists","values":[]},{"source":"context","comparison":"equals","variable":"validInputJs@type","values":["error","reserved"]}]},{"$id":"7e8a0258-b590-4e06-89f5-389601bc1300","$typeOfContent":"","type":"SetVariable","$title":"hideInputText [false]","$invalid":false,"settings":{"variable":"hideInputText","value":"false"},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false,"typeOfStateId":"state"},"$tags":[{"background":"#61D36F","label":"Event tracking","id":"blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9","canChangeBackground":false},{"background":"#FFEC03","label":"userInput","id":"blip-tag-59565120-de68-cdcc-653c-94c14e2b5e9e","canChangeBackground":false},{"background":"#FF961E","label":"ExecuteScript","id":"blip-tag-4cffa4e2-3244-409f-90a7-9fff4b556eb1","canChangeBackground":false}],"id":"08a4cf74-6174-4e82-8e39-c012939c432b","$title":"[CP.0.0.0] [MENU] OLD","$position":{"top":"126px","left":"1417px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"a9639756-525b-46c7-b181-8d5c6ca57a74":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"fbf92afc-a1bf-400c-8e40-22d772bf16fa","type":"text/plain","content":"User input"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[],"$leavingCustomActions":[{"$id":"7d31e570-2f6e-4693-9895-eb1669fe5c4d","$typeOfContent":"","type":"Redirect","$title":"[GO TO] Service","$invalid":false,"settings":{"context":{"type":"text/plain","value":"{{service}}"},"address":"{{destination}}"},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"onboarding","$invalid":false},"$tags":[{"background":"#0A6045","label":"REDIRECT TO","id":"blip-tag-31fd5180-97e8-b29a-b296-110803b6277e","canChangeBackground":false}],"id":"a9639756-525b-46c7-b181-8d5c6ca57a74","$title":"[REDIRECT TO] Service","$position":{"top":"658px","left":"1060px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"addonsSettings":{"backgroundColor":"#c8e6c9","textColor":"#000000","commentsIdList":[]}},"bae30145-bd0b-4e50-a880-07a4c38e6a64":{"$contentActions":[{"action":{"$id":"73dbf7b9-c0d0-431f-980e-86a7a735cd58","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"3047035c-e4cc-4e9b-93fb-9b5b32713da8","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"3047035c-e4cc-4e9b-93fb-9b5b32713da8","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"c0c411e2-8f85-4762-a3f7-8809491f1b3b","$typeOfContent":"text","type":"SendMessage","settings":{"id":"dfd44a4c-746b-4aca-824d-b213d1865278","type":"text/plain","content":"Agora precisamos te conhecer.\n\n{{n1}}Qual é o seu nome?{{n2}}","metadata":{}},"$cardContent":{"document":{"id":"dfd44a4c-746b-4aca-824d-b213d1865278","type":"text/plain","content":"Agora precisamos te conhecer.\n\n{{n1}}Qual é o seu nome?{{n2}}"},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"input":{"bypass":false,"$cardContent":{"document":{"id":"be996d59-606a-485c-bd73-cb31970b6f66","type":"text/plain","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false,"expiration":"1:0"},"$invalid":false}],"$conditionOutputs":[{"stateId":"fallback","typeOfStateId":"state","$connId":"con_43","$id":"737f3f25-0c31-4344-b31c-bf74482582b1","conditions":[{"source":"input","comparison":"notExists","values":[]}],"$invalid":false},{"stateId":"27f4c628-11be-4cf0-ae90-d96ae971bac6","typeOfStateId":"state","$connId":"con_48","$id":"4fcb6830-c1b8-4c39-80e9-33838246cb6d","conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"}],"$invalid":false}],"$enteringCustomActions":[{"$id":"19b44b1c-95c2-4d6f-be90-4d0f0d3f8a6e","$typeOfContent":"","type":"TrackEvent","$title":"nome exibicao","$invalid":false,"settings":{"extras":{},"category":"nome exibicao","action":"Exibicao"},"conditions":[]}],"$leavingCustomActions":[{"$id":"4c3fd580-c601-45cc-8eae-e805e71a605f","$typeOfContent":"","type":"ExecuteScript","$title":"validInputJs","$invalid":false,"settings":{"function":"run","source":"function run(input) {\n\n    const regex = {\n        \"image\": /image/,\n        \"audio\": /audio/,\n        \"video\": /video/,\n        \"emoji\": /[\\u2600-\\u26ff]|[\\u2600-\\u27ff]|[\\u2700-\\u27bf]|\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff]|\\ud83c[\\udf00-\\udfff]|\\ud83d[\\udc00-\\ude4f]|\\ud83d[\\ude80-\\udeff]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\udffb-\\udfff]/,\n        \"link\": /^(((https?:\\/\\/)[^\\s.]+|(www))\\.[\\w][^\\s]+)$/,\n        \"arquivo\": /application|text\\/csv|text\\/html/,\n        \"figurinha\": /application\\/octet-stream|image\\/webp/,\n        \"numero\": /[0-9]/\n    }\n    let isString = input.replace(/[0-9]/g, 'ERRO NOME')\n    let name = isString.split(' ')\n\n    if (input.match(regex.image) || input.match(regex.audio) || input.match(regex.video) || input.match(regex.emoji) || input.match(regex.figurinha) || input.match(regex.link) || input.match(regex.arquivo) || isString.match(regex.numero)) {\n        return { type: 'error', input: 'ERRO NOME', validation: 'nome' }\n    }\n    else if (isString.includes('ERRO NOME')) {\n        return { type: 'error', input: 'ERRO NOME', validation: 'nome' }\n    }\n    else {\n        let str = isString.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase();\n        const arr = str.split(\" \");\n        for (var i = 0; i < arr.length; i++) {\n            arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n\n        }\n        const nomeSucess = arr.join(\" \");\n\n        return { type: 'success', input: nomeSucess, validation: 'nome' }\n    }\n    return { type: 'error', input: 'ERRO NOME', validation: 'nome' }\n}","inputVariables":["input.content"],"outputVariable":"validInputJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"ca0780fb-4590-4991-b281-fda1d115b2b6","$typeOfContent":"","type":"TrackEvent","$title":"nome input","$invalid":false,"settings":{"extras":{},"category":"nome input","action":"{{validInputJs@input}}"},"conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"},{"source":"input","comparison":"exists","values":[]}]},{"$id":"66155932-cd0b-4c34-9628-39d25d459551","$typeOfContent":"","type":"TrackEvent","$title":"nome inesperado","$invalid":false,"settings":{"extras":{},"category":"nome inesperado","action":"{{input.content}}"},"conditions":[{"source":"input","comparison":"exists","values":[]},{"source":"context","comparison":"equals","variable":"validInputJs@type","values":["error","reserved"]}]},{"$id":"7e8a0258-b590-4e06-89f5-389601bc1300","$typeOfContent":"","type":"SetVariable","$title":"hideInputText [false]","$invalid":false,"settings":{"variable":"hideInputText","value":"false"},"conditions":[]},{"$id":"646bac99-51c3-4d90-a4a3-4d4a71cd6766","$typeOfContent":"","type":"MergeContact","$title":"Nome","$invalid":false,"settings":{"extras":{},"name":"{{validInputJs@input}}"},"conditions":[{"values":["success"],"source":"context","comparison":"equals","variable":"validInputJs@type"}]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false,"typeOfStateId":"state"},"$tags":[{"background":"#61D36F","label":"Event tracking","id":"blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9","canChangeBackground":false},{"background":"#FFEC03","label":"userInput","id":"blip-tag-59565120-de68-cdcc-653c-94c14e2b5e9e","canChangeBackground":false},{"background":"#FF961E","label":"ExecuteScript","id":"blip-tag-4cffa4e2-3244-409f-90a7-9fff4b556eb1","canChangeBackground":false},{"background":"#2cc3d5","label":"Set Contact","id":"blip-tag-62378edf-474b-e74d-63f3-d12b9ca249fc","canChangeBackground":false}],"id":"bae30145-bd0b-4e50-a880-07a4c38e6a64","$title":"[CP.0.0.8] [INPUT] Nome","$position":{"top":"1785px","left":"1062px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"becab46e-0dd2-446a-8d00-1e1e07c5beba":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"d1f34960-965b-4eae-9b81-7bb2c78e43ea","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"4756b63b-8e0e-4907-9d85-905edbe34569","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"background":"#3A4A65","label":"GO TO","id":"blip-tag-bb8e8b45-c8b0-9b29-6cd8-fee9ba6347db","canChangeBackground":false}],"id":"becab46e-0dd2-446a-8d00-1e1e07c5beba","root":false,"$title":"[GO TO] Atendimento","$position":{"top":"482px","left":"818px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"addonsSettings":{"backgroundColor":"#fff9c4","textColor":"#000000"}},"c5f144de-42a0-4d33-b28a-a1d243b54b13":{"$contentActions":[{"action":{"$id":"046b29e7-30bb-4d79-8092-5ef2704bd7a8","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"36c14b8e-f0c6-47ff-9668-b4f632959a11","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"36c14b8e-f0c6-47ff-9668-b4f632959a11","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"6c604e75-386f-4622-87f3-9b4b1a777f3b","$typeOfContent":"text","type":"SendMessage","settings":{"id":"d8100245-7fe5-46f1-ac72-fff59e6bdced","type":"text/plain","content":"Nossa equipe irá te atender.\n\n{{n1}}Por favor, aguarde.{{n2}} ⏳","metadata":{}},"$cardContent":{"document":{"id":"d8100245-7fe5-46f1-ac72-fff59e6bdced","type":"text/plain","content":"Nossa equipe irá te atender.\n\n{{n1}}Por favor, aguarde.{{n2}} ⏳"},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"input":{"bypass":true,"$cardContent":{"document":{"id":"7cd000a7-9d3a-443f-b557-ebf032576970","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[{"$id":"4a0ba245-4db3-4bed-8557-e1fa1035181b","$typeOfContent":"","type":"TrackEvent","$title":"aviso transbordo exibicao","$invalid":false,"settings":{"extras":{},"category":"aviso transbordo exibicao","action":"exibicao"},"conditions":[]}],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"298d4178-2ba6-44f1-a49c-00f3beea487c","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"background":"#61D36F","label":"Event tracking","id":"blip-tag-ed2ab0b6-d476-fa9f-0ed2-e09dd9fec033","canChangeBackground":false}],"id":"c5f144de-42a0-4d33-b28a-a1d243b54b13","root":false,"$title":"[CP.0.0.7] Falar com atendente","$position":{"top":"1779px","left":"778px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"4756b63b-8e0e-4907-9d85-905edbe34569":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"72646539-edda-43cf-a60a-18773e5be1da","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[{"stateId":"c5f144de-42a0-4d33-b28a-a1d243b54b13","typeOfStateId":"state","$connId":"con_53","$id":"625caee7-964a-4760-9dc4-fb8e5ea8d697","conditions":[{"source":"context","comparison":"equals","values":["WhatsApp"],"variable":"platform"}],"$invalid":false},{"stateId":"bae30145-bd0b-4e50-a880-07a4c38e6a64","typeOfStateId":"state","$connId":"con_58","$id":"3a652ba9-392f-4798-bf6c-75c5bcdaab60","conditions":[{"source":"input","comparison":"exists","values":[]}],"$invalid":false}],"$enteringCustomActions":[],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"bae30145-bd0b-4e50-a880-07a4c38e6a64","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[],"id":"4756b63b-8e0e-4907-9d85-905edbe34569","root":false,"$title":"[Router] Plataforma","$position":{"top":"1649px","left":"896px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"addonsSettings":{"shape":"0 50% 0 50%","backgroundColor":"#bbdefb","textColor":"#000000"}},"27f4c628-11be-4cf0-ae90-d96ae971bac6":{"$contentActions":[{"action":{"$id":"73dbf7b9-c0d0-431f-980e-86a7a735cd58","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"3047035c-e4cc-4e9b-93fb-9b5b32713da8","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"3047035c-e4cc-4e9b-93fb-9b5b32713da8","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"c0c411e2-8f85-4762-a3f7-8809491f1b3b","$typeOfContent":"text","type":"SendMessage","settings":{"id":"dfd44a4c-746b-4aca-824d-b213d1865278","type":"text/plain","content":"{{n1}}E qual é o melhor telefone para contato?{{n2}}","metadata":{}},"$cardContent":{"document":{"id":"dfd44a4c-746b-4aca-824d-b213d1865278","type":"text/plain","content":"{{n1}}E qual é o melhor telefone para contato?{{n2}}"},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"input":{"bypass":false,"$cardContent":{"document":{"id":"be996d59-606a-485c-bd73-cb31970b6f66","type":"text/plain","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false,"expiration":"1:0"},"$invalid":false}],"$conditionOutputs":[{"stateId":"c5f144de-42a0-4d33-b28a-a1d243b54b13","typeOfStateId":"state","$connId":"con_63","$id":"c3169219-d610-4d8c-9f9d-fd9a0b6ca71f","conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"}],"$invalid":false}],"$enteringCustomActions":[{"$id":"19b44b1c-95c2-4d6f-be90-4d0f0d3f8a6e","$typeOfContent":"","type":"TrackEvent","$title":"telefone exibicao","$invalid":false,"settings":{"extras":{},"category":"telefone exibicao","action":"Exibicao"},"conditions":[]}],"$leavingCustomActions":[{"$id":"2d7d504a-1a37-413b-a9f4-3ff28a09add7","$typeOfContent":"","type":"ExecuteScript","$title":"validInputJs","$invalid":false,"settings":{"function":"run","source":"// ============================================================================\n//      TYPE\n// ============================================================================\n// - reserved => quando há alguma palavra reservada que o bot deverá processar, \n// como SAIR E MENU por exemplo\n// - error => quando alguma validação deverá retornar um erro para cair em exceção\n// - success => quando a validação foi bem sucedida.\n// ============================================================================\n//      INPUT\n// ============================================================================\n// Retorna o input após processamento.\n// - Se type == error => o input será a descrição do erro. Ex: ERRO CEP\n// - Se type == success => o input será o input original processado.\n// ============================================================================\n//      VALIDATION\n// ============================================================================\n// Retorna em qual validação o input foi processado. Ex: cep\n// ============================================================================\n{{resource.FunctionProcessInput}}\n\nfunction run(input, inputType, platform, menu) {\n    try {\n\n        // =================================================================================\n        //             ATENÇÃO: MANIPULAR SOMENTE AS DUAS CONSTANTES A SEGUIR\n        // =================================================================================\n        // - validacaoMenu => true para validação de Menu, false para Input\n        // - validacoesInput => insira aqui que tipo de validação de input vai ser  \n        //   necessário (se mais de um for selecionado, apenas o mais acima será validado)\n        // - erroMenuEspecial => altere somente se, caso a validação seja um Menu e para\n        //   este menu haja um tratamento diferente de exceção.\n        // =================================================================================\n        const validacaoMenu = false;\n        const erroMenuEspecial = 'ERRO DINAMICO';\n        const validacoesInput = {\n            telefone: true\n        };\n        // ========================================================================\n\n        // Inicia o objeto que será retornado pela função\n        let processedInput = {\n            'type': null,\n            'input': null,\n            'validation': 'none'\n        }\n\n        // Verifica se o usuário digitou SAIR ou MENU\n        if (input == 'sair' || input == 'SAIR' || input == 'Sair') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'SAIR'\n            return JSON.stringify(processedInput)\n        } else if (input == 'voltar' || input == 'VOLTAR' || input == 'Menu' || input == 'Voltar' || input == 'menu' || input == 'MENU') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'VOLTAR'\n            return JSON.stringify(processedInput)\n        }\n\n        // Formata variáveis\n        menu = JSON.parse(menu);\n        platform = platform.toUpperCase()\n\n        if (validacaoMenu) {\n            // Validação de MENU\n            processedInput = validaMenu(input, menu, platform)\n\n            // Verifica se precisa mudar a mensagem de erro do Menu Dinâmico para o Especial\n            if ((processedInput.input == 'ERRO DINAMICO' || processedInput.input == 'ERRO NUMERICO') && erroMenuEspecial != '') {\n                processedInput.input = erroMenuEspecial; \n            }\n            return JSON.stringify(processedInput);\n\n        } else {\n            // Validação de INPUT\n            const val = Object.entries(validacoesInput);\n            processedInput = validaInput(val, input, inputType)\n\n            // Se nenhuma validação foi processada, retorna o input sem validação\n            if (processedInput.input == 'INPUT SEM VALIDAÇÕES') {\n                return JSON.stringify({type: 'success', input: input, validation: 'none'});\n\n            } else {\n                return JSON.stringify(processedInput);\n            }\n        }\n\n    } catch (e) {\n        return {type: 'error', input: 'ERRO INESPERADO', validation: 'none'}\n    }\n}","inputVariables":["input.content","input.type","platform","inputOptionJs"],"outputVariable":"validInputJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"ca0780fb-4590-4991-b281-fda1d115b2b6","$typeOfContent":"","type":"TrackEvent","$title":"telefone input","$invalid":false,"settings":{"extras":{},"category":"telefone input","action":"{{validInputJs@input}}"},"conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"},{"source":"input","comparison":"exists","values":[]}]},{"$id":"66155932-cd0b-4c34-9628-39d25d459551","$typeOfContent":"","type":"TrackEvent","$title":"telefone inesperado","$invalid":false,"settings":{"extras":{},"category":"telefone inesperado","action":"{{input.content}}"},"conditions":[{"source":"input","comparison":"exists","values":[]},{"source":"context","comparison":"equals","variable":"validInputJs@type","values":["error","reserved"]}]},{"$id":"7e8a0258-b590-4e06-89f5-389601bc1300","$typeOfContent":"","type":"SetVariable","$title":"hideInputText [false]","$invalid":false,"settings":{"variable":"hideInputText","value":"false"},"conditions":[]},{"$id":"646bac99-51c3-4d90-a4a3-4d4a71cd6766","$typeOfContent":"","type":"MergeContact","$title":"Telefone","$invalid":false,"settings":{"extras":{},"phoneNumber":"{{validInputJs@input}}"},"conditions":[{"values":["success"],"source":"context","comparison":"equals","variable":"validInputJs@type"}]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false,"typeOfStateId":"state"},"$tags":[{"background":"#61D36F","label":"Event tracking","id":"blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9","canChangeBackground":false},{"background":"#FFEC03","label":"userInput","id":"blip-tag-59565120-de68-cdcc-653c-94c14e2b5e9e","canChangeBackground":false},{"background":"#FF961E","label":"ExecuteScript","id":"blip-tag-4cffa4e2-3244-409f-90a7-9fff4b556eb1","canChangeBackground":false},{"background":"#7762E3","label":"Set Contact","id":"blip-tag-62378edf-474b-e74d-63f3-d12b9ca249fc","canChangeBackground":false}],"id":"27f4c628-11be-4cf0-ae90-d96ae971bac6","$title":"[CP.0.0.9] [INPUT] Telefone","$position":{"top":"1929px","left":"1064px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"isAiGenerated":false},"556c434f-4e7f-46d6-ad5d-33960a7ae4fa":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"aa73fb47-4f8f-4eb3-aaf5-1594ff04c41f","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[{"stateId":"becab46e-0dd2-446a-8d00-1e1e07c5beba","typeOfStateId":"state","$connId":"con_68","$id":"33a62777-cbe4-4542-a186-56a92d78dedd","conditions":[{"source":"context","comparison":"equals","values":["IB02"],"variable":"validaIcebreakers@validation"}],"$invalid":false},{"stateId":"cbb78dac-cb14-4e1b-85a3-b25112444067","typeOfStateId":"state","$connId":"con_73","$id":"9a49f236-73c7-4bf5-af1a-67c356038a47","conditions":[{"source":"context","comparison":"equals","values":["IB03"],"variable":"validaIcebreakers@validation"}],"$invalid":false}],"$enteringCustomActions":[],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"08a4cf74-6174-4e82-8e39-c012939c432b","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"background":"#3A4A65","label":"GO TO","id":"blip-tag-bb8e8b45-c8b0-9b29-6cd8-fee9ba6347db","canChangeBackground":false}],"id":"556c434f-4e7f-46d6-ad5d-33960a7ae4fa","root":false,"$title":"[GO TO] Icebreaker","$position":{"top":"312px","left":"812px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"addonsSettings":{"backgroundColor":"#fff9c4","textColor":"#000000"}},"cc726834-df39-4f8f-946c-b2442fb75783":{"$contentActions":[{"action":{"$id":"73dbf7b9-c0d0-431f-980e-86a7a735cd58","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"3047035c-e4cc-4e9b-93fb-9b5b32713da8","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"3047035c-e4cc-4e9b-93fb-9b5b32713da8","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"c0c411e2-8f85-4762-a3f7-8809491f1b3b","$typeOfContent":"text","type":"SendMessage","settings":{"id":"dfd44a4c-746b-4aca-824d-b213d1865278","type":"text/plain","content":"Por favor, escreva as {{n1}}medidas{{n2}} nesta ordem: largura, perfil e aro.\n{{n1}}Exemplo: 175/70R14{{n2}}\n\n⚠️ Se não souber, escreva {{n1}}Não sei{{n2}}","metadata":{}},"$cardContent":{"document":{"id":"dfd44a4c-746b-4aca-824d-b213d1865278","type":"text/plain","content":"Por favor, escreva as {{n1}}medidas{{n2}} nesta ordem: largura, perfil e aro.\n{{n1}}Exemplo: 175/70R14{{n2}}\n\n⚠️ Se não souber, escreva {{n1}}Não sei{{n2}}"},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"input":{"bypass":false,"$cardContent":{"document":{"id":"be996d59-606a-485c-bd73-cb31970b6f66","type":"text/plain","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false,"expiration":"1:0"},"$invalid":false}],"$conditionOutputs":[{"stateId":"ba0dfd5f-b56c-490b-9b6a-9d9bcb82a684","typeOfStateId":"state","$connId":"con_78","$id":"4fcb6830-c1b8-4c39-80e9-33838246cb6d","conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"}],"$invalid":false}],"$enteringCustomActions":[{"$id":"19b44b1c-95c2-4d6f-be90-4d0f0d3f8a6e","$typeOfContent":"","type":"TrackEvent","$title":"escrever medidas exibicao","$invalid":false,"settings":{"extras":{},"category":"escrever medidas exibicao","action":"Exibicao"},"conditions":[]}],"$leavingCustomActions":[{"$id":"4c3fd580-c601-45cc-8eae-e805e71a605f","$typeOfContent":"","type":"ExecuteScript","$title":"validInputJs","$invalid":false,"settings":{"function":"run","source":"function run(input) {\n    // =====================================================================================\n    // CONFIG\n    // =====================================================================================\n    /** POSSÍVEIS FORMATOS DE MEDIDAS\n    115 30 24\n    115/30/24\n    115/30/R24\n    115 30 R24\n    175 70 aro14\n    175/70/aro14 \n*/\n    // let regex01 = /( |^)\\d{3}(\\/| )?\\d{2}(\\/| |R|r|aro)?(R|r|aro)? ?\\d{2}( |$)/g\n\tlet regex01 = /\\d{3}(\\/| )?\\d{2}(\\/| |R|r|aro)?(R|r|aro)? ?\\d{2}/g\n    let match01 = input.match(regex01)\n    // =====================================================================================\n    if (match01) {\n        let medidas = getLarguraPerfilAro(match01[0].trim())\n        if (medidas.type == 'success') {\n            return {\n                type: 'success',\n                input: input,\n                dados_identificados: {\n                    medidas: medidas.medidas\n                },\n                validation: 'medidasDePneu'\n            }\n        } else {\n            return { type: 'error', input: 'ERRO MEDIDAS', validation: 'medidasDePneu' }\n        }\n    } else {\n        return { type: 'error', input: 'ERRO MEDIDAS', validation: 'medidasDePneu' }\n    }\n}\n\nfunction validaPerfil(perfil) {\n    var perfis = ['30', '35', '40', '45', '50', '55', '60', '65', '70', '75', '80', '85', '90']\n    let validacao = perfis.includes(perfil) ? true : false\n    return validacao\n}\n\nfunction validaAro(aro) {\n    var aros = ['12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24']\n    let validacao = aros.includes(aro) ? true : false\n    return validacao\n}\n\nfunction getLarguraPerfilAro(medidas) {\n    /** POSSÍVEIS FORMATOS DE MEDIDAS\n    115 30 24\n    115/30/24\n    115/30/R24\n    115 30 R24\n    175 70 aro14\n    175/70/aro14 \n*/\n\n    let regex = /^\\d{3}(\\/| )?\\d{2}(\\/| |R|r|aro)?(R|r|aro)? ?\\d{2}$/g\n\n    if (medidas.match(regex)) {\n        while (medidas.search(' ') != -1) {\n            medidas = medidas.replace(' ', '')\n        }\n        while (medidas.search('/') != -1) {\n            medidas = medidas.replace('/', '')\n        }\n        while (medidas.search('R') != -1) {\n            medidas = medidas.replace('R', '')\n        }      \n        while (medidas.search('aro ') != -1) {\n            medidas = medidas.replace('aro ', '')\n        }\n        while (medidas.search('aro') != -1) {\n            medidas = medidas.replace('aro', '')\n        }\n        while (medidas.search('r') != -1) {\n            medidas = medidas.replace('r', '')\n        }  \n\n        let largura = medidas.slice(0, 3)\n        let perfil = medidas.slice(3, 5)\n        let aro = medidas.slice(5, 8)\n\n        // VALIDA PERFIL\n        let validPerfil = validaPerfil(perfil)\n        // VALIDA ARO\n        let validAro = validaAro(aro)\n\n        if (validPerfil && validAro) {\n            return {\n                type: 'success',\n                message: 'LARGURA, PERFIL E ARO ENCONTRADOS COM SUCESSO',\n                medidas: {\n                    largura: largura,\n                    perfil: perfil,\n                    aro: aro\n                }\n            }\n        } else {\n            return { type: 'error', message: 'ARO OU PERFIL INVÁLIDOS' }\n        }\n    } else {\n        return { type: 'error', message: 'MEDIDAS INVÁLIDAS OU NÃO ENCONTRADAS' }\n    }\n}","inputVariables":["input.content"],"outputVariable":"validInputJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"ca0780fb-4590-4991-b281-fda1d115b2b6","$typeOfContent":"","type":"TrackEvent","$title":"escrever medidas input","$invalid":false,"settings":{"extras":{},"category":"escrever medidas input","action":"{{validInputJs@input}}"},"conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"},{"source":"input","comparison":"exists","values":[]}]},{"$id":"66155932-cd0b-4c34-9628-39d25d459551","$typeOfContent":"","type":"TrackEvent","$title":"escrever medidas inesperado","$invalid":false,"settings":{"extras":{},"category":"escrever medidas inesperado","action":"{{input.content}}"},"conditions":[{"source":"input","comparison":"exists","values":[]},{"source":"context","comparison":"equals","variable":"validInputJs@type","values":["error","reserved"]}]},{"$id":"7e8a0258-b590-4e06-89f5-389601bc1300","$typeOfContent":"","type":"SetVariable","$title":"hideInputText [false]","$invalid":false,"settings":{"variable":"hideInputText","value":"false"},"conditions":[]},{"$id":"3667a576-3e26-4fd4-90e0-2a45abd9bbe7","$typeOfContent":"","type":"MergeContact","$title":"medidas","$invalid":false,"settings":{"extras":{"medidas":"{{validInputJs@dados_identificados.medidas}}"}},"conditions":[{"values":["success"],"source":"context","comparison":"equals","variable":"validInputJs@type"}]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"4756b63b-8e0e-4907-9d85-905edbe34569","$invalid":false,"typeOfStateId":"state"},"$tags":[{"background":"#61D36F","label":"Event tracking","id":"blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9","canChangeBackground":false},{"background":"#FFEC03","label":"userInput","id":"blip-tag-59565120-de68-cdcc-653c-94c14e2b5e9e","canChangeBackground":false},{"background":"#FF961E","label":"ExecuteScript","id":"blip-tag-4cffa4e2-3244-409f-90a7-9fff4b556eb1","canChangeBackground":false},{"background":"#2cc3d5","label":"Set Contact","id":"blip-tag-62378edf-474b-e74d-63f3-d12b9ca249fc","canChangeBackground":false}],"id":"cc726834-df39-4f8f-946c-b2442fb75783","$title":"[CP.0.0.1] [INPUT] Solicita Medidas","$position":{"top":"362px","left":"377px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"isAiGenerated":false},"ba0dfd5f-b56c-490b-9b6a-9d9bcb82a684":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"40858707-e931-47a2-9254-a356a213c1b1","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[{"stateId":"9638121c-e09a-4b45-8b63-38e6cc35d8f3","typeOfStateId":"state","$connId":"con_83","$id":"09f811e5-81d9-47ca-8422-cb8060cb91c9","conditions":[{"source":"input","comparison":"exists","values":[]}],"$invalid":false}],"$enteringCustomActions":[{"$id":"9bd1c231-019f-4289-86ce-3bbc88cd5ae3","$typeOfContent":"","type":"SetVariable","$title":"countTries","$invalid":false,"settings":{"variable":"countTries","value":"0"},"conditions":[]}],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"9638121c-e09a-4b45-8b63-38e6cc35d8f3","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"background":"#FF4A1E","label":"Set variable","id":"blip-tag-024ed08b-c8b4-9452-aa33-a09569f77a2d","canChangeBackground":false}],"id":"ba0dfd5f-b56c-490b-9b6a-9d9bcb82a684","root":false,"$title":"[GO TO] Busca Pneu","$position":{"top":"669px","left":"74px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"addonsSettings":{"backgroundColor":"#fff9c4","textColor":"#000000"}},"9638121c-e09a-4b45-8b63-38e6cc35d8f3":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"c495669f-2c10-47c4-9800-77529effe7c0","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[{"stateId":"35d49ca7-3f45-41c7-8d22-3faeb1659ef3","typeOfStateId":"state","$connId":"con_88","$id":"78f13b3f-5009-4e09-abcb-500e696d1bf4","conditions":[{"source":"context","comparison":"equals","values":["empty error"],"variable":"listaPneus@type"}],"$invalid":false},{"stateId":"0b6939d5-ef04-4ba2-8020-adebbfdf22b6","typeOfStateId":"state","$connId":"con_93","$id":"57d0b222-22a4-4239-aea1-0f81e443dcde","conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"listaPneus@type"}],"$invalid":false}],"$enteringCustomActions":[{"$id":"26a0986d-58d2-4ac6-8571-9300d46de33e","$typeOfContent":"","type":"ProcessHttp","$title":"Requisição HTTP","$invalid":false,"settings":{"headers":{"Authorization":"Basic Y2tfZGExYmI4ZDRmNTI2YjNlMDE3MmI2MTc1ZjVjNDVhNzg1MmZiN2YzZTpjc19lMWM0NzY2YWQxN2ExMjM2NWQ2MGIxNDc1ZjI3ZjBkNzMzNmYyZDQz"},"method":"GET","uri":"https://pneusnacional.com.br/wc-api/v3/products?filter[q]={{contact.extras.medidas@largura}}/{{contact.extras.medidas@perfil}}R{{contact.extras.medidas@aro}}&filter[post_status]=publish&fields=title,price,featured_src","responseStatusVariable":"statusGetPneus","responseBodyVariable":"responseGetPneus"},"conditions":[{"values":[],"source":"context","comparison":"exists","variable":"contact.extras.medidas"}]},{"$id":"5d98aa9a-8c34-4020-a95f-03dd3b7bcf1a","$typeOfContent":"","type":"ExecuteScript","$title":"listaPneus","$invalid":false,"settings":{"function":"run","source":"function run(status, response) {\n\ttry {\n\t\t\n\t\tresponse = JSON.parse(response)\n\n\t\tlet validaStatus = (status >= 200 && status <= 299) ? true : false\n\n\t\tif (validaStatus) {\n\t\t\tif (response.products.length > 0) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'success',\t\t\t\t\t\n\t\t\t\t\tstatus: status,\n\t\t\t\t\tresponse: response,\n\t\t\t\t\ttotal: response.products.length\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'empty error',\n\t\t\t\t\tinput: `NÃO ENCONTRADO NENHUM PNEU`,\n\t\t\t\t\tstatus: status,\n\t\t\t\t\tresponse: response\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn {\n\t\t\t\ttype: 'status error',\n\t\t\t\tinput: `ERRO DE API`,\n\t\t\t\tstatus: status,\n\t\t\t\tresponse: response\n\t\t\t}\n\t\t}\n\t} catch (e) {\n\t\treturn {\n\t\t\ttype: 'script error',\n\t\t\tinput: `ERRO DE SCRIPT`,\n\t\t\tstatus: status,\n\t\t\tresponse: response,\n\t\t\terror: e\n\t\t}\n\t}\n\n}","inputVariables":["statusGetPneus","responseGetPneus"],"outputVariable":"listaPneus","LocalTimeZoneEnabled":false},"conditions":[]}],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"6c92a5fd-13c7-4fe5-9d7e-2acaad83a687","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"background":"#FF1E90","label":"HTTP Request","id":"blip-tag-18211bad-4fa0-18bc-76b0-5aaf2cc784d8","canChangeBackground":false}],"id":"9638121c-e09a-4b45-8b63-38e6cc35d8f3","root":false,"$title":"API Busca Pneu","$position":{"top":"796px","left":"317px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"addonsSettings":{"backgroundColor":"#f06292","textColor":"#000000"}},"6c92a5fd-13c7-4fe5-9d7e-2acaad83a687":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"030ea2c3-c18d-4e59-ad4e-011ecb30a825","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[{"stateId":"9638121c-e09a-4b45-8b63-38e6cc35d8f3","typeOfStateId":"state","$connId":"con_98","$id":"ae4347a2-2bb5-40c9-a0fa-14ce439a9d5f","conditions":[{"source":"context","comparison":"equals","values":["1"],"variable":"countTries"}],"$invalid":false},{"stateId":"be39451f-c4e1-4b3a-9434-cbb26e45169f","typeOfStateId":"state","$connId":"con_103","$id":"100a40a1-f4f1-4ef6-b19a-05e554205e28","conditions":[{"source":"input","comparison":"exists","values":[]}],"$invalid":false}],"$enteringCustomActions":[{"$id":"0e88f553-f5ab-4edc-8aa5-56ffd5136b70","$typeOfContent":"","type":"ExecuteScript","$title":"countTries","$invalid":false,"settings":{"function":"run","source":"function run(countTries) {\n\ttry {\n\t\tcountTries = parseInt(countTries)\n\t\treturn countTries += 1\n\t} catch (e) {\n\t\treturn 1\n\t}\t\n\t\n}","inputVariables":["countTries"],"outputVariable":"countTries","LocalTimeZoneEnabled":false},"conditions":[]}],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"be39451f-c4e1-4b3a-9434-cbb26e45169f","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"background":"#FF961E","label":"executeScript","id":"blip-tag-10da33cd-3fdf-48d2-f8c7-275ffd02103c","canChangeBackground":false}],"id":"6c92a5fd-13c7-4fe5-9d7e-2acaad83a687","root":false,"$title":"[API Exception]","$position":{"top":"917px","left":"549px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"be39451f-c4e1-4b3a-9434-cbb26e45169f":{"$contentActions":[{"action":{"$id":"19f0dd00-01da-45bb-9e63-61ed9e347f15","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"6968b02f-9867-455a-9934-8863d2c5894b","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"6968b02f-9867-455a-9934-8863d2c5894b","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"b10c942b-2599-4b55-9a8b-25a1803a7b7b","$typeOfContent":"text","type":"SendMessage","settings":{"id":"f2eccb3f-9dd3-4473-8949-075998f24346","type":"text/plain","content":"Desculpe! No momento nosso sistema não está respondendo. ","metadata":{}},"$cardContent":{"document":{"id":"f2eccb3f-9dd3-4473-8949-075998f24346","type":"text/plain","content":"Desculpe! No momento nosso sistema não está respondendo. "},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"input":{"bypass":true,"$cardContent":{"document":{"id":"0488d1ba-e4b6-4b1e-a7dc-dbfa1447415d","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[{"$id":"3097d80c-07ba-4bd4-8607-f6bae2b059aa","$typeOfContent":"","type":"SetVariable","$title":"countTries","$invalid":false,"settings":{"variable":"countTries","value":"0"},"conditions":[]},{"$id":"d32d53f1-f3ce-4d6d-b119-de56e45d4820","$typeOfContent":"","type":"TrackEvent","$title":"erro formato exibicao","$invalid":false,"settings":{"extras":{},"category":"erro formato exibicao","action":"exibicao"},"conditions":[]}],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"becab46e-0dd2-446a-8d00-1e1e07c5beba","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"background":"#FF4A1E","label":"Set variable","id":"blip-tag-024ed08b-c8b4-9452-aa33-a09569f77a2d","canChangeBackground":false},{"background":"#61D36F","label":"Event tracking","id":"blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9","canChangeBackground":false}],"id":"be39451f-c4e1-4b3a-9434-cbb26e45169f","root":false,"$title":"[E.0.1.2] Erro API","$position":{"top":"916px","left":"747px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"0b6939d5-ef04-4ba2-8020-adebbfdf22b6":{"$contentActions":[{"action":{"$id":"de2631bd-8bc1-46fc-a0fa-8631382964a7","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"e948a176-ceb0-42d2-86d1-e84b18cc7332","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"e948a176-ceb0-42d2-86d1-e84b18cc7332","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"3c0f0e99-6912-4765-96ee-4aa2d0dd4030","$typeOfContent":"text","type":"SendMessage","settings":{"id":"8a5e29f3-9d1f-474d-ad95-ef6f02fa8c87","type":"text/plain","content":"{{text}}","metadata":{}},"$cardContent":{"document":{"id":"8a5e29f3-9d1f-474d-ad95-ef6f02fa8c87","type":"text/plain","content":"{{text}}"},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"input":{"bypass":false,"$cardContent":{"document":{"id":"be996d59-606a-485c-bd73-cb31970b6f66","type":"text/plain","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false,"expiration":"1:0"},"$invalid":false},{"action":{"$id":"d4b18f7d-2469-40ee-b6cb-1882044e4ba4","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"8b8d19bc-08d4-4a80-8b53-80d1178ccd6b","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000},"metadata":{"#stateName":"{{state.name}}","#stateId":"{{state.id}}","#messageId":"{{input.message@id}}","#previousStateId":"{{state.previous.id}}","#previousStateName":"{{state.previous.name}}"}},"$cardContent":{"document":{"id":"8b8d19bc-08d4-4a80-8b53-80d1178ccd6b","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false}],"$conditionOutputs":[{"stateId":"2e9b8c78-8814-4e29-bc5f-cf680dc9fe8b","typeOfStateId":"state","$connId":"con_108","$id":"00cf0d14-a380-4a01-83c1-49c4e00c8483","conditions":[{"source":"input","comparison":"notExists","values":[]}],"$invalid":false},{"stateId":"7093a2ef-a4d9-4d2f-a40a-8af6e64b93c3","typeOfStateId":"state","$connId":"con_113","$id":"dea99bc2-b344-40fe-b9ca-c3c30abaf9c7","conditions":[{"source":"context","comparison":"equals","values":["Quero outra marca"],"variable":"validInputJs@input"}],"$invalid":false},{"stateId":"79699b3e-9792-4285-afc5-b5aa42552260","typeOfStateId":"state","$connId":"con_118","$id":"83207273-45b3-4d15-9ede-f7cef92f8623","conditions":[{"source":"context","comparison":"equals","values":["Menu Principal"],"variable":"validInputJs@input"}],"$invalid":false},{"stateId":"33e10e26-4d3e-4c68-9556-bc18912106c2","typeOfStateId":"state","$connId":"con_123","$id":"245423b7-c6be-4f27-9249-c214542435a6","conditions":[{"source":"context","comparison":"equals","values":["0"],"variable":"validInputJs@input"}],"$invalid":false},{"stateId":"cbb78dac-cb14-4e1b-85a3-b25112444067","typeOfStateId":"state","$connId":"con_128","$id":"c3169219-d610-4d8c-9f9d-fd9a0b6ca71f","conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"}],"$invalid":false}],"$enteringCustomActions":[{"$id":"1dac995a-cf01-4521-8b53-605db0ab90cb","$typeOfContent":"","type":"ExecuteScript","$title":"inputOptionJs","$invalid":false,"settings":{"function":"run","source":"function run(hideInputText, sentenceOtherMistakesJs, returnJs, platform, lista) {\n\n  lista = JSON.parse(lista)\n  let totalDePneus = lista.total\n  let listaPneus = lista.response.products\n\n  let text = '💡Lembre-se: com pneus {{n1}}Goodyear você tem Durabilidade, Segurança e Garantia{{n2}} \\n\\n'\n  let opt = []\n  let itens = []\n  let preco;\n  let descontoAVista = 0.06 // 6% de desconto à vista\n  let precoDescontoAVista;\n\n  for (let i = 0; i < totalDePneus; i++) {\n    preco = parseFloat(listaPneus[i].price).toFixed(2).toString()\n    precoDescontoAVista = (preco * (1 - descontoAVista)).toFixed(2).toString()\n\n    preco = preco.replace('.', ',')\n    precoDescontoAVista = precoDescontoAVista.replace('.', ',')\n\n    text = text + `{{n1}}${i + 1}.{{n2}} ${listaPneus[i].title}\n    {{n1}}R$ ${precoDescontoAVista} via Pix{{n2}}\n    R$ ${preco} em 6x sem juros\\n\\n`\n\n    opt.push(i + 1)\n    itens.push({ name: [`${i + 1}`] })\n  }\n\n  const outraMarcaOpt = totalDePneus + 1\n  opt.push(`${outraMarcaOpt}`)\n  itens.push({ name: ['Quero outra marca', `${outraMarcaOpt}`] })\n  const menuPrincipalOpt = outraMarcaOpt + 1\n  opt.push(`${menuPrincipalOpt}`)\n  itens.push({ name: ['Menu Principal', `${menuPrincipalOpt}`] })\n\n  text = text + `------------------------------------\n{{n1}}${outraMarcaOpt}.{{n2}} Quero outra marca\n\n{{n1}}${menuPrincipalOpt}.{{n2}} Menu Principal\n\n{{n1}}0.{{n2}} Sair\n\n⚠️ A montagem é gratuita.\n\n💡{{n1}}Digite o número da opção que você escolher.{{n2}}`\n  \n  opt.push('0')\n  itens.push({ name: [`0`] })\n\n\n  let properties = {\n    text: text,\n    options: opt,\n    values: opt,\n    description: [],\n    itens: itens,\n    menuScope: {\n      \"whatsappButton\": false,\n      \"whatsappList\": false,\n      \"blipchatQuickReply\": false,\n      \"blipchatMenu\": false,\n      \"defaultText\": true\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Exibe mensagem e exceção no MENU\n  // if (hideInputText == 'true' || hideInputText == true) {\n  //   properties.text = sentenceOtherMistakesJs\n  // } else {\n  //   // Exibe mensagem de retorno\n  //   // if (returnJs == 'true' || returnJs == true) {\n  //   //   properties.text = 'Certo! Selecione a seguir como eu posso te ajudar hoje. 👇'\n  //   // }\n  // }\n  ////////////////////////////////////////////////////////////////////////////////\n\n  // properties.itens = addItensNumeracao(properties.itens);\n\n  // Adição de opções sem numeração\n  let opcoesExtras = []\n\n  opcoesExtras = addItens(opcoesExtras);\n\n  for (let i = 0; i < opcoesExtras.length; i++) {\n    properties.itens.push(opcoesExtras[i]);\n  }\n\n  return JSON.stringify(properties);\n}\n\nfunction addItens(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n  }\n  return newItens;\n}\n\nfunction addItensNumeracao(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n    newNames.push(`${i + 1}`); // Acrescenta numeração automática\n  }\n  return newItens;\n} \n","inputVariables":["hideInputText","sentenceOtherMistakesJs","return","platform","listaPneus"],"outputVariable":"inputOptionJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"007403b6-cbac-4510-9e49-3a491b6599f2","$typeOfContent":"","type":"ExecuteScript","$title":"Exibe Texto","$invalid":false,"settings":{"function":"run","source":"function run(iopt) {\n\tiopt = JSON.parse(iopt)\n\n\treturn iopt.text\n}","inputVariables":["inputOptionJs"],"outputVariable":"text","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"19b44b1c-95c2-4d6f-be90-4d0f0d3f8a6e","$typeOfContent":"","type":"TrackEvent","$title":"selecao pneu exibicao","$invalid":false,"settings":{"extras":{},"category":"selecao pneu exibicao","action":"Exibicao"},"conditions":[]}],"$leavingCustomActions":[{"$id":"2d7d504a-1a37-413b-a9f4-3ff28a09add7","$typeOfContent":"","type":"ExecuteScript","$title":"validInputJs","$invalid":false,"settings":{"function":"run","source":"// ============================================================================\n//      TYPE\n// ============================================================================\n// - reserved => quando há alguma palavra reservada que o bot deverá processar, \n// como SAIR E MENU por exemplo\n// - error => quando alguma validação deverá retornar um erro para cair em exceção\n// - success => quando a validação foi bem sucedida.\n// ============================================================================\n//      INPUT\n// ============================================================================\n// Retorna o input após processamento.\n// - Se type == error => o input será a descrição do erro. Ex: ERRO CEP\n// - Se type == success => o input será o input original processado.\n// ============================================================================\n//      VALIDATION\n// ============================================================================\n// Retorna em qual validação o input foi processado. Ex: cep\n// ============================================================================\n{{resource.FunctionProcessInput}}\n\nfunction run(input, inputType, platform, menu) {\n    try {\n\n        // =================================================================================\n        //             ATENÇÃO: MANIPULAR SOMENTE AS DUAS CONSTANTES A SEGUIR\n        // =================================================================================\n        // - validacaoMenu => true para validação de Menu, false para Input\n        // - validacoesInput => insira aqui que tipo de validação de input vai ser  \n        //   necessário (se mais de um for selecionado, apenas o mais acima será validado)\n        // - erroMenuEspecial => altere somente se, caso a validação seja um Menu e para\n        //   este menu haja um tratamento diferente de exceção.\n        // =================================================================================\n        const validacaoMenu = true;\n        const erroMenuEspecial = 'ERRO DINAMICO';\n        const validacoesInput = {\n            telefone: false\n        };\n        // ========================================================================\n\n        // Inicia o objeto que será retornado pela função\n        let processedInput = {\n            'type': null,\n            'input': null,\n            'validation': 'none'\n        }\n\n        // Verifica se o usuário digitou SAIR ou MENU\n        if (input == 'sair' || input == 'SAIR' || input == 'Sair') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'SAIR'\n            return JSON.stringify(processedInput)\n        } else if (input == 'voltar' || input == 'VOLTAR' || input == 'Menu' || input == 'Voltar' || input == 'menu' || input == 'MENU') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'VOLTAR'\n            return JSON.stringify(processedInput)\n        }\n\n        // Formata variáveis\n        menu = JSON.parse(menu);\n        platform = platform.toUpperCase()\n\n        if (validacaoMenu) {\n            // Validação de MENU\n            processedInput = validaMenu(input, menu, platform)\n\n            // Verifica se precisa mudar a mensagem de erro do Menu Dinâmico para o Especial\n            if ((processedInput.input == 'ERRO DINAMICO' || processedInput.input == 'ERRO NUMERICO') && erroMenuEspecial != '') {\n                processedInput.input = erroMenuEspecial; \n            }\n            return JSON.stringify(processedInput);\n\n        } else {\n            // Validação de INPUT\n            const val = Object.entries(validacoesInput);\n            processedInput = validaInput(val, input, inputType)\n\n            // Se nenhuma validação foi processada, retorna o input sem validação\n            if (processedInput.input == 'INPUT SEM VALIDAÇÕES') {\n                return JSON.stringify({type: 'success', input: input, validation: 'none'});\n\n            } else {\n                return JSON.stringify(processedInput);\n            }\n        }\n\n    } catch (e) {\n        return {type: 'error', input: 'ERRO INESPERADO', validation: 'none'}\n    }\n}","inputVariables":["input.content","input.type","platform","inputOptionJs"],"outputVariable":"validInputJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"ca0780fb-4590-4991-b281-fda1d115b2b6","$typeOfContent":"","type":"TrackEvent","$title":"selecao pneu selecao","$invalid":false,"settings":{"extras":{},"category":"selecao pneu selecao","action":"{{validInputJs@input}}"},"conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"},{"source":"input","comparison":"exists","values":[]}]},{"$id":"66155932-cd0b-4c34-9628-39d25d459551","$typeOfContent":"","type":"TrackEvent","$title":"selecao pneu inesperado","$invalid":false,"settings":{"extras":{},"category":"selecao pneu inesperado","action":"{{input.content}}"},"conditions":[{"source":"input","comparison":"exists","values":[]},{"source":"context","comparison":"equals","variable":"validInputJs@type","values":["error","reserved"]}]},{"$id":"6c40e60f-ea9a-4f21-981d-195e34324b5b","$typeOfContent":"","type":"SetVariable","$title":"inputEscolhaDoPneu","$invalid":false,"settings":{"variable":"inputEscolhaDoPneu","value":"{{validInputJs@input}}"},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"2e9b8c78-8814-4e29-bc5f-cf680dc9fe8b","$invalid":false,"typeOfStateId":"state"},"$tags":[{"background":"#61D36F","label":"Event tracking","id":"blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9","canChangeBackground":false},{"background":"#FFEC03","label":"userInput","id":"blip-tag-59565120-de68-cdcc-653c-94c14e2b5e9e","canChangeBackground":false},{"background":"#FF961E","label":"ExecuteScript","id":"blip-tag-4cffa4e2-3244-409f-90a7-9fff4b556eb1","canChangeBackground":false}],"id":"0b6939d5-ef04-4ba2-8020-adebbfdf22b6","$title":"[CP.0.0.2] [MENU] Pneu encontrado","$position":{"top":"916px","left":"318px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"isAiGenerated":false},"cbb78dac-cb14-4e1b-85a3-b25112444067":{"$contentActions":[{"action":{"$id":"b9188c99-5b31-4637-8d41-9e6e1063dcec","$typeOfContent":"text","type":"SendMessage","settings":{"id":"f85c85fc-b1ef-43b6-b4dc-691d538087ee","type":"text/plain","content":"{{inputText}}","metadata":{}},"$cardContent":{"document":{"id":"f85c85fc-b1ef-43b6-b4dc-691d538087ee","type":"text/plain","content":"{{inputText}}"},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"input":{"bypass":false,"$cardContent":{"document":{"id":"b83ee24d-d7ba-41fb-a113-4b8dac4999f5","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false,"expiration":"1:0"},"$invalid":false}],"$conditionOutputs":[{"stateId":"2e9b8c78-8814-4e29-bc5f-cf680dc9fe8b","typeOfStateId":"state","$connId":"con_133","$id":"35dd7a19-3f85-4760-8c43-d9a87a91ac22","conditions":[{"source":"input","comparison":"notExists","values":[]}],"$invalid":false},{"stateId":"978a397e-67a6-4b87-8caa-c6d2ab08cda9","typeOfStateId":"state","$connId":"con_138","$id":"724e948f-9600-4d0b-88fa-e2da19a9100d","conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"},{"values":["success"],"source":"context","comparison":"equals","variable":"validaAroNoCombo@type"}],"$invalid":false},{"stateId":"ffd47f3c-ffc7-4586-9255-cb4b12cf6bf6","typeOfStateId":"state","$connId":"con_143","$id":"23db5bef-45f2-4811-8813-dfc481828319","conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"}],"$invalid":false}],"$enteringCustomActions":[{"$id":"ac972514-cd0b-4651-8dbf-ccf090e01f2e","$typeOfContent":"","type":"TrackEvent","$title":"quantidade pneu exibicao","$invalid":false,"settings":{"extras":{},"category":"quantidade pneu exibicao","action":"exibicao"},"conditions":[]},{"$id":"ac3f0b58-f611-412f-878f-d491f7e768af","$typeOfContent":"","type":"ExecuteScript","$title":"inputText","$invalid":false,"settings":{"function":"run","source":"function run(hide) {\n\n    let inputText = `Quantos pneus você precisa?\n\n💡{{n1}}Por favor, digite um número.{{n2}}`\n\n    if (hide == true || hide == \"true\") {\n        return \"\";\n    } else  {\n        return inputText\n    }\n}","inputVariables":["hideInputText"],"outputVariable":"inputText","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"9a9c5fb3-bcfd-409b-97d9-a612ea95841f","$typeOfContent":"","type":"ExecuteScript","$title":"valida Aro no Combo","$invalid":false,"settings":{"function":"run","source":"function run(listaDeCombos, medidas) {\n\n\ttry {\n\t\tlistaDeCombos = JSON.parse(listaDeCombos)\n\t\tmedidas = JSON.parse(medidas)\n\n\t\tfor (let i = 0; i < listaDeCombos.length; i++) {\n\t\t\tif (listaDeCombos[i].aro == medidas.aro) {\n\t\t\t\treturn JSON.stringify({\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\taro: medidas.aro\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\treturn JSON.stringify({\n\t\t\ttype: 'error',\n\t\t\taro: `ARO ${medidas.aro} NÃO ENCONTRADO NA LISTA DE COMBO`\n\t\t})\n\n\t} catch (e) {\n\t\treturn `ERRO SCRIPT: ${e}`\n\t}\n}","inputVariables":["listaDeCombos","contact.extras.medidas"],"outputVariable":"validaAroNoCombo","LocalTimeZoneEnabled":false},"conditions":[]}],"$leavingCustomActions":[{"$id":"87ed7a33-8fd1-4e6c-9af4-0462b40677bb","$typeOfContent":"","type":"ExecuteScript","$title":"validInputJs","$invalid":false,"settings":{"function":"run","source":"// ============================================================================\n//      TYPE\n// ============================================================================\n// - reserved => quando há alguma palavra reservada que o bot deverá processar, \n// como SAIR E MENU por exemplo\n// - error => quando alguma validação deverá retornar um erro para cair em exceção\n// - success => quando a validação foi bem sucedida.\n// ============================================================================\n//      INPUT\n// ============================================================================\n// Retorna o input após processamento.\n// - Se type == error => o input será a descrição do erro. Ex: ERRO CEP\n// - Se type == success => o input será o input original processado.\n// ============================================================================\n//      VALIDATION\n// ============================================================================\n// Retorna em qual validação o input foi processado. Ex: cep\n// ============================================================================\n{{resource.FunctionProcessInput}}\n\nfunction run(input, inputType, platform, menu) {\n    try {\n\n        // =================================================================================\n        //             ATENÇÃO: MANIPULAR SOMENTE AS DUAS CONSTANTES A SEGUIR\n        // =================================================================================\n        // - validacaoMenu => true para validação de Menu, false para Input\n        // - validacoesInput => insira aqui que tipo de validação de input vai ser  \n        //   necessário (se mais de um for selecionado, apenas o mais acima será validado)\n        // - erroMenuEspecial => altere somente se, caso a validação seja um Menu e para\n        //   este menu haja um tratamento diferente de exceção.\n        // =================================================================================\n        const validacaoMenu = false;\n        const erroMenuEspecial = 'ERRO DINAMICO';\n        const validacoesInput = {\n            numeroInteiro: true\n        };\n        // ========================================================================\n\n        // Inicia o objeto que será retornado pela função\n        let processedInput = {\n            'type': null,\n            'input': null,\n            'validation': 'none'\n        }\n\n        // Verifica se o usuário digitou SAIR ou MENU\n        if (input == 'sair' || input == 'SAIR' || input == 'Sair') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'SAIR'\n            return JSON.stringify(processedInput)\n        } else if (input == 'voltar' || input == 'VOLTAR' || input == 'Menu' || input == 'Voltar' || input == 'menu' || input == 'MENU') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'VOLTAR'\n            return JSON.stringify(processedInput)\n        }\n\n        // Formata variáveis\n        menu = JSON.parse(menu);\n        platform = platform.toUpperCase()\n\n        if (validacaoMenu) {\n            // Validação de MENU\n            processedInput = validaMenu(input, menu, platform)\n\n            // Verifica se precisa mudar a mensagem de erro do Menu Dinâmico para o Especial\n            if ((processedInput.input == 'ERRO DINAMICO' || processedInput.input == 'ERRO NUMERICO') && erroMenuEspecial != '') {\n                processedInput.input = erroMenuEspecial; \n            }\n            return JSON.stringify(processedInput);\n\n        } else {\n            // Validação de INPUT\n            const val = Object.entries(validacoesInput);\n            processedInput = validaInput(val, input, inputType)\n\n            // Se nenhuma validação foi processada, retorna o input sem validação\n            if (processedInput.input == 'INPUT SEM VALIDAÇÕES') {\n                return JSON.stringify({type: 'success', input: input, validation: 'none'});\n\n            } else {\n                return JSON.stringify(processedInput);\n            }\n        }\n\n    } catch (e) {\n        return {type: 'error', input: 'ERRO INESPERADO', validation: 'none'}\n    }\n}","inputVariables":["input.content","input.type","platform","inputOptionJs"],"outputVariable":"validInputJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"b4b1a319-0290-46f0-b42b-e8eadd84e22c","$typeOfContent":"","type":"TrackEvent","$title":"quantidade pneu input","$invalid":false,"settings":{"extras":{},"category":"quantidade pneu input","action":"{{validInputJs@input}}"},"conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"},{"source":"input","comparison":"exists","values":[]}]},{"$id":"7a8bd51e-f93e-440f-9dd1-621108918624","$typeOfContent":"","type":"TrackEvent","$title":"quantidade pneu inesperado","$invalid":false,"settings":{"extras":{},"category":"quantidade pneu inesperado","action":"{{input.content}}"},"conditions":[{"source":"input","comparison":"exists","values":[]},{"source":"context","comparison":"equals","variable":"validInputJs@type","values":["error","reserved"]}]},{"$id":"554b930d-9ab4-4d1c-8347-6dd5ac498a70","$typeOfContent":"","type":"SetVariable","$title":"quantidade","$invalid":false,"settings":{"variable":"quantidade","value":"{{validInputJs@input}}"},"conditions":[{"values":["success"],"source":"context","comparison":"equals","variable":"validInputJs@type"}]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"2e9b8c78-8814-4e29-bc5f-cf680dc9fe8b","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"background":"#61D36F","label":"Event tracking","id":"blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9","canChangeBackground":false},{"background":"#FF961E","label":"executeScript","id":"blip-tag-10da33cd-3fdf-48d2-f8c7-275ffd02103c","canChangeBackground":false}],"id":"cbb78dac-cb14-4e1b-85a3-b25112444067","root":false,"$title":"[CP.0.0.3] Quantos precisa","$position":{"top":"1058px","left":"320px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"978a397e-67a6-4b87-8caa-c6d2ab08cda9":{"$contentActions":[{"action":{"$id":"40ccc244-df19-4bf9-a7d1-e4f5f4c46722","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"19eb619d-6f11-4923-b326-72ab8352b8ba","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"19eb619d-6f11-4923-b326-72ab8352b8ba","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"4f1117a2-8175-4ed0-806c-5858b0e32bcf","$typeOfContent":"media","type":"SendMessage","settings":{"id":"9757bc2d-73f2-4f98-bbd7-5f482e767ba3","type":"application/vnd.lime.media-link+json","content":{"title":"","text":"","type":"image/jpeg","uri":"{{pneuEscolhido@img}}","aspectRatio":"1:1"},"metadata":{}},"$cardContent":{"document":{"id":"9757bc2d-73f2-4f98-bbd7-5f482e767ba3","type":"application/vnd.lime.media-link+json","content":{"title":"","text":"","type":"image/jpeg","uri":"{{pneuEscolhido@img}}","aspectRatio":"1:1"}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"622fb863-9dfc-48a5-aaec-c4fab7b6857d","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"04e2ed27-a548-4576-8c87-bb7ee63b64ab","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"04e2ed27-a548-4576-8c87-bb7ee63b64ab","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"b5a6f654-d2d1-4e03-b68a-1f821b914c28","$typeOfContent":"raw-content","type":"SendRawMessage","settings":{"metadata":{},"type":"{{objMenu@type}}","rawContent":"{{contentJs}}"}},"$invalid":false},{"input":{"bypass":false,"$cardContent":{"document":{"id":"be996d59-606a-485c-bd73-cb31970b6f66","type":"text/plain","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false,"expiration":"1:0"},"$invalid":false}],"$conditionOutputs":[{"stateId":"2e9b8c78-8814-4e29-bc5f-cf680dc9fe8b","typeOfStateId":"state","$connId":"con_148","$id":"0af43f99-bb5a-4f84-8219-b2aeb7a11c0c","conditions":[{"source":"input","comparison":"notExists","values":[]}],"$invalid":false},{"stateId":"4756b63b-8e0e-4907-9d85-905edbe34569","typeOfStateId":"state","$connId":"con_153","$id":"66ac53c9-c71d-4f7d-841f-d064d874f993","conditions":[{"source":"context","comparison":"equals","values":["Fechar Pedido"],"variable":"validInputJs@input"}],"$invalid":false},{"stateId":"68cf7f81-678f-4c0a-ab5a-03f48eb006c0","typeOfStateId":"state","$connId":"con_158","$id":"d392b9f5-4dc5-444b-abb3-42cfb452119c","conditions":[{"source":"context","comparison":"equals","values":["Mais Opções"],"variable":"validInputJs@input"}],"$invalid":false},{"stateId":"473f65a2-d92b-4151-a169-bc1e568860ab","typeOfStateId":"state","$connId":"con_163","$id":"53f3d80a-d246-46b2-b785-688f2f312c7f","conditions":[{"source":"context","comparison":"equals","values":["Ganhe Desconto Extra"],"variable":"validInputJs@input"}],"$invalid":false}],"$enteringCustomActions":[{"$id":"06264bee-303b-4045-bccb-a4eb00d7a9f8","$typeOfContent":"","type":"ExecuteScript","$title":"pneuEscolhido","$invalid":false,"settings":{"function":"run","source":"function run(listaPneus, quantidade, validaIcebreakers, input) {\n\ttry {\n\t\tlistaPneus = JSON.parse(listaPneus)\n\t\tquantidade = parseInt(quantidade)\n\t\tvalidaIcebreakers = JSON.parse(validaIcebreakers)\n\n\t\tlet pneuEscolhido;\n\t\tlet preco;\n\n\t\tif (validaIcebreakers.type == 'error') {\n\t\t\tpneuEscolhido = listaPneus.response.products[input - 1]\n\t\t\tpreco = parseFloat(pneuEscolhido.price).toFixed(2)\n\t\t} else {\n\t\t\tif (validaIcebreakers.dados_identificados.desconto == true) {\n\t\t\t\tpneuEscolhido = listaPneus.response.products[0]\n\t\t\t\tpreco = parseFloat(pneuEscolhido.price).toFixed(2)\n\t\t\t\tpreco = (preco - validaIcebreakers.dados_identificados.valorDesconto)\n\t\t\t} else if (validaIcebreakers.dados_identificados.desconto == false) {\n\t\t\t\tpneuEscolhido = listaPneus.response.products[0]\n\t\t\t\tpreco = parseFloat(pneuEscolhido.price).toFixed(2)\n\t\t\t\tpreco = preco\n\t\t\t} else {\n\t\t\t\tpneuEscolhido = listaPneus.response.products[input - 1]\n\t\t\t\tpreco = parseFloat(pneuEscolhido.price).toFixed(2)\n\t\t\t}\n\t\t}\n\n\t\tlet precoTotal = (preco * quantidade).toFixed(2)\n\t\tlet descontoAVista = 0.06 // 6% de desconto à vista\n\t\tlet precoDescontoAVista = (precoTotal * (1 - descontoAVista)).toFixed(2)\n\t\tprecoTotal = precoTotal.toString().replace('.', ',')\t\t\n\t\tprecoDescontoAVista = precoDescontoAVista.toString().replace('.', ',')\n\n\t\tlet text = `Você escolheu {{n1}}${pneuEscolhido.title}{{n2}}\n\t\t\n{{n1}}Quantidade:{{n2}} ${quantidade}\n\t\t\n{{n1}}R$ ${precoDescontoAVista} via Pix{{n2}}\nR$ ${precoTotal} em 6x sem juros\n\t\t\n⚠️ A montagem é gratuita.  `\n\n\t\treturn JSON.stringify({\n\t\t\ttext: text,\n\t\t\timg: pneuEscolhido.featured_src,\n\t\t\tprecoTotal: precoTotal,\n\t\t\tprecoDescontoAVista: precoDescontoAVista,\n\t\t\tquantidade: quantidade,\n\t\t\tpneuEscolhido: pneuEscolhido\n\t\t})\n\n\t} catch (e) {\n\t\treturn `ERRO SCRIPT: ${e}`\n\t}\n}","inputVariables":["listaPneus","quantidade","validaIcebreakers","inputEscolhaDoPneu"],"outputVariable":"pneuEscolhido","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"f55cce79-5b5e-4210-8ab2-9db849621826","$typeOfContent":"","type":"ExecuteScript","$title":"text","$invalid":false,"settings":{"function":"run","source":"\nfunction run(pneuEscolhido) {\n\ttry {\n\t\tpneuEscolhido = JSON.parse(pneuEscolhido)\n\n\t\treturn pneuEscolhido.text\n\t} catch (e) {\n\t\treturn `ERRO SCRIPT: ${e}`\n\t}\n\n}","inputVariables":["pneuEscolhido"],"outputVariable":"text","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"0af07bf9-f694-4636-a08b-fc1d339ed605","$typeOfContent":"","type":"ExecuteScript","$title":"inputOptionJs","$invalid":false,"settings":{"function":"run","source":"function run(hideInputText, sentenceOtherMistakesJs, returnJs, platform, text) {\n\n  let text = text\n  let opt = [\"Ganhe Desconto Extra\", \"Fechar Pedido\", \"Mais Opções\"]\n  let properties = {\n    text: text,\n    options: opt,\n    values: opt,\n    description: [],\n    itens: [\n      { name: [opt[0], 'desconto', 'extra'] },\n      { name: [opt[1], 'fechar pedido', 'comprar', 'quero'] },\n      { name: [opt[2], 'mais', 'outros'] }\n    ],\n    menuScope: {\n      \"whatsappButton\": true,\n      \"whatsappList\": false,\n      \"blipchatQuickReply\": false,\n      \"blipchatMenu\": true,\n      \"defaultText\": false\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Exibe mensagem e exceção no MENU\n  // if (hideInputText == 'true' || hideInputText == true) {\n  //   properties.text = sentenceOtherMistakesJs\n  // } else {\n  //   // Exibe mensagem de retorno\n  //   // if (returnJs == 'true' || returnJs == true) {\n  //   //   properties.text = 'Certo! Selecione a seguir como eu posso te ajudar hoje. 👇'\n  //   // }\n  // }\n  ////////////////////////////////////////////////////////////////////////////////\n\n  properties.itens = addItensNumeracao(properties.itens);\n\n  // Adição de opções sem numeração\n  let opcoesExtras = []\n\n  opcoesExtras = addItens(opcoesExtras);\n\n  for (let i = 0; i < opcoesExtras.length; i++) {\n    properties.itens.push(opcoesExtras[i]);\n  }\n\n  return JSON.stringify(properties);\n}\n\nfunction addItens(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n  }\n  return newItens;\n}\n\nfunction addItensNumeracao(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n    newNames.push(`${i + 1}`); // Acrescenta numeração automática\n  }\n  return newItens;\n} \n","inputVariables":["hideInputText","sentenceOtherMistakesJs","return","platform","text"],"outputVariable":"inputOptionJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"19b44b1c-95c2-4d6f-be90-4d0f0d3f8a6e","$typeOfContent":"","type":"TrackEvent","$title":"saber mais servicos exibicao","$invalid":false,"settings":{"extras":{},"category":"saber mais servicos exibicao","action":"Exibicao"},"conditions":[]},{"$id":"dd135f32-7027-43c4-bda2-cfa3195f797d","$typeOfContent":"","type":"ExecuteScript","$title":"objMenu","$invalid":false,"settings":{"function":"run","source":"// {{resource.FunctionGetMenu}}\n\n// const run = (platform, menu) => {\n//   menu = JSON.parse(menu);\n//   platform = platform.toLowerCase();\n\n//   if (platform == 'instagram' || platform == 'messenger') {\n//     const objMenu = {\n//       'type': `text/plain`,\n//       'content' : geraMenuNumerico(menu)\n//     }\n//     return objMenu\n//   };\n\n//   let default_msg = {\n//     \"text\": menu.text,\n//     \"header\": 'Menu',\n//     \"body\": menu.text,\n//     \"footer\": '',\n//     \"button\": 'Menu',\n//     \"title\": 'Menu',\n//     \"namespaceTemplate\": '',\n//     \"nameTemplate\": '',\n//     \"options\": menu.options,\n//     \"values\": menu.values,\n//     \"submenu\": [],\n//     \"description\": menu.description,\n//     \"menuScope\": {\n//       ... menu.menuScope,\n//       \"platform\": platform\n//     },\n//   };\n\n//   var newMenu = getMenuForPlatform(default_msg);\n\n//   return newMenu;\n// };\n\n// function geraMenuNumerico(menu) {\n//   // menu = JSON.parse(menu);\n\n//   let listaOptions = '\\n\\n';\n//   for (let i = 0; i < menu.options.length; i++) {\n//     listaOptions = listaOptions + (i + 1) + '. ' + menu.options[i] + '\\n';\n//   }\n\n//   return menu.text + listaOptions;\n// }\n\n\n{{resource.FunctionGetMenu}}\n\nconst run = (platform, menu) => {\n  let convertPlatform = platform.toLowerCase();\n  menu = JSON.parse(menu);\n  platform = platform.toLowerCase();\n\n  if (platform == 'instagram' || platform == 'messenger') {\n    const objectType = {\n      'type': `text/plain`\n    }\n    return objectType\n  };\n\n  let default_msg = {\n    \"text\": menu.text,\n    \"header\": '',\n    \"body\": menu.text,\n    \"footer\": '',\n    \"button\": 'Marcas',\n    \"title\": 'Menu',\n    \"namespaceTemplate\": '',\n    \"nameTemplate\": '',\n    \"options\": menu.options,\n    \"values\": menu.values,\n    \"submenu\": [],\n    \"description\": menu.description,\n    \"menuScope\": {\n      ...menu.menuScope,\n      \"platform\": platform\n    }\n  };\n\n  var newMenu = getMenuForPlatform(default_msg);\n\n  return newMenu;\n};","inputVariables":["platform","inputOptionJs"],"outputVariable":"objMenu","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"d038c16d-9a6d-4c63-8a1d-33836c9fe6a8","$typeOfContent":"","type":"ExecuteScript","$title":"contentJs","$invalid":false,"settings":{"function":"run","source":"function run(menu, platform, objMenu) {\n  objMenu = JSON.parse(objMenu);\n  platform = platform.toLowerCase();\n\n  switch (platform) {\n    case 'instagram':\n      return geraMenuNumerico(menu);\n\n    case 'messenger':\n      return geraMenuNumerico(menu);\n\n    default:\n      return objMenu.content;\n  }\n}\n\nfunction geraMenuNumerico(menu) {\n  menu = JSON.parse(menu);\n\n  let listaOptions = '\\n\\n';\n  for (let i = 0; i < menu.options.length; i++) {\n    listaOptions = listaOptions + '{{n1}}' + (i + 1) + '.{{n2}} ' + menu.options[i] + '\\n';\n  }\n\n  return menu.text + listaOptions;\n}","inputVariables":["inputOptionJs","platform","objMenu"],"outputVariable":"contentJs","LocalTimeZoneEnabled":false},"conditions":[]}],"$leavingCustomActions":[{"$id":"4c3fd580-c601-45cc-8eae-e805e71a605f","$typeOfContent":"","type":"ExecuteScript","$title":"validInputJs","$invalid":false,"settings":{"function":"run","source":"// ============================================================================\n//      TYPE\n// ============================================================================\n// - reserved => quando há alguma palavra reservada que o bot deverá processar, \n// como SAIR E MENU por exemplo\n// - error => quando alguma validação deverá retornar um erro para cair em exceção\n// - success => quando a validação foi bem sucedida.\n// ============================================================================\n//      INPUT\n// ============================================================================\n// Retorna o input após processamento.\n// - Se type == error => o input será a descrição do erro. Ex: ERRO CEP\n// - Se type == success => o input será o input original processado.\n// ============================================================================\n//      VALIDATION\n// ============================================================================\n// Retorna em qual validação o input foi processado. Ex: cep\n// ============================================================================\n{{resource.FunctionProcessInput}}\n\nfunction run(input, inputType, platform, menu) {\n    try {\n\n        // =================================================================================\n        //             ATENÇÃO: MANIPULAR SOMENTE AS DUAS CONSTANTES A SEGUIR\n        // =================================================================================\n        // - validacaoMenu => true para validação de Menu, false para Input\n        // - validacoesInput => insira aqui que tipo de validação de input vai ser  \n        //   necessário (se mais de um for selecionado, apenas o mais acima será validado)\n        // - erroMenuEspecial => altere somente se, caso a validação seja um Menu e para\n        //   este menu haja um tratamento diferente de exceção.\n        // =================================================================================\n        const validacaoMenu = true;\n        const erroMenuEspecial = 'ERRO DINAMICO';\n        const validacoesInput = {\n            data: false,\n            email: false,\n            cep: false,\n            img: false,\n            imgTxt: false,\n            nome: false\n        };\n        // ========================================================================\n\n        // Inicia o objeto que será retornado pela função\n        let processedInput = {\n            'type': null,\n            'input': null,\n            'validation': 'none'\n        }\n\n        // Verifica se o usuário digitou SAIR ou MENU\n        if (input == 'sair' || input == 'SAIR' || input == 'Sair') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'SAIR'\n            return JSON.stringify(processedInput)\n        } else if (input == 'voltar' || input == 'VOLTAR' || input == 'Menu' || input == 'Voltar' || input == 'menu' || input == 'MENU') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'VOLTAR'\n            return JSON.stringify(processedInput)\n        }\n\n        // Formata variáveis\n        menu = JSON.parse(menu);\n        platform = platform.toUpperCase()\n\n        if (validacaoMenu) {\n            // Validação de MENU\n            processedInput = validaMenu(input, menu, platform)\n\n            // Verifica se precisa mudar a mensagem de erro do Menu Dinâmico para o Especial\n            if ((processedInput.input == 'ERRO DINAMICO' || processedInput.input == 'ERRO NUMERICO') && erroMenuEspecial != '') {\n                processedInput.input = erroMenuEspecial; \n            }\n            return JSON.stringify(processedInput);\n\n        } else {\n            // Validação de INPUT\n            const val = Object.entries(validacoesInput);\n            processedInput = validaInput(val, input, inputType)\n\n            // Se nenhuma validação foi processada, retorna o input sem validação\n            if (processedInput.input == 'INPUT SEM VALIDAÇÕES') {\n                return JSON.stringify({type: 'success', input: input, validation: 'none'});\n\n            } else {\n                return JSON.stringify(processedInput);\n            }\n        }\n\n    } catch (e) {\n        return {type: 'error', input: 'ERRO INESPERADO', validation: 'none'}\n    }\n}","inputVariables":["input.content","input.type","platform","inputOptionJs"],"outputVariable":"validInputJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"ca0780fb-4590-4991-b281-fda1d115b2b6","$typeOfContent":"","type":"TrackEvent","$title":"saber mais servicos selecao","$invalid":false,"settings":{"extras":{},"category":"saber mais servicos selecao","action":"{{validInputJs@input}}"},"conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"},{"source":"input","comparison":"exists","values":[]}]},{"$id":"66155932-cd0b-4c34-9628-39d25d459551","$typeOfContent":"","type":"TrackEvent","$title":"saber mais servicos inesperado","$invalid":false,"settings":{"extras":{},"category":"saber mais servicos inesperado","action":"{{input.content}}"},"conditions":[{"source":"input","comparison":"exists","values":[]},{"source":"context","comparison":"equals","variable":"validInputJs@type","values":["error","reserved"]}]},{"$id":"7e8a0258-b590-4e06-89f5-389601bc1300","$typeOfContent":"","type":"SetVariable","$title":"hideInputText [false]","$invalid":false,"settings":{"variable":"hideInputText","value":"false"},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"2e9b8c78-8814-4e29-bc5f-cf680dc9fe8b","$invalid":false,"typeOfStateId":"state"},"$tags":[{"background":"#61D36F","label":"Event tracking","id":"blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9","canChangeBackground":false},{"background":"#FFEC03","label":"userInput","id":"blip-tag-59565120-de68-cdcc-653c-94c14e2b5e9e","canChangeBackground":false},{"background":"#FF961E","label":"ExecuteScript","id":"blip-tag-4cffa4e2-3244-409f-90a7-9fff4b556eb1","canChangeBackground":false}],"id":"978a397e-67a6-4b87-8caa-c6d2ab08cda9","$title":"[CP.0.0.4] [MENU] Fechar Pedido","$position":{"top":"1220px","left":"133px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"isAiGenerated":false},"35d49ca7-3f45-41c7-8d22-3faeb1659ef3":{"$contentActions":[{"action":{"$id":"40ccc244-df19-4bf9-a7d1-e4f5f4c46722","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"19eb619d-6f11-4923-b326-72ab8352b8ba","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"19eb619d-6f11-4923-b326-72ab8352b8ba","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"b5a6f654-d2d1-4e03-b68a-1f821b914c28","$typeOfContent":"raw-content","type":"SendRawMessage","settings":{"metadata":{},"type":"{{objMenu@type}}","rawContent":"{{contentJs}}"}},"$invalid":false},{"input":{"bypass":false,"$cardContent":{"document":{"id":"be996d59-606a-485c-bd73-cb31970b6f66","type":"text/plain","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false,"expiration":"1:0"},"$invalid":false}],"$conditionOutputs":[{"stateId":"becab46e-0dd2-446a-8d00-1e1e07c5beba","typeOfStateId":"state","$connId":"con_168","$id":"91f8823d-95f0-4e50-b19b-ab291c87fb0d","conditions":[{"source":"context","comparison":"equals","values":["Falar com atendente"],"variable":"validInputJs@input"}],"$invalid":false},{"stateId":"cc726834-df39-4f8f-946c-b2442fb75783","typeOfStateId":"state","$connId":"con_173","$id":"a1079a8e-ded2-43ce-a096-b120c1514bb3","conditions":[{"source":"context","comparison":"equals","values":["Fazer outra busca"],"variable":"validInputJs@input"}],"$invalid":false}],"$enteringCustomActions":[{"$id":"0af07bf9-f694-4636-a08b-fc1d339ed605","$typeOfContent":"","type":"ExecuteScript","$title":"inputOptionJs","$invalid":false,"settings":{"function":"run","source":"function run(hideInputText, sentenceOtherMistakesJs, returnJs, platform) {\n\n  let text = `Desculpe! Não temos pneus com essas medidas no momento. Mas podemos providenciar para você!\n\nO que gostaria de fazer?`\n  let opt = [\"Fazer outra busca\", \"Falar com atendente\"]\n  let properties = {\n    text: text,\n    options: opt,\n    values: opt,\n    description: [],\n    itens: [\n      { name: [opt[0]] },\n      { name: [opt[1]] }\n    ],\n    menuScope: {\n      \"whatsappButton\": true,\n      \"whatsappList\": false,\n      \"blipchatQuickReply\": false,\n      \"blipchatMenu\": true,\n      \"defaultText\": true\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Exibe mensagem e exceção no MENU\n  // if (hideInputText == 'true' || hideInputText == true) {\n  //   properties.text = sentenceOtherMistakesJs\n  // } else {\n  //   // Exibe mensagem de retorno\n  //   // if (returnJs == 'true' || returnJs == true) {\n  //   //   properties.text = 'Certo! Selecione a seguir como eu posso te ajudar hoje. 👇'\n  //   // }\n  // }\n  ////////////////////////////////////////////////////////////////////////////////\n\n  properties.itens = addItensNumeracao(properties.itens);\n\n  // Adição de opções sem numeração\n  let opcoesExtras = []\n\n  opcoesExtras = addItens(opcoesExtras);\n\n  for (let i = 0; i < opcoesExtras.length; i++) {\n    properties.itens.push(opcoesExtras[i]);\n  }\n\n  return JSON.stringify(properties);\n}\n\nfunction addItens(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n  }\n  return newItens;\n}\n\nfunction addItensNumeracao(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n    newNames.push(`${i + 1}`); // Acrescenta numeração automática\n  }\n  return newItens;\n} \n","inputVariables":["hideInputText","sentenceOtherMistakesJs","return","platform"],"outputVariable":"inputOptionJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"19b44b1c-95c2-4d6f-be90-4d0f0d3f8a6e","$typeOfContent":"","type":"TrackEvent","$title":"sem retorno pneu exibicao","$invalid":false,"settings":{"extras":{},"category":"sem retorno pneu exibicao","action":"Exibicao"},"conditions":[]},{"$id":"a2fce016-9383-4e75-8e64-ac849910fd47","$typeOfContent":"","type":"ExecuteScript","$title":"objMenu","$invalid":false,"settings":{"function":"run","source":"// {{resource.FunctionGetMenu}}\n\n// const run = (platform, menu) => {\n//   menu = JSON.parse(menu);\n//   platform = platform.toLowerCase();\n\n//   if (platform == 'instagram' || platform == 'messenger') {\n//     const objMenu = {\n//       'type': `text/plain`,\n//       'content' : geraMenuNumerico(menu)\n//     }\n//     return objMenu\n//   };\n\n//   let default_msg = {\n//     \"text\": menu.text,\n//     \"header\": 'Menu',\n//     \"body\": menu.text,\n//     \"footer\": '',\n//     \"button\": 'Menu',\n//     \"title\": 'Menu',\n//     \"namespaceTemplate\": '',\n//     \"nameTemplate\": '',\n//     \"options\": menu.options,\n//     \"values\": menu.values,\n//     \"submenu\": [],\n//     \"description\": menu.description,\n//     \"menuScope\": {\n//       ... menu.menuScope,\n//       \"platform\": platform\n//     },\n//   };\n\n//   var newMenu = getMenuForPlatform(default_msg);\n\n//   return newMenu;\n// };\n\n// function geraMenuNumerico(menu) {\n//   // menu = JSON.parse(menu);\n\n//   let listaOptions = '\\n\\n';\n//   for (let i = 0; i < menu.options.length; i++) {\n//     listaOptions = listaOptions + (i + 1) + '. ' + menu.options[i] + '\\n';\n//   }\n\n//   return menu.text + listaOptions;\n// }\n\n\n{{resource.FunctionGetMenu}}\n\nconst run = (platform, menu) => {\n  let convertPlatform = platform.toLowerCase();\n  menu = JSON.parse(menu);\n  platform = platform.toLowerCase();\n\n  if (platform == 'instagram' || platform == 'messenger') {\n    const objectType = {\n      'type': `text/plain`\n    }\n    return objectType\n  };\n\n  let default_msg = {\n    \"text\": menu.text,\n    \"header\": '',\n    \"body\": menu.text,\n    \"footer\": '',\n    \"button\": 'Marcas',\n    \"title\": 'Menu',\n    \"namespaceTemplate\": '',\n    \"nameTemplate\": '',\n    \"options\": menu.options,\n    \"values\": menu.values,\n    \"submenu\": [],\n    \"description\": menu.description,\n    \"menuScope\": {\n      ...menu.menuScope,\n      \"platform\": platform\n    }\n  };\n\n  var newMenu = getMenuForPlatform(default_msg);\n\n  return newMenu;\n};","inputVariables":["platform","inputOptionJs"],"outputVariable":"objMenu","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"f00c25b0-fe32-4785-8030-4e79e993e3dd","$typeOfContent":"","type":"ExecuteScript","$title":"contentJs","$invalid":false,"settings":{"function":"run","source":"function run(menu, platform, objMenu) {\n  objMenu = JSON.parse(objMenu);\n  platform = platform.toLowerCase();\n\n  switch (platform) {\n    case 'instagram':\n      return geraMenuNumerico(menu);\n\n    case 'messenger':\n      return geraMenuNumerico(menu);\n\n    default:\n      return objMenu.content;\n  }\n}\n\nfunction geraMenuNumerico(menu) {\n  menu = JSON.parse(menu);\n\n  let listaOptions = '\\n\\n';\n  for (let i = 0; i < menu.options.length; i++) {\n    listaOptions = listaOptions + '{{n1}}' + (i + 1) + '.{{n2}} ' + menu.options[i] + '\\n';\n  }\n\n  return menu.text + listaOptions;\n}","inputVariables":["inputOptionJs","platform","objMenu"],"outputVariable":"contentJs","LocalTimeZoneEnabled":false},"conditions":[]}],"$leavingCustomActions":[{"$id":"4c3fd580-c601-45cc-8eae-e805e71a605f","$typeOfContent":"","type":"ExecuteScript","$title":"validInputJs","$invalid":false,"settings":{"function":"run","source":"// ============================================================================\n//      TYPE\n// ============================================================================\n// - reserved => quando há alguma palavra reservada que o bot deverá processar, \n// como SAIR E MENU por exemplo\n// - error => quando alguma validação deverá retornar um erro para cair em exceção\n// - success => quando a validação foi bem sucedida.\n// ============================================================================\n//      INPUT\n// ============================================================================\n// Retorna o input após processamento.\n// - Se type == error => o input será a descrição do erro. Ex: ERRO CEP\n// - Se type == success => o input será o input original processado.\n// ============================================================================\n//      VALIDATION\n// ============================================================================\n// Retorna em qual validação o input foi processado. Ex: cep\n// ============================================================================\n{{resource.FunctionProcessInput}}\n\nfunction run(input, inputType, platform, menu) {\n    try {\n\n        // =================================================================================\n        //             ATENÇÃO: MANIPULAR SOMENTE AS DUAS CONSTANTES A SEGUIR\n        // =================================================================================\n        // - validacaoMenu => true para validação de Menu, false para Input\n        // - validacoesInput => insira aqui que tipo de validação de input vai ser  \n        //   necessário (se mais de um for selecionado, apenas o mais acima será validado)\n        // - erroMenuEspecial => altere somente se, caso a validação seja um Menu e para\n        //   este menu haja um tratamento diferente de exceção.\n        // =================================================================================\n        const validacaoMenu = true;\n        const erroMenuEspecial = 'ERRO DINAMICO';\n        const validacoesInput = {\n            data: false,\n            email: false,\n            cep: false,\n            img: false,\n            imgTxt: false,\n            nome: false\n        };\n        // ========================================================================\n\n        // Inicia o objeto que será retornado pela função\n        let processedInput = {\n            'type': null,\n            'input': null,\n            'validation': 'none'\n        }\n\n        // Verifica se o usuário digitou SAIR ou MENU\n        if (input == 'sair' || input == 'SAIR' || input == 'Sair') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'SAIR'\n            return JSON.stringify(processedInput)\n        } else if (input == 'voltar' || input == 'VOLTAR' || input == 'Menu' || input == 'Voltar' || input == 'menu' || input == 'MENU') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'VOLTAR'\n            return JSON.stringify(processedInput)\n        }\n\n        // Formata variáveis\n        menu = JSON.parse(menu);\n        platform = platform.toUpperCase()\n\n        if (validacaoMenu) {\n            // Validação de MENU\n            processedInput = validaMenu(input, menu, platform)\n\n            // Verifica se precisa mudar a mensagem de erro do Menu Dinâmico para o Especial\n            if ((processedInput.input == 'ERRO DINAMICO' || processedInput.input == 'ERRO NUMERICO') && erroMenuEspecial != '') {\n                processedInput.input = erroMenuEspecial; \n            }\n            return JSON.stringify(processedInput);\n\n        } else {\n            // Validação de INPUT\n            const val = Object.entries(validacoesInput);\n            processedInput = validaInput(val, input, inputType)\n\n            // Se nenhuma validação foi processada, retorna o input sem validação\n            if (processedInput.input == 'INPUT SEM VALIDAÇÕES') {\n                return JSON.stringify({type: 'success', input: input, validation: 'none'});\n\n            } else {\n                return JSON.stringify(processedInput);\n            }\n        }\n\n    } catch (e) {\n        return {type: 'error', input: 'ERRO INESPERADO', validation: 'none'}\n    }\n}","inputVariables":["input.content","input.type","platform","inputOptionJs"],"outputVariable":"validInputJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"ca0780fb-4590-4991-b281-fda1d115b2b6","$typeOfContent":"","type":"TrackEvent","$title":"sem retorno pneu selecao","$invalid":false,"settings":{"extras":{},"category":"sem retorno pneu selecao","action":"{{validInputJs@input}}"},"conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"},{"source":"input","comparison":"exists","values":[]}]},{"$id":"66155932-cd0b-4c34-9628-39d25d459551","$typeOfContent":"","type":"TrackEvent","$title":"sem retorno pneu inesperado","$invalid":false,"settings":{"extras":{},"category":"sem retorno pneu inesperado","action":"{{input.content}}"},"conditions":[{"source":"input","comparison":"exists","values":[]},{"source":"context","comparison":"equals","variable":"validInputJs@type","values":["error","reserved"]}]},{"$id":"7e8a0258-b590-4e06-89f5-389601bc1300","$typeOfContent":"","type":"SetVariable","$title":"hideInputText [false]","$invalid":false,"settings":{"variable":"hideInputText","value":"false"},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false,"typeOfStateId":"state"},"$tags":[{"background":"#61D36F","label":"Event tracking","id":"blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9","canChangeBackground":false},{"background":"#FFEC03","label":"userInput","id":"blip-tag-59565120-de68-cdcc-653c-94c14e2b5e9e","canChangeBackground":false},{"background":"#FF961E","label":"ExecuteScript","id":"blip-tag-4cffa4e2-3244-409f-90a7-9fff4b556eb1","canChangeBackground":false}],"id":"35d49ca7-3f45-41c7-8d22-3faeb1659ef3","$title":"[CP.0.1.2] [MENU] Pneu não encontrado","$position":{"top":"613px","left":"541px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"isAiGenerated":false},"68cf7f81-678f-4c0a-ab5a-03f48eb006c0":{"$contentActions":[{"action":{"$id":"40ccc244-df19-4bf9-a7d1-e4f5f4c46722","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"19eb619d-6f11-4923-b326-72ab8352b8ba","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"19eb619d-6f11-4923-b326-72ab8352b8ba","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"b5a6f654-d2d1-4e03-b68a-1f821b914c28","$typeOfContent":"raw-content","type":"SendRawMessage","settings":{"metadata":{},"type":"{{objMenu@type}}","rawContent":"{{contentJs}}"}},"$invalid":false},{"input":{"bypass":false,"$cardContent":{"document":{"id":"be996d59-606a-485c-bd73-cb31970b6f66","type":"text/plain","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false,"expiration":"1:0"},"$invalid":false}],"$conditionOutputs":[{"stateId":"2e9b8c78-8814-4e29-bc5f-cf680dc9fe8b","typeOfStateId":"state","$connId":"con_178","$id":"f6115125-ba9d-4529-b65a-5a3d6a522638","conditions":[{"source":"input","comparison":"notExists","values":[]}],"$invalid":false},{"stateId":"79d75f57-4db5-4dee-88b4-432e5762509f","typeOfStateId":"state","$connId":"con_183","$id":"91f8823d-95f0-4e50-b19b-ab291c87fb0d","conditions":[{"source":"context","comparison":"equals","values":["Nova busca"],"variable":"validInputJs@input"}],"$invalid":false},{"stateId":"7093a2ef-a4d9-4d2f-a40a-8af6e64b93c3","typeOfStateId":"state","$connId":"con_188","$id":"a1079a8e-ded2-43ce-a096-b120c1514bb3","conditions":[{"source":"context","comparison":"equals","values":["Quero outra marca"],"variable":"validInputJs@input"}],"$invalid":false}],"$enteringCustomActions":[{"$id":"0af07bf9-f694-4636-a08b-fc1d339ed605","$typeOfContent":"","type":"ExecuteScript","$title":"inputOptionJs","$invalid":false,"settings":{"function":"run","source":"function run(hideInputText, sentenceOtherMistakesJs, returnJs, platform) {\n\n  let text = `Você quer fazer uma nova busca de pneus Goodyear ou deseja buscar outra marca?`\n  let opt = [\"Nova busca\", \"Quero outra marca\"]\n  let properties = {\n    text: text,\n    options: opt,\n    values: opt,\n    description: [],\n    itens: [\n      { name: [opt[0]] },\n      { name: [opt[1]] }\n    ],\n    menuScope: {\n      \"whatsappButton\": true,\n      \"whatsappList\": false,\n      \"blipchatQuickReply\": false,\n      \"blipchatMenu\": true,\n      \"defaultText\": true\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Exibe mensagem e exceção no MENU\n  // if (hideInputText == 'true' || hideInputText == true) {\n  //   properties.text = sentenceOtherMistakesJs\n  // } else {\n  //   // Exibe mensagem de retorno\n  //   // if (returnJs == 'true' || returnJs == true) {\n  //   //   properties.text = 'Certo! Selecione a seguir como eu posso te ajudar hoje. 👇'\n  //   // }\n  // }\n  ////////////////////////////////////////////////////////////////////////////////\n\n  properties.itens = addItensNumeracao(properties.itens);\n\n  // Adição de opções sem numeração\n  let opcoesExtras = []\n\n  opcoesExtras = addItens(opcoesExtras);\n\n  for (let i = 0; i < opcoesExtras.length; i++) {\n    properties.itens.push(opcoesExtras[i]);\n  }\n\n  return JSON.stringify(properties);\n}\n\nfunction addItens(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n  }\n  return newItens;\n}\n\nfunction addItensNumeracao(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n    newNames.push(`${i + 1}`); // Acrescenta numeração automática\n  }\n  return newItens;\n} \n","inputVariables":["hideInputText","sentenceOtherMistakesJs","return","platform"],"outputVariable":"inputOptionJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"2bbb381b-9024-49cd-95af-8a7721df2809","$typeOfContent":"","type":"ExecuteScript","$title":"objMenu","$invalid":false,"settings":{"function":"run","source":"// {{resource.FunctionGetMenu}}\n\n// const run = (platform, menu) => {\n//   menu = JSON.parse(menu);\n//   platform = platform.toLowerCase();\n\n//   if (platform == 'instagram' || platform == 'messenger') {\n//     const objMenu = {\n//       'type': `text/plain`,\n//       'content' : geraMenuNumerico(menu)\n//     }\n//     return objMenu\n//   };\n\n//   let default_msg = {\n//     \"text\": menu.text,\n//     \"header\": 'Menu',\n//     \"body\": menu.text,\n//     \"footer\": '',\n//     \"button\": 'Menu',\n//     \"title\": 'Menu',\n//     \"namespaceTemplate\": '',\n//     \"nameTemplate\": '',\n//     \"options\": menu.options,\n//     \"values\": menu.values,\n//     \"submenu\": [],\n//     \"description\": menu.description,\n//     \"menuScope\": {\n//       ... menu.menuScope,\n//       \"platform\": platform\n//     },\n//   };\n\n//   var newMenu = getMenuForPlatform(default_msg);\n\n//   return newMenu;\n// };\n\n// function geraMenuNumerico(menu) {\n//   // menu = JSON.parse(menu);\n\n//   let listaOptions = '\\n\\n';\n//   for (let i = 0; i < menu.options.length; i++) {\n//     listaOptions = listaOptions + (i + 1) + '. ' + menu.options[i] + '\\n';\n//   }\n\n//   return menu.text + listaOptions;\n// }\n\n\n{{resource.FunctionGetMenu}}\n\nconst run = (platform, menu) => {\n  let convertPlatform = platform.toLowerCase();\n  menu = JSON.parse(menu);\n  platform = platform.toLowerCase();\n\n  if (platform == 'instagram' || platform == 'messenger') {\n    const objectType = {\n      'type': `text/plain`\n    }\n    return objectType\n  };\n\n  let default_msg = {\n    \"text\": menu.text,\n    \"header\": '',\n    \"body\": menu.text,\n    \"footer\": '',\n    \"button\": 'Click and select',\n    \"title\": 'Menu',\n    \"namespaceTemplate\": '',\n    \"nameTemplate\": '',\n    \"options\": menu.options,\n    \"values\": menu.values,\n    \"submenu\": [],\n    \"description\": menu.description,\n    \"menuScope\": {\n      ... menu.menuScope,\n      \"platform\": platform\n    }\n  };\n\n  var newMenu = getMenuForPlatform(default_msg);\n\n  return newMenu;\n};","inputVariables":["platform","inputOptionJs"],"outputVariable":"objMenu","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"2352f1a1-8915-42b0-8734-54774a1654ec","$typeOfContent":"","type":"ExecuteScript","$title":"contentJs","$invalid":false,"settings":{"function":"run","source":"function run(menu, platform, objMenu) {\n  objMenu = JSON.parse(objMenu);\n  platform = platform.toLowerCase();\n\n  switch (platform) {\n    case 'instagram':\n      return geraMenuNumerico(menu);\n\n    case 'messenger':\n      return geraMenuNumerico(menu);\n\n    default:\n      return objMenu.content;\n  }\n}\n\nfunction geraMenuNumerico(menu) {\n  menu = JSON.parse(menu);\n\n  let listaOptions = '\\n\\n';\n  for (let i = 0; i < menu.options.length; i++) {\n    listaOptions = listaOptions + '{{n1}}' + (i + 1) + '.{{n2}} ' + menu.options[i] + '\\n';\n  }\n\n  return menu.text + listaOptions;\n}","inputVariables":["inputOptionJs","platform","objMenu"],"outputVariable":"contentJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"19b44b1c-95c2-4d6f-be90-4d0f0d3f8a6e","$typeOfContent":"","type":"TrackEvent","$title":"mais opcoes exibicao","$invalid":false,"settings":{"extras":{},"category":"mais opcoes exibicao","action":"Exibicao"},"conditions":[]}],"$leavingCustomActions":[{"$id":"4c3fd580-c601-45cc-8eae-e805e71a605f","$typeOfContent":"","type":"ExecuteScript","$title":"validInputJs","$invalid":false,"settings":{"function":"run","source":"// ============================================================================\n//      TYPE\n// ============================================================================\n// - reserved => quando há alguma palavra reservada que o bot deverá processar, \n// como SAIR E MENU por exemplo\n// - error => quando alguma validação deverá retornar um erro para cair em exceção\n// - success => quando a validação foi bem sucedida.\n// ============================================================================\n//      INPUT\n// ============================================================================\n// Retorna o input após processamento.\n// - Se type == error => o input será a descrição do erro. Ex: ERRO CEP\n// - Se type == success => o input será o input original processado.\n// ============================================================================\n//      VALIDATION\n// ============================================================================\n// Retorna em qual validação o input foi processado. Ex: cep\n// ============================================================================\n{{resource.FunctionProcessInput}}\n\nfunction run(input, inputType, platform, menu) {\n    try {\n\n        // =================================================================================\n        //             ATENÇÃO: MANIPULAR SOMENTE AS DUAS CONSTANTES A SEGUIR\n        // =================================================================================\n        // - validacaoMenu => true para validação de Menu, false para Input\n        // - validacoesInput => insira aqui que tipo de validação de input vai ser  \n        //   necessário (se mais de um for selecionado, apenas o mais acima será validado)\n        // - erroMenuEspecial => altere somente se, caso a validação seja um Menu e para\n        //   este menu haja um tratamento diferente de exceção.\n        // =================================================================================\n        const validacaoMenu = true;\n        const erroMenuEspecial = 'ERRO DINAMICO';\n        const validacoesInput = {\n            data: false,\n            email: false,\n            cep: false,\n            img: false,\n            imgTxt: false,\n            nome: false\n        };\n        // ========================================================================\n\n        // Inicia o objeto que será retornado pela função\n        let processedInput = {\n            'type': null,\n            'input': null,\n            'validation': 'none'\n        }\n\n        // Verifica se o usuário digitou SAIR ou MENU\n        if (input == 'sair' || input == 'SAIR' || input == 'Sair') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'SAIR'\n            return JSON.stringify(processedInput)\n        } else if (input == 'voltar' || input == 'VOLTAR' || input == 'Menu' || input == 'Voltar' || input == 'menu' || input == 'MENU') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'VOLTAR'\n            return JSON.stringify(processedInput)\n        }\n\n        // Formata variáveis\n        menu = JSON.parse(menu);\n        platform = platform.toUpperCase()\n\n        if (validacaoMenu) {\n            // Validação de MENU\n            processedInput = validaMenu(input, menu, platform)\n\n            // Verifica se precisa mudar a mensagem de erro do Menu Dinâmico para o Especial\n            if ((processedInput.input == 'ERRO DINAMICO' || processedInput.input == 'ERRO NUMERICO') && erroMenuEspecial != '') {\n                processedInput.input = erroMenuEspecial; \n            }\n            return JSON.stringify(processedInput);\n\n        } else {\n            // Validação de INPUT\n            const val = Object.entries(validacoesInput);\n            processedInput = validaInput(val, input, inputType)\n\n            // Se nenhuma validação foi processada, retorna o input sem validação\n            if (processedInput.input == 'INPUT SEM VALIDAÇÕES') {\n                return JSON.stringify({type: 'success', input: input, validation: 'none'});\n\n            } else {\n                return JSON.stringify(processedInput);\n            }\n        }\n\n    } catch (e) {\n        return {type: 'error', input: 'ERRO INESPERADO', validation: 'none'}\n    }\n}","inputVariables":["input.content","input.type","platform","inputOptionJs"],"outputVariable":"validInputJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"ca0780fb-4590-4991-b281-fda1d115b2b6","$typeOfContent":"","type":"TrackEvent","$title":"mais opcoes selecao","$invalid":false,"settings":{"extras":{},"category":"mais opcoes selecao","action":"{{validInputJs@input}}"},"conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"},{"source":"input","comparison":"exists","values":[]}]},{"$id":"66155932-cd0b-4c34-9628-39d25d459551","$typeOfContent":"","type":"TrackEvent","$title":"mais opcoes inesperado","$invalid":false,"settings":{"extras":{},"category":"mais opcoes inesperado","action":"{{input.content}}"},"conditions":[{"source":"input","comparison":"exists","values":[]},{"source":"context","comparison":"equals","variable":"validInputJs@type","values":["error","reserved"]}]},{"$id":"7e8a0258-b590-4e06-89f5-389601bc1300","$typeOfContent":"","type":"SetVariable","$title":"hideInputText [false]","$invalid":false,"settings":{"variable":"hideInputText","value":"false"},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"2e9b8c78-8814-4e29-bc5f-cf680dc9fe8b","$invalid":false,"typeOfStateId":"state"},"$tags":[{"background":"#61D36F","label":"Event tracking","id":"blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9","canChangeBackground":false},{"background":"#FFEC03","label":"userInput","id":"blip-tag-59565120-de68-cdcc-653c-94c14e2b5e9e","canChangeBackground":false},{"background":"#FF961E","label":"ExecuteScript","id":"blip-tag-4cffa4e2-3244-409f-90a7-9fff4b556eb1","canChangeBackground":false}],"id":"68cf7f81-678f-4c0a-ab5a-03f48eb006c0","$title":"[CP.0.1.0] Outra marca?","$position":{"top":"1434px","left":"337px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"isAiGenerated":false},"79d75f57-4db5-4dee-88b4-432e5762509f":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"f9ec0865-2b47-4b7f-9e17-6e301e0aaf4c","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"cc726834-df39-4f8f-946c-b2442fb75783","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"background":"#3A4A65","label":"GO TO","id":"blip-tag-bb8e8b45-c8b0-9b29-6cd8-fee9ba6347db","canChangeBackground":false}],"id":"79d75f57-4db5-4dee-88b4-432e5762509f","root":false,"$title":"[GO TO] CP.0.0.1","$position":{"top":"1574px","left":"340px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"addonsSettings":{"backgroundColor":"#fff9c4","textColor":"#000000"}},"7093a2ef-a4d9-4d2f-a40a-8af6e64b93c3":{"$contentActions":[{"action":{"$id":"40ccc244-df19-4bf9-a7d1-e4f5f4c46722","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"19eb619d-6f11-4923-b326-72ab8352b8ba","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"19eb619d-6f11-4923-b326-72ab8352b8ba","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"b5a6f654-d2d1-4e03-b68a-1f821b914c28","$typeOfContent":"raw-content","type":"SendRawMessage","settings":{"metadata":{},"type":"{{objMenu@type}}","rawContent":"{{contentJs}}"}},"$invalid":false},{"input":{"bypass":false,"$cardContent":{"document":{"id":"be996d59-606a-485c-bd73-cb31970b6f66","type":"text/plain","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false,"expiration":"1:0"},"$invalid":false}],"$conditionOutputs":[{"stateId":"2e9b8c78-8814-4e29-bc5f-cf680dc9fe8b","typeOfStateId":"state","$connId":"con_193","$id":"440bc462-e36a-42f4-befc-1801ecef57d6","conditions":[{"source":"input","comparison":"notExists","values":[]}],"$invalid":false},{"stateId":"ad5ae848-c392-4b69-816e-6959b743b4fe","typeOfStateId":"state","$connId":"con_198","$id":"517291cd-a4ba-4072-8d92-739e94f3ffe0","conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"}],"$invalid":false}],"$enteringCustomActions":[{"$id":"0af07bf9-f694-4636-a08b-fc1d339ed605","$typeOfContent":"","type":"ExecuteScript","$title":"inputOptionJs","$invalid":false,"settings":{"function":"run","source":"function run(hideInputText, sentenceOtherMistakesJs, returnJs, platform) {\n\n  let text = `Certo! Qual marca você está buscando?\n  \n{{n1}}Clique em menu e escolha sua marca.{{n2}}`\n  let opt = [\"Pirelli\", \"Michelin\", \"Bridgestone\", \"Continental\", \"Yokohama\", \"Importados\", \"Outra marca\"]\n  let properties = {\n    text: text,\n    options: opt,\n    values: opt,\n    description: [],\n    itens: [\n      { name: [opt[0]] },\n      { name: [opt[1]] },\n      { name: [opt[2]] },\n      { name: [opt[3]] },\n      { name: [opt[4]] },\n      { name: [opt[5]] },\n      { name: [opt[6]] },\n    ],\n    menuScope: {\n      \"whatsappButton\": false,\n      \"whatsappList\": true,\n      \"blipchatQuickReply\": false,\n      \"blipchatMenu\": true,\n      \"defaultText\": true\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Exibe mensagem e exceção no MENU\n  // if (hideInputText == 'true' || hideInputText == true) {\n  //   properties.text = sentenceOtherMistakesJs\n  // } else {\n  //   // Exibe mensagem de retorno\n  //   // if (returnJs == 'true' || returnJs == true) {\n  //   //   properties.text = 'Certo! Selecione a seguir como eu posso te ajudar hoje. 👇'\n  //   // }\n  // }\n  ////////////////////////////////////////////////////////////////////////////////\n\n  properties.itens = addItensNumeracao(properties.itens);\n\n  // Adição de opções sem numeração\n  let opcoesExtras = []\n\n  opcoesExtras = addItens(opcoesExtras);\n\n  for (let i = 0; i < opcoesExtras.length; i++) {\n    properties.itens.push(opcoesExtras[i]);\n  }\n\n  return JSON.stringify(properties);\n}\n\nfunction addItens(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n  }\n  return newItens;\n}\n\nfunction addItensNumeracao(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n    newNames.push(`${i + 1}`); // Acrescenta numeração automática\n  }\n  return newItens;\n} \n","inputVariables":["hideInputText","sentenceOtherMistakesJs","return","platform"],"outputVariable":"inputOptionJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"19b44b1c-95c2-4d6f-be90-4d0f0d3f8a6e","$typeOfContent":"","type":"TrackEvent","$title":"outra marca exibicao","$invalid":false,"settings":{"extras":{},"category":"outra marca exibicao","action":"Exibicao"},"conditions":[]},{"$id":"174b0b61-e303-480f-827b-692890cf8eb8","$typeOfContent":"","type":"ExecuteScript","$title":"objMenu","$invalid":false,"settings":{"function":"run","source":"// {{resource.FunctionGetMenu}}\n\n// const run = (platform, menu) => {\n//   menu = JSON.parse(menu);\n//   platform = platform.toLowerCase();\n\n//   if (platform == 'instagram' || platform == 'messenger') {\n//     const objMenu = {\n//       'type': `text/plain`,\n//       'content' : geraMenuNumerico(menu)\n//     }\n//     return objMenu\n//   };\n\n//   let default_msg = {\n//     \"text\": menu.text,\n//     \"header\": 'Menu',\n//     \"body\": menu.text,\n//     \"footer\": '',\n//     \"button\": 'Menu',\n//     \"title\": 'Menu',\n//     \"namespaceTemplate\": '',\n//     \"nameTemplate\": '',\n//     \"options\": menu.options,\n//     \"values\": menu.values,\n//     \"submenu\": [],\n//     \"description\": menu.description,\n//     \"menuScope\": {\n//       ... menu.menuScope,\n//       \"platform\": platform\n//     },\n//   };\n\n//   var newMenu = getMenuForPlatform(default_msg);\n\n//   return newMenu;\n// };\n\n// function geraMenuNumerico(menu) {\n//   // menu = JSON.parse(menu);\n\n//   let listaOptions = '\\n\\n';\n//   for (let i = 0; i < menu.options.length; i++) {\n//     listaOptions = listaOptions + (i + 1) + '. ' + menu.options[i] + '\\n';\n//   }\n\n//   return menu.text + listaOptions;\n// }\n\n\n{{resource.FunctionGetMenu}}\n\nconst run = (platform, menu) => {\n  let convertPlatform = platform.toLowerCase();\n  menu = JSON.parse(menu);\n  platform = platform.toLowerCase();\n\n  if (platform == 'instagram' || platform == 'messenger') {\n    const objectType = {\n      'type': `text/plain`\n    }\n    return objectType\n  };\n\n  let default_msg = {\n    \"text\": menu.text,\n    \"header\": '',\n    \"body\": menu.text,\n    \"footer\": '',\n    \"button\": 'Marcas',\n    \"title\": 'Menu',\n    \"namespaceTemplate\": '',\n    \"nameTemplate\": '',\n    \"options\": menu.options,\n    \"values\": menu.values,\n    \"submenu\": [],\n    \"description\": menu.description,\n    \"menuScope\": {\n      ...menu.menuScope,\n      \"platform\": platform\n    }\n  };\n\n  var newMenu = getMenuForPlatform(default_msg);\n\n  return newMenu;\n};","inputVariables":["platform","inputOptionJs"],"outputVariable":"objMenu","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"f83c65e1-cd96-4be0-a12d-48779055609e","$typeOfContent":"","type":"ExecuteScript","$title":"contentJs","$invalid":false,"settings":{"function":"run","source":"function run(menu, platform, objMenu) {\n  objMenu = JSON.parse(objMenu);\n  platform = platform.toLowerCase();\n\n  switch (platform) {\n    case 'instagram':\n      return geraMenuNumerico(menu);\n\n    case 'messenger':\n      return geraMenuNumerico(menu);\n\n    default:\n      return objMenu.content;\n  }\n}\n\nfunction geraMenuNumerico(menu) {\n  menu = JSON.parse(menu);\n\n  let listaOptions = '\\n\\n';\n  for (let i = 0; i < menu.options.length; i++) {\n    listaOptions = listaOptions + '{{n1}}' + (i + 1) + '.{{n2}} ' + menu.options[i] + '\\n';\n  }\n\n  return menu.text + listaOptions;\n}","inputVariables":["inputOptionJs","platform","objMenu"],"outputVariable":"contentJs","LocalTimeZoneEnabled":false},"conditions":[]}],"$leavingCustomActions":[{"$id":"4c3fd580-c601-45cc-8eae-e805e71a605f","$typeOfContent":"","type":"ExecuteScript","$title":"validInputJs","$invalid":false,"settings":{"function":"run","source":"// ============================================================================\n//      TYPE\n// ============================================================================\n// - reserved => quando há alguma palavra reservada que o bot deverá processar, \n// como SAIR E MENU por exemplo\n// - error => quando alguma validação deverá retornar um erro para cair em exceção\n// - success => quando a validação foi bem sucedida.\n// ============================================================================\n//      INPUT\n// ============================================================================\n// Retorna o input após processamento.\n// - Se type == error => o input será a descrição do erro. Ex: ERRO CEP\n// - Se type == success => o input será o input original processado.\n// ============================================================================\n//      VALIDATION\n// ============================================================================\n// Retorna em qual validação o input foi processado. Ex: cep\n// ============================================================================\n{{resource.FunctionProcessInput}}\n\nfunction run(input, inputType, platform, menu) {\n    try {\n\n        // =================================================================================\n        //             ATENÇÃO: MANIPULAR SOMENTE AS DUAS CONSTANTES A SEGUIR\n        // =================================================================================\n        // - validacaoMenu => true para validação de Menu, false para Input\n        // - validacoesInput => insira aqui que tipo de validação de input vai ser  \n        //   necessário (se mais de um for selecionado, apenas o mais acima será validado)\n        // - erroMenuEspecial => altere somente se, caso a validação seja um Menu e para\n        //   este menu haja um tratamento diferente de exceção.\n        // =================================================================================\n        const validacaoMenu = true;\n        const erroMenuEspecial = 'ERRO DINAMICO';\n        const validacoesInput = {\n            data: false,\n            email: false,\n            cep: false,\n            img: false,\n            imgTxt: false,\n            nome: false\n        };\n        // ========================================================================\n\n        // Inicia o objeto que será retornado pela função\n        let processedInput = {\n            'type': null,\n            'input': null,\n            'validation': 'none'\n        }\n\n        // Verifica se o usuário digitou SAIR ou MENU\n        if (input == 'sair' || input == 'SAIR' || input == 'Sair') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'SAIR'\n            return JSON.stringify(processedInput)\n        } else if (input == 'voltar' || input == 'VOLTAR' || input == 'Menu' || input == 'Voltar' || input == 'menu' || input == 'MENU') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'VOLTAR'\n            return JSON.stringify(processedInput)\n        }\n\n        // Formata variáveis\n        menu = JSON.parse(menu);\n        platform = platform.toUpperCase()\n\n        if (validacaoMenu) {\n            // Validação de MENU\n            processedInput = validaMenu(input, menu, platform)\n\n            // Verifica se precisa mudar a mensagem de erro do Menu Dinâmico para o Especial\n            if ((processedInput.input == 'ERRO DINAMICO' || processedInput.input == 'ERRO NUMERICO') && erroMenuEspecial != '') {\n                processedInput.input = erroMenuEspecial; \n            }\n            return JSON.stringify(processedInput);\n\n        } else {\n            // Validação de INPUT\n            const val = Object.entries(validacoesInput);\n            processedInput = validaInput(val, input, inputType)\n\n            // Se nenhuma validação foi processada, retorna o input sem validação\n            if (processedInput.input == 'INPUT SEM VALIDAÇÕES') {\n                return JSON.stringify({type: 'success', input: input, validation: 'none'});\n\n            } else {\n                return JSON.stringify(processedInput);\n            }\n        }\n\n    } catch (e) {\n        return {type: 'error', input: 'ERRO INESPERADO', validation: 'none'}\n    }\n}","inputVariables":["input.content","input.type","platform","inputOptionJs"],"outputVariable":"validInputJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"ca0780fb-4590-4991-b281-fda1d115b2b6","$typeOfContent":"","type":"TrackEvent","$title":"outra marca selecao","$invalid":false,"settings":{"extras":{},"category":"outra marca selecao","action":"{{validInputJs@input}}"},"conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"},{"source":"input","comparison":"exists","values":[]}]},{"$id":"66155932-cd0b-4c34-9628-39d25d459551","$typeOfContent":"","type":"TrackEvent","$title":"outra marca inesperado","$invalid":false,"settings":{"extras":{},"category":"outra marca inesperado","action":"{{input.content}}"},"conditions":[{"source":"input","comparison":"exists","values":[]},{"source":"context","comparison":"equals","variable":"validInputJs@type","values":["error","reserved"]}]},{"$id":"7e8a0258-b590-4e06-89f5-389601bc1300","$typeOfContent":"","type":"SetVariable","$title":"hideInputText [false]","$invalid":false,"settings":{"variable":"hideInputText","value":"false"},"conditions":[]},{"$id":"9afdd9d9-c8cb-40c6-a5d5-9c6b4f85749c","$typeOfContent":"","type":"MergeContact","$title":"outra_marca","$invalid":false,"settings":{"extras":{"outra_marca":"{{validInputJs@input}}"}},"conditions":[{"values":["success"],"source":"context","comparison":"equals","variable":"validInputJs@type"}]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"2e9b8c78-8814-4e29-bc5f-cf680dc9fe8b","$invalid":false,"typeOfStateId":"state"},"$tags":[{"background":"#61D36F","label":"Event tracking","id":"blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9","canChangeBackground":false},{"background":"#FFEC03","label":"userInput","id":"blip-tag-59565120-de68-cdcc-653c-94c14e2b5e9e","canChangeBackground":false},{"background":"#FF961E","label":"ExecuteScript","id":"blip-tag-4cffa4e2-3244-409f-90a7-9fff4b556eb1","canChangeBackground":false},{"background":"#2cc3d5","label":"Set Contact","id":"blip-tag-62378edf-474b-e74d-63f3-d12b9ca249fc","canChangeBackground":false}],"id":"7093a2ef-a4d9-4d2f-a40a-8af6e64b93c3","$title":"[CP.0.1.1] Seleção de Marca","$position":{"top":"1689px","left":"340px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"isAiGenerated":false},"ad5ae848-c392-4b69-816e-6959b743b4fe":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"d1f34960-965b-4eae-9b81-7bb2c78e43ea","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"4756b63b-8e0e-4907-9d85-905edbe34569","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"background":"#3A4A65","label":"GO TO","id":"blip-tag-bb8e8b45-c8b0-9b29-6cd8-fee9ba6347db","canChangeBackground":false}],"id":"ad5ae848-c392-4b69-816e-6959b743b4fe","root":false,"$title":"[GO TO] Atendimento [0]","$position":{"top":"1829px","left":"340px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"addonsSettings":{"backgroundColor":"#fff9c4","textColor":"#000000","commentsIdList":[]}},"ffd47f3c-ffc7-4586-9255-cb4b12cf6bf6":{"$contentActions":[{"action":{"$id":"40ccc244-df19-4bf9-a7d1-e4f5f4c46722","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"19eb619d-6f11-4923-b326-72ab8352b8ba","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"19eb619d-6f11-4923-b326-72ab8352b8ba","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"4f1117a2-8175-4ed0-806c-5858b0e32bcf","$typeOfContent":"media","type":"SendMessage","settings":{"id":"9757bc2d-73f2-4f98-bbd7-5f482e767ba3","type":"application/vnd.lime.media-link+json","content":{"title":"","text":"","type":"image/jpeg","uri":"{{pneuEscolhido@img}}","aspectRatio":"1:1"},"metadata":{}},"$cardContent":{"document":{"id":"9757bc2d-73f2-4f98-bbd7-5f482e767ba3","type":"application/vnd.lime.media-link+json","content":{"title":"","text":"","type":"image/jpeg","uri":"{{pneuEscolhido@img}}","aspectRatio":"1:1"}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"622fb863-9dfc-48a5-aaec-c4fab7b6857d","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"04e2ed27-a548-4576-8c87-bb7ee63b64ab","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"04e2ed27-a548-4576-8c87-bb7ee63b64ab","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"b5a6f654-d2d1-4e03-b68a-1f821b914c28","$typeOfContent":"raw-content","type":"SendRawMessage","settings":{"metadata":{},"type":"{{objMenu@type}}","rawContent":"{{contentJs}}"}},"$invalid":false},{"input":{"bypass":false,"$cardContent":{"document":{"id":"be996d59-606a-485c-bd73-cb31970b6f66","type":"text/plain","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false,"expiration":"1:0"},"$invalid":false}],"$conditionOutputs":[{"stateId":"2e9b8c78-8814-4e29-bc5f-cf680dc9fe8b","typeOfStateId":"state","$connId":"con_203","$id":"385d0e1a-fa0c-46d0-b166-5a9244bcd1a5","conditions":[{"source":"input","comparison":"notExists","values":[]}],"$invalid":false},{"stateId":"4756b63b-8e0e-4907-9d85-905edbe34569","typeOfStateId":"state","$connId":"con_208","$id":"66ac53c9-c71d-4f7d-841f-d064d874f993","conditions":[{"source":"context","comparison":"equals","values":["Fechar Pedido"],"variable":"validInputJs@input"}],"$invalid":false},{"stateId":"68cf7f81-678f-4c0a-ab5a-03f48eb006c0","typeOfStateId":"state","$connId":"con_213","$id":"d392b9f5-4dc5-444b-abb3-42cfb452119c","conditions":[{"source":"context","comparison":"equals","values":["Mais Opções"],"variable":"validInputJs@input"}],"$invalid":false}],"$enteringCustomActions":[{"$id":"06264bee-303b-4045-bccb-a4eb00d7a9f8","$typeOfContent":"","type":"ExecuteScript","$title":"pneuEscolhido","$invalid":false,"settings":{"function":"run","source":"function run(listaPneus, quantidade, validaIcebreakers, input) {\n\ttry {\n\t\tlistaPneus = JSON.parse(listaPneus)\n\t\tquantidade = parseInt(quantidade)\n\t\tvalidaIcebreakers = JSON.parse(validaIcebreakers)\n\n\t\tlet pneuEscolhido;\n\t\tlet preco;\n\n\t\tif (validaIcebreakers.type == 'error') {\n\t\t\tpneuEscolhido = listaPneus.response.products[input - 1]\n\t\t\tpreco = parseFloat(pneuEscolhido.price).toFixed(2)\n\t\t} else {\n\t\t\tif (validaIcebreakers.dados_identificados.desconto == true) {\n\t\t\t\tpneuEscolhido = listaPneus.response.products[0]\n\t\t\t\tpreco = parseFloat(pneuEscolhido.price).toFixed(2)\n\t\t\t\tpreco = (preco - validaIcebreakers.dados_identificados.valorDesconto)\n\t\t\t} else if (validaIcebreakers.dados_identificados.desconto == false) {\n\t\t\t\tpneuEscolhido = listaPneus.response.products[0]\n\t\t\t\tpreco = parseFloat(pneuEscolhido.price).toFixed(2)\n\t\t\t\tpreco = preco\n\t\t\t} else {\n\t\t\t\tpneuEscolhido = listaPneus.response.products[input - 1]\n\t\t\t\tpreco = parseFloat(pneuEscolhido.price).toFixed(2)\n\t\t\t}\n\t\t}\n\n\t\tlet precoTotal = preco * quantidade\n\t\tlet descontoAVista = 0.06 // 6% de desconto à vista\n\t\tlet precoDescontoAVista = (precoTotal * (1 - descontoAVista)).toFixed(2)\n\t\tprecoTotal = precoTotal.toString().replace('.', ',')\n\t\tprecoDescontoAVista = precoDescontoAVista.toString().replace('.', ',')\n\n\t\tlet text = `Você escolheu {{n1}}${pneuEscolhido.title}{{n2}}\n\t\t\n\t\t{{n1}}Quantidade:{{n2}} ${quantidade}\n\t\t\n\t\t{{n1}}R$ ${precoDescontoAVista} via Pix {{n2}}\n\t\tR$ ${precoTotal} em 6x sem juros\n\t\t\n\t\t⚠️ A montagem é gratuita.  `\n\n\t\treturn JSON.stringify({\n\t\t\ttext: text,\n\t\t\timg: pneuEscolhido.featured_src,\n\t\t\tprecoTotal: precoTotal,\n\t\t\tprecoDescontoAVista: precoDescontoAVista,\n\t\t\tquantidade: quantidade,\n\t\t\tpneuEscolhido: pneuEscolhido\n\t\t})\n\n\t} catch (e) {\n\t\treturn `ERRO SCRIPT: ${e}`\n\t}\n}","inputVariables":["listaPneus","quantidade","validaIcebreakers","inputEscolhaDoPneu"],"outputVariable":"pneuEscolhido","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"f55cce79-5b5e-4210-8ab2-9db849621826","$typeOfContent":"","type":"ExecuteScript","$title":"text","$invalid":false,"settings":{"function":"run","source":"\nfunction run(pneuEscolhido) {\n\ttry {\n\t\tpneuEscolhido = JSON.parse(pneuEscolhido)\n\n\t\treturn pneuEscolhido.text\n\t} catch (e) {\n\t\treturn `ERRO SCRIPT: ${e}`\n\t}\n\n}","inputVariables":["pneuEscolhido"],"outputVariable":"text","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"0af07bf9-f694-4636-a08b-fc1d339ed605","$typeOfContent":"","type":"ExecuteScript","$title":"inputOptionJs","$invalid":false,"settings":{"function":"run","source":"function run(hideInputText, sentenceOtherMistakesJs, returnJs, platform, text) {\n\n  let text = text\n  let opt = [\"Fechar Pedido\", \"Mais Opções\"]\n  let properties = {\n    text: text,\n    options: opt,\n    values: opt,\n    description: [],\n    itens: [      \n      { name: [opt[0], 'fechar pedido', 'comprar', 'quero'] },\n      { name: [opt[1], 'mais', 'outros'] }\n    ],\n    menuScope: {\n      \"whatsappButton\": true,\n      \"whatsappList\": false,\n      \"blipchatQuickReply\": false,\n      \"blipchatMenu\": true,\n      \"defaultText\": false\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Exibe mensagem e exceção no MENU\n  // if (hideInputText == 'true' || hideInputText == true) {\n  //   properties.text = sentenceOtherMistakesJs\n  // } else {\n  //   // Exibe mensagem de retorno\n  //   // if (returnJs == 'true' || returnJs == true) {\n  //   //   properties.text = 'Certo! Selecione a seguir como eu posso te ajudar hoje. 👇'\n  //   // }\n  // }\n  ////////////////////////////////////////////////////////////////////////////////\n\n  properties.itens = addItensNumeracao(properties.itens);\n\n  // Adição de opções sem numeração\n  let opcoesExtras = []\n\n  opcoesExtras = addItens(opcoesExtras);\n\n  for (let i = 0; i < opcoesExtras.length; i++) {\n    properties.itens.push(opcoesExtras[i]);\n  }\n\n  return JSON.stringify(properties);\n}\n\nfunction addItens(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n  }\n  return newItens;\n}\n\nfunction addItensNumeracao(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n    newNames.push(`${i + 1}`); // Acrescenta numeração automática\n  }\n  return newItens;\n} \n","inputVariables":["hideInputText","sentenceOtherMistakesJs","return","platform","text"],"outputVariable":"inputOptionJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"19b44b1c-95c2-4d6f-be90-4d0f0d3f8a6e","$typeOfContent":"","type":"TrackEvent","$title":"saber mais servicos exibicao","$invalid":false,"settings":{"extras":{},"category":"saber mais servicos exibicao","action":"Exibicao"},"conditions":[]},{"$id":"df80943c-7dd8-4c2a-8759-1c421a230ae5","$typeOfContent":"","type":"ExecuteScript","$title":"objMenu","$invalid":false,"settings":{"function":"run","source":"// {{resource.FunctionGetMenu}}\n\n// const run = (platform, menu) => {\n//   menu = JSON.parse(menu);\n//   platform = platform.toLowerCase();\n\n//   if (platform == 'instagram' || platform == 'messenger') {\n//     const objMenu = {\n//       'type': `text/plain`,\n//       'content' : geraMenuNumerico(menu)\n//     }\n//     return objMenu\n//   };\n\n//   let default_msg = {\n//     \"text\": menu.text,\n//     \"header\": 'Menu',\n//     \"body\": menu.text,\n//     \"footer\": '',\n//     \"button\": 'Menu',\n//     \"title\": 'Menu',\n//     \"namespaceTemplate\": '',\n//     \"nameTemplate\": '',\n//     \"options\": menu.options,\n//     \"values\": menu.values,\n//     \"submenu\": [],\n//     \"description\": menu.description,\n//     \"menuScope\": {\n//       ... menu.menuScope,\n//       \"platform\": platform\n//     },\n//   };\n\n//   var newMenu = getMenuForPlatform(default_msg);\n\n//   return newMenu;\n// };\n\n// function geraMenuNumerico(menu) {\n//   // menu = JSON.parse(menu);\n\n//   let listaOptions = '\\n\\n';\n//   for (let i = 0; i < menu.options.length; i++) {\n//     listaOptions = listaOptions + (i + 1) + '. ' + menu.options[i] + '\\n';\n//   }\n\n//   return menu.text + listaOptions;\n// }\n\n\n{{resource.FunctionGetMenu}}\n\nconst run = (platform, menu) => {\n  let convertPlatform = platform.toLowerCase();\n  menu = JSON.parse(menu);\n  platform = platform.toLowerCase();\n\n  if (platform == 'instagram' || platform == 'messenger') {\n    const objectType = {\n      'type': `text/plain`\n    }\n    return objectType\n  };\n\n  let default_msg = {\n    \"text\": menu.text,\n    \"header\": '',\n    \"body\": menu.text,\n    \"footer\": '',\n    \"button\": 'Marcas',\n    \"title\": 'Menu',\n    \"namespaceTemplate\": '',\n    \"nameTemplate\": '',\n    \"options\": menu.options,\n    \"values\": menu.values,\n    \"submenu\": [],\n    \"description\": menu.description,\n    \"menuScope\": {\n      ...menu.menuScope,\n      \"platform\": platform\n    }\n  };\n\n  var newMenu = getMenuForPlatform(default_msg);\n\n  return newMenu;\n};","inputVariables":["platform","inputOptionJs"],"outputVariable":"objMenu","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"6a795604-65e8-4258-bf68-384db431cc39","$typeOfContent":"","type":"ExecuteScript","$title":"contentJs","$invalid":false,"settings":{"function":"run","source":"function run(menu, platform, objMenu) {\n  objMenu = JSON.parse(objMenu);\n  platform = platform.toLowerCase();\n\n  switch (platform) {\n    case 'instagram':\n      return geraMenuNumerico(menu);\n\n    case 'messenger':\n      return geraMenuNumerico(menu);\n\n    default:\n      return objMenu.content;\n  }\n}\n\nfunction geraMenuNumerico(menu) {\n  menu = JSON.parse(menu);\n\n  let listaOptions = '\\n\\n';\n  for (let i = 0; i < menu.options.length; i++) {\n    listaOptions = listaOptions + '{{n1}}' + (i + 1) + '.{{n2}} ' + menu.options[i] + '\\n';\n  }\n\n  return menu.text + listaOptions;\n}","inputVariables":["inputOptionJs","platform","objMenu"],"outputVariable":"contentJs","LocalTimeZoneEnabled":false},"conditions":[]}],"$leavingCustomActions":[{"$id":"4c3fd580-c601-45cc-8eae-e805e71a605f","$typeOfContent":"","type":"ExecuteScript","$title":"validInputJs","$invalid":false,"settings":{"function":"run","source":"// ============================================================================\n//      TYPE\n// ============================================================================\n// - reserved => quando há alguma palavra reservada que o bot deverá processar, \n// como SAIR E MENU por exemplo\n// - error => quando alguma validação deverá retornar um erro para cair em exceção\n// - success => quando a validação foi bem sucedida.\n// ============================================================================\n//      INPUT\n// ============================================================================\n// Retorna o input após processamento.\n// - Se type == error => o input será a descrição do erro. Ex: ERRO CEP\n// - Se type == success => o input será o input original processado.\n// ============================================================================\n//      VALIDATION\n// ============================================================================\n// Retorna em qual validação o input foi processado. Ex: cep\n// ============================================================================\n{{resource.FunctionProcessInput}}\n\nfunction run(input, inputType, platform, menu) {\n    try {\n\n        // =================================================================================\n        //             ATENÇÃO: MANIPULAR SOMENTE AS DUAS CONSTANTES A SEGUIR\n        // =================================================================================\n        // - validacaoMenu => true para validação de Menu, false para Input\n        // - validacoesInput => insira aqui que tipo de validação de input vai ser  \n        //   necessário (se mais de um for selecionado, apenas o mais acima será validado)\n        // - erroMenuEspecial => altere somente se, caso a validação seja um Menu e para\n        //   este menu haja um tratamento diferente de exceção.\n        // =================================================================================\n        const validacaoMenu = true;\n        const erroMenuEspecial = 'ERRO DINAMICO';\n        const validacoesInput = {\n            data: false,\n            email: false,\n            cep: false,\n            img: false,\n            imgTxt: false,\n            nome: false\n        };\n        // ========================================================================\n\n        // Inicia o objeto que será retornado pela função\n        let processedInput = {\n            'type': null,\n            'input': null,\n            'validation': 'none'\n        }\n\n        // Verifica se o usuário digitou SAIR ou MENU\n        if (input == 'sair' || input == 'SAIR' || input == 'Sair') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'SAIR'\n            return JSON.stringify(processedInput)\n        } else if (input == 'voltar' || input == 'VOLTAR' || input == 'Menu' || input == 'Voltar' || input == 'menu' || input == 'MENU') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'VOLTAR'\n            return JSON.stringify(processedInput)\n        }\n\n        // Formata variáveis\n        menu = JSON.parse(menu);\n        platform = platform.toUpperCase()\n\n        if (validacaoMenu) {\n            // Validação de MENU\n            processedInput = validaMenu(input, menu, platform)\n\n            // Verifica se precisa mudar a mensagem de erro do Menu Dinâmico para o Especial\n            if ((processedInput.input == 'ERRO DINAMICO' || processedInput.input == 'ERRO NUMERICO') && erroMenuEspecial != '') {\n                processedInput.input = erroMenuEspecial; \n            }\n            return JSON.stringify(processedInput);\n\n        } else {\n            // Validação de INPUT\n            const val = Object.entries(validacoesInput);\n            processedInput = validaInput(val, input, inputType)\n\n            // Se nenhuma validação foi processada, retorna o input sem validação\n            if (processedInput.input == 'INPUT SEM VALIDAÇÕES') {\n                return JSON.stringify({type: 'success', input: input, validation: 'none'});\n\n            } else {\n                return JSON.stringify(processedInput);\n            }\n        }\n\n    } catch (e) {\n        return {type: 'error', input: 'ERRO INESPERADO', validation: 'none'}\n    }\n}","inputVariables":["input.content","input.type","platform","inputOptionJs"],"outputVariable":"validInputJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"ca0780fb-4590-4991-b281-fda1d115b2b6","$typeOfContent":"","type":"TrackEvent","$title":"saber mais servicos selecao","$invalid":false,"settings":{"extras":{},"category":"saber mais servicos selecao","action":"{{validInputJs@input}}"},"conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"},{"source":"input","comparison":"exists","values":[]}]},{"$id":"66155932-cd0b-4c34-9628-39d25d459551","$typeOfContent":"","type":"TrackEvent","$title":"saber mais servicos inesperado","$invalid":false,"settings":{"extras":{},"category":"saber mais servicos inesperado","action":"{{input.content}}"},"conditions":[{"source":"input","comparison":"exists","values":[]},{"source":"context","comparison":"equals","variable":"validInputJs@type","values":["error","reserved"]}]},{"$id":"7e8a0258-b590-4e06-89f5-389601bc1300","$typeOfContent":"","type":"SetVariable","$title":"hideInputText [false]","$invalid":false,"settings":{"variable":"hideInputText","value":"false"},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"2e9b8c78-8814-4e29-bc5f-cf680dc9fe8b","$invalid":false,"typeOfStateId":"state"},"$tags":[{"background":"#61D36F","label":"Event tracking","id":"blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9","canChangeBackground":false},{"background":"#FFEC03","label":"userInput","id":"blip-tag-59565120-de68-cdcc-653c-94c14e2b5e9e","canChangeBackground":false},{"background":"#FF961E","label":"ExecuteScript","id":"blip-tag-4cffa4e2-3244-409f-90a7-9fff4b556eb1","canChangeBackground":false}],"id":"ffd47f3c-ffc7-4586-9255-cb4b12cf6bf6","$title":"[CP.0.1.3] [MENU] Fechar Pedido","$position":{"top":"1221px","left":"531px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"isAiGenerated":false},"473f65a2-d92b-4151-a169-bc1e568860ab":{"$contentActions":[{"action":{"$id":"622fb863-9dfc-48a5-aaec-c4fab7b6857d","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"04e2ed27-a548-4576-8c87-bb7ee63b64ab","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"04e2ed27-a548-4576-8c87-bb7ee63b64ab","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"b5a6f654-d2d1-4e03-b68a-1f821b914c28","$typeOfContent":"raw-content","type":"SendRawMessage","settings":{"metadata":{},"type":"{{objMenu@type}}","rawContent":"{{contentJs}}"}},"$invalid":false},{"input":{"bypass":false,"$cardContent":{"document":{"id":"be996d59-606a-485c-bd73-cb31970b6f66","type":"text/plain","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false,"expiration":"1:0"},"$invalid":false}],"$conditionOutputs":[{"stateId":"2e9b8c78-8814-4e29-bc5f-cf680dc9fe8b","typeOfStateId":"state","$connId":"con_218","$id":"120c55c8-2232-4112-a65e-fd079275e1b9","conditions":[{"source":"input","comparison":"notExists","values":[]}],"$invalid":false},{"stateId":"4756b63b-8e0e-4907-9d85-905edbe34569","typeOfStateId":"state","$connId":"con_223","$id":"66ac53c9-c71d-4f7d-841f-d064d874f993","conditions":[{"source":"context","comparison":"equals","values":["Tirar dúvidas","Pneu sem o combo"],"variable":"validInputJs@input"}],"$invalid":false},{"stateId":"74abbd29-4b57-4360-bfbb-2e18a5631507","typeOfStateId":"state","$connId":"con_228","$id":"d392b9f5-4dc5-444b-abb3-42cfb452119c","conditions":[{"source":"context","comparison":"equals","values":["Combo + desconto"],"variable":"validInputJs@input"}],"$invalid":false}],"$enteringCustomActions":[{"$id":"8932e7c8-41df-4f86-a8fb-0ba40685c93e","$typeOfContent":"","type":"ExecuteScript","$title":"textosAExibir","$invalid":false,"settings":{"function":"run","source":"function run(pneuEscolhido, listaDeCombo, validaAroNoCombo) {\n    try {\n        pneuEscolhido = JSON.parse(pneuEscolhido)\n        listaDeCombo = JSON.parse(listaDeCombo)\n        validaAroNoCombo = JSON.parse(validaAroNoCombo)\n\n        const aro = validaAroNoCombo.aro\n        const modeloPneu = pneuEscolhido.pneuEscolhido.title\n        const quantidade = parseInt(pneuEscolhido.quantidade)\n        const precoTotal = parseFloat(pneuEscolhido.precoTotal)\n        const precoDescontoAVista = parseFloat(pneuEscolhido.precoDescontoAVista)\n\n        for (let i = 0; i < listaDeCombo.length; i++) {\n            if (aro == listaDeCombo[i].aro) {\n                var comboEscolhido = listaDeCombo[i];\n                break;\n            };\n        }\n\n        const descontoPorPneu = parseFloat(comboEscolhido.desconto_pneu)\n        const precoCombo = parseFloat(comboEscolhido.valor_combo)\n        const precoTotalAjustado = (precoTotal + precoCombo - (quantidade * descontoPorPneu)).toFixed(2)\n        const precoDescontoAVistaAjustado = (precoDescontoAVista + precoCombo - (quantidade * descontoPorPneu)).toFixed(2)\n\n        const precoTotalExibicao = precoTotalAjustado.toString().replace('.', ',')\n        const precoDescontoAVistaExibicao = precoDescontoAVistaAjustado.toString().replace('.', ',')\n\n        // ======================================================= \n        // MONTA OS DOIS PRÓXIMOS TEXTOS A SEREM EXIBIDOS\n        // ======================================================= \n\n        const texto01 = `Você pode aproveitar a instalação do pneu do seu carro para adquirir nosso combo de serviços que é ESSENCIAL para seu veículo.\n\nVocê ganha um desconto adicional de {{n1}}R$ ${comboEscolhido.desconto_pneu}{{n2}} por cada pneu comprado.\n\nO combo inclui:\n- Montagem dos pneus\n- Bico para os pneus comprados\n- Calibragem dos pneus\n- 4 balanceamentos\n- Rodízio dos pneus\n- Diagnóstico de suspensão e freios\n- Alinhamento 3d (1 eixo)\n\nValor do combo: {{n1}}R$ ${comboEscolhido.valor_combo}{{n2}}.\n\n💡{{n1}}O combo de serviços é opcional{{n2}}`\n\n        const texto02 = `Resumo do seu pedido. ✅\n        \n{{n1}}${quantidade} pneus ${modeloPneu} + Combo de serviços{{n2}}\n\nValor total:\n{{n1}}R$ ${precoDescontoAVistaExibicao} via Pix{{n2}}\nR$ ${precoTotalExibicao} em 6x sem juros\n\n⚠️ A montagem é gratuita.`\n\n        return JSON.stringify({ \n            texto01: texto01, \n            texto02: texto02            \n         })\n\n    } catch (e) {\n        return `ERRO SCRIPT: ${e}`\n    }\n}","inputVariables":["pneuEscolhido","listaDeCombos","validaAroNoCombo"],"outputVariable":"textosAExibir","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"3635fe82-32d3-4e74-a2f6-4e9d813e30aa","$typeOfContent":"","type":"ExecuteScript","$title":"texto01","$invalid":false,"settings":{"function":"run","source":"function run(textosAExibir) {\n\ttextosAExibir = JSON.parse(textosAExibir)\n\n\treturn textosAExibir.texto01\n}","inputVariables":["textosAExibir"],"outputVariable":"texto01","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"0af07bf9-f694-4636-a08b-fc1d339ed605","$typeOfContent":"","type":"ExecuteScript","$title":"inputOptionJs","$invalid":false,"settings":{"function":"run","source":"function run(hideInputText, sentenceOtherMistakesJs, returnJs, platform, text) {\n\n  let text = text\n  let opt = [\"Combo + desconto\", \"Tirar dúvidas\", \"Pneu sem o combo\"]\n  let properties = {\n    text: text,\n    options: opt,\n    values: opt,\n    description: [],\n    itens: [\n      { name: [opt[0]] },\n      { name: [opt[1]] },\n      { name: [opt[2]] }\n    ],\n    menuScope: {\n      \"whatsappButton\": true,\n      \"whatsappList\": false,\n      \"blipchatQuickReply\": false,\n      \"blipchatMenu\": true,\n      \"defaultText\": false\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Exibe mensagem e exceção no MENU\n  // if (hideInputText == 'true' || hideInputText == true) {\n  //   properties.text = sentenceOtherMistakesJs\n  // } else {\n  //   // Exibe mensagem de retorno\n  //   // if (returnJs == 'true' || returnJs == true) {\n  //   //   properties.text = 'Certo! Selecione a seguir como eu posso te ajudar hoje. 👇'\n  //   // }\n  // }\n  ////////////////////////////////////////////////////////////////////////////////\n\n  properties.itens = addItensNumeracao(properties.itens);\n\n  // Adição de opções sem numeração\n  let opcoesExtras = []\n\n  opcoesExtras = addItens(opcoesExtras);\n\n  for (let i = 0; i < opcoesExtras.length; i++) {\n    properties.itens.push(opcoesExtras[i]);\n  }\n\n  return JSON.stringify(properties);\n}\n\nfunction addItens(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n  }\n  return newItens;\n}\n\nfunction addItensNumeracao(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n    newNames.push(`${i + 1}`); // Acrescenta numeração automática\n  }\n  return newItens;\n} \n","inputVariables":["hideInputText","sentenceOtherMistakesJs","return","platform","texto01"],"outputVariable":"inputOptionJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"19b44b1c-95c2-4d6f-be90-4d0f0d3f8a6e","$typeOfContent":"","type":"TrackEvent","$title":"oferta combo exibicao","$invalid":false,"settings":{"extras":{},"category":"oferta combo exibicao","action":"Exibicao"},"conditions":[]},{"$id":"a3ba129b-bb47-4533-811d-807ff966d99b","$typeOfContent":"","type":"ExecuteScript","$title":"objMenu","$invalid":false,"settings":{"function":"run","source":"// {{resource.FunctionGetMenu}}\n\n// const run = (platform, menu) => {\n//   menu = JSON.parse(menu);\n//   platform = platform.toLowerCase();\n\n//   if (platform == 'instagram' || platform == 'messenger') {\n//     const objMenu = {\n//       'type': `text/plain`,\n//       'content' : geraMenuNumerico(menu)\n//     }\n//     return objMenu\n//   };\n\n//   let default_msg = {\n//     \"text\": menu.text,\n//     \"header\": 'Menu',\n//     \"body\": menu.text,\n//     \"footer\": '',\n//     \"button\": 'Menu',\n//     \"title\": 'Menu',\n//     \"namespaceTemplate\": '',\n//     \"nameTemplate\": '',\n//     \"options\": menu.options,\n//     \"values\": menu.values,\n//     \"submenu\": [],\n//     \"description\": menu.description,\n//     \"menuScope\": {\n//       ... menu.menuScope,\n//       \"platform\": platform\n//     },\n//   };\n\n//   var newMenu = getMenuForPlatform(default_msg);\n\n//   return newMenu;\n// };\n\n// function geraMenuNumerico(menu) {\n//   // menu = JSON.parse(menu);\n\n//   let listaOptions = '\\n\\n';\n//   for (let i = 0; i < menu.options.length; i++) {\n//     listaOptions = listaOptions + (i + 1) + '. ' + menu.options[i] + '\\n';\n//   }\n\n//   return menu.text + listaOptions;\n// }\n\n\n{{resource.FunctionGetMenu}}\n\nconst run = (platform, menu) => {\n  let convertPlatform = platform.toLowerCase();\n  menu = JSON.parse(menu);\n  platform = platform.toLowerCase();\n\n  if (platform == 'instagram' || platform == 'messenger') {\n    const objectType = {\n      'type': `text/plain`\n    }\n    return objectType\n  };\n\n  let default_msg = {\n    \"text\": menu.text,\n    \"header\": '',\n    \"body\": menu.text,\n    \"footer\": '',\n    \"button\": 'Marcas',\n    \"title\": 'Menu',\n    \"namespaceTemplate\": '',\n    \"nameTemplate\": '',\n    \"options\": menu.options,\n    \"values\": menu.values,\n    \"submenu\": [],\n    \"description\": menu.description,\n    \"menuScope\": {\n      ...menu.menuScope,\n      \"platform\": platform\n    }\n  };\n\n  var newMenu = getMenuForPlatform(default_msg);\n\n  return newMenu;\n};","inputVariables":["platform","inputOptionJs"],"outputVariable":"objMenu","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"215d1dc2-4d4a-4ef5-8eb4-6ac7890957cd","$typeOfContent":"","type":"ExecuteScript","$title":"contentJs","$invalid":false,"settings":{"function":"run","source":"function run(menu, platform, objMenu) {\n  objMenu = JSON.parse(objMenu);\n  platform = platform.toLowerCase();\n\n  switch (platform) {\n    case 'instagram':\n      return geraMenuNumerico(menu);\n\n    case 'messenger':\n      return geraMenuNumerico(menu);\n\n    default:\n      return objMenu.content;\n  }\n}\n\nfunction geraMenuNumerico(menu) {\n  menu = JSON.parse(menu);\n\n  let listaOptions = '\\n\\n';\n  for (let i = 0; i < menu.options.length; i++) {\n    listaOptions = listaOptions + '{{n1}}' + (i + 1) + '.{{n2}} ' + menu.options[i] + '\\n';\n  }\n\n  return menu.text + listaOptions;\n}","inputVariables":["inputOptionJs","platform","objMenu"],"outputVariable":"contentJs","LocalTimeZoneEnabled":false},"conditions":[]}],"$leavingCustomActions":[{"$id":"4c3fd580-c601-45cc-8eae-e805e71a605f","$typeOfContent":"","type":"ExecuteScript","$title":"validInputJs","$invalid":false,"settings":{"function":"run","source":"// ============================================================================\n//      TYPE\n// ============================================================================\n// - reserved => quando há alguma palavra reservada que o bot deverá processar, \n// como SAIR E MENU por exemplo\n// - error => quando alguma validação deverá retornar um erro para cair em exceção\n// - success => quando a validação foi bem sucedida.\n// ============================================================================\n//      INPUT\n// ============================================================================\n// Retorna o input após processamento.\n// - Se type == error => o input será a descrição do erro. Ex: ERRO CEP\n// - Se type == success => o input será o input original processado.\n// ============================================================================\n//      VALIDATION\n// ============================================================================\n// Retorna em qual validação o input foi processado. Ex: cep\n// ============================================================================\n{{resource.FunctionProcessInput}}\n\nfunction run(input, inputType, platform, menu) {\n    try {\n\n        // =================================================================================\n        //             ATENÇÃO: MANIPULAR SOMENTE AS DUAS CONSTANTES A SEGUIR\n        // =================================================================================\n        // - validacaoMenu => true para validação de Menu, false para Input\n        // - validacoesInput => insira aqui que tipo de validação de input vai ser  \n        //   necessário (se mais de um for selecionado, apenas o mais acima será validado)\n        // - erroMenuEspecial => altere somente se, caso a validação seja um Menu e para\n        //   este menu haja um tratamento diferente de exceção.\n        // =================================================================================\n        const validacaoMenu = true;\n        const erroMenuEspecial = 'ERRO DINAMICO';\n        const validacoesInput = {\n            data: false,\n            email: false,\n            cep: false,\n            img: false,\n            imgTxt: false,\n            nome: false\n        };\n        // ========================================================================\n\n        // Inicia o objeto que será retornado pela função\n        let processedInput = {\n            'type': null,\n            'input': null,\n            'validation': 'none'\n        }\n\n        // Verifica se o usuário digitou SAIR ou MENU\n        if (input == 'sair' || input == 'SAIR' || input == 'Sair') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'SAIR'\n            return JSON.stringify(processedInput)\n        } else if (input == 'voltar' || input == 'VOLTAR' || input == 'Menu' || input == 'Voltar' || input == 'menu' || input == 'MENU') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'VOLTAR'\n            return JSON.stringify(processedInput)\n        }\n\n        // Formata variáveis\n        menu = JSON.parse(menu);\n        platform = platform.toUpperCase()\n\n        if (validacaoMenu) {\n            // Validação de MENU\n            processedInput = validaMenu(input, menu, platform)\n\n            // Verifica se precisa mudar a mensagem de erro do Menu Dinâmico para o Especial\n            if ((processedInput.input == 'ERRO DINAMICO' || processedInput.input == 'ERRO NUMERICO') && erroMenuEspecial != '') {\n                processedInput.input = erroMenuEspecial; \n            }\n            return JSON.stringify(processedInput);\n\n        } else {\n            // Validação de INPUT\n            const val = Object.entries(validacoesInput);\n            processedInput = validaInput(val, input, inputType)\n\n            // Se nenhuma validação foi processada, retorna o input sem validação\n            if (processedInput.input == 'INPUT SEM VALIDAÇÕES') {\n                return JSON.stringify({type: 'success', input: input, validation: 'none'});\n\n            } else {\n                return JSON.stringify(processedInput);\n            }\n        }\n\n    } catch (e) {\n        return {type: 'error', input: 'ERRO INESPERADO', validation: 'none'}\n    }\n}","inputVariables":["input.content","input.type","platform","inputOptionJs"],"outputVariable":"validInputJs","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"ca0780fb-4590-4991-b281-fda1d115b2b6","$typeOfContent":"","type":"TrackEvent","$title":"oferta combo selecao","$invalid":false,"settings":{"extras":{},"category":"oferta combo selecao","action":"{{validInputJs@input}}"},"conditions":[{"source":"context","comparison":"equals","values":["success"],"variable":"validInputJs@type"},{"source":"input","comparison":"exists","values":[]}]},{"$id":"66155932-cd0b-4c34-9628-39d25d459551","$typeOfContent":"","type":"TrackEvent","$title":"oferta combo inesperado","$invalid":false,"settings":{"extras":{},"category":"oferta combo inesperado","action":"{{input.content}}"},"conditions":[{"source":"input","comparison":"exists","values":[]},{"source":"context","comparison":"equals","variable":"validInputJs@type","values":["error","reserved"]}]},{"$id":"7e8a0258-b590-4e06-89f5-389601bc1300","$typeOfContent":"","type":"SetVariable","$title":"hideInputText [false]","$invalid":false,"settings":{"variable":"hideInputText","value":"false"},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"2e9b8c78-8814-4e29-bc5f-cf680dc9fe8b","$invalid":false,"typeOfStateId":"state"},"$tags":[{"background":"#61D36F","label":"Event tracking","id":"blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9","canChangeBackground":false},{"background":"#FFEC03","label":"userInput","id":"blip-tag-59565120-de68-cdcc-653c-94c14e2b5e9e","canChangeBackground":false},{"background":"#FF961E","label":"ExecuteScript","id":"blip-tag-4cffa4e2-3244-409f-90a7-9fff4b556eb1","canChangeBackground":false}],"id":"473f65a2-d92b-4151-a169-bc1e568860ab","$title":"[CP.0.0.5] [MENU] Combo","$position":{"top":"1359px","left":"137px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"isAiGenerated":false},"74abbd29-4b57-4360-bfbb-2e18a5631507":{"$contentActions":[{"action":{"$id":"883a8fab-2def-47f4-8cfe-82c502753cfa","$typeOfContent":"chat-state","type":"SendMessage","settings":{"id":"64e0c5d0-0140-4779-808f-884db1019bbc","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"$cardContent":{"document":{"id":"64e0c5d0-0140-4779-808f-884db1019bbc","type":"application/vnd.lime.chatstate+json","content":{"state":"composing","interval":1000}},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"action":{"$id":"fd5d2fc3-2265-4fc5-a1a9-814e6e4ac534","$typeOfContent":"text","type":"SendMessage","settings":{"id":"cb9078bc-3031-4b52-b241-baa549a0d23b","type":"text/plain","content":"{{texto02}}","metadata":{}},"$cardContent":{"document":{"id":"cb9078bc-3031-4b52-b241-baa549a0d23b","type":"text/plain","content":"{{texto02}}"},"editable":true,"deletable":true,"position":"left"}},"$invalid":false},{"input":{"bypass":true,"$cardContent":{"document":{"id":"98f2791a-68ec-48c2-9a42-42809641b98f","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[{"$id":"9781c265-5437-4a9c-844a-a762192bf82f","$typeOfContent":"","type":"ExecuteScript","$title":"texto02","$invalid":false,"settings":{"function":"run","source":"function run(textosAExibir) {\n\ttextosAExibir = JSON.parse(textosAExibir)\n\n\treturn textosAExibir.texto02\n}","inputVariables":["textosAExibir"],"outputVariable":"texto02","LocalTimeZoneEnabled":false},"conditions":[]},{"$id":"af9178b8-f6ed-41e8-9e5d-881dddc3ed4f","$typeOfContent":"","type":"TrackEvent","$title":"resumo pedido mais combo exibicao","$invalid":false,"settings":{"extras":{},"category":"resumo pedido mais combo exibicao","action":"exibicao"},"conditions":[]}],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"4756b63b-8e0e-4907-9d85-905edbe34569","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"background":"#61D36F","label":"Event tracking","id":"blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9","canChangeBackground":false}],"id":"74abbd29-4b57-4360-bfbb-2e18a5631507","root":false,"$title":"[CP.0.0.6] Combo + desconto","$position":{"top":"1497px","left":"139px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false},"33e10e26-4d3e-4c68-9556-bc18912106c2":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"ea4c6ecd-dec8-4589-b102-1d405515d645","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[{"$id":"073b5b27-0e2d-42db-a3f9-32a4aebc110f","$typeOfContent":"","type":"SetVariable","$title":"destination","$invalid":false,"settings":{"variable":"destination","value":"pesquisa"},"conditions":[]}],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"a9639756-525b-46c7-b181-8d5c6ca57a74","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"background":"#3A4A65","label":"GO TO","id":"blip-tag-bb8e8b45-c8b0-9b29-6cd8-fee9ba6347db","canChangeBackground":false},{"background":"#FF4A1E","label":"Set variable","id":"blip-tag-024ed08b-c8b4-9452-aa33-a09569f77a2d","canChangeBackground":false}],"id":"33e10e26-4d3e-4c68-9556-bc18912106c2","root":false,"$title":"[GO TO] Pesquisa sem atendimento","$position":{"top":"928px","left":"93px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"addonsSettings":{"backgroundColor":"#fff9c4","textColor":"#000000"}},"2e9b8c78-8814-4e29-bc5f-cf680dc9fe8b":{"$contentActions":[{"input":{"bypass":true,"$cardContent":{"document":{"id":"f68ee089-ea97-49ed-a218-78d94d650058","type":"text/plain","textContent":"Entrada do usuário","content":"Entrada do usuário"},"editable":false,"deletable":true,"position":"right","editing":false},"$invalid":false},"$invalid":false}],"$conditionOutputs":[],"$enteringCustomActions":[],"$leavingCustomActions":[],"$inputSuggestions":[],"$defaultOutput":{"stateId":"4756b63b-8e0e-4907-9d85-905edbe34569","$invalid":false,"typeOfStateId":"state"},"isAiGenerated":false,"$tags":[{"background":"#3A4A65","label":"GO TO","id":"blip-tag-bb8e8b45-c8b0-9b29-6cd8-fee9ba6347db","canChangeBackground":false}],"id":"2e9b8c78-8814-4e29-bc5f-cf680dc9fe8b","root":false,"$title":"[GO TO] Transbordo","$position":{"top":"1371px","left":"861px"},"$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false,"addonsSettings":{"backgroundColor":"#fff9c4","textColor":"#000000"}}},"globalActions":{"$contentActions":[],"$conditionOutputs":[],"$enteringCustomActions":[],"$leavingCustomActions":[{"$id":"74423562-3d0d-4063-be50-c19e4cd922ce","$typeOfContent":"","type":"ExecuteScript","$title":"SET lastStateWithInput","$invalid":false,"settings":{"function":"run","source":"function run(stateName, stateId, previousStateName = null, previousStateId = null, service) {\n    return {\n        name: stateName,\n        id: stateId,\n        previousName: previousStateName,\n        previousId: previousStateId,\n        service: service\n    }\n}","inputVariables":["state.name","state.id","state.previous.name","state.previous.id","service"],"outputVariable":"lastStateWithInput"},"conditions":[{"$$hashKey":"object:736","values":["[INPUT]"],"source":"context","comparison":"contains","variable":"state.name"}]},{"$id":"635be038-dcbb-4c33-87ba-b9c5153b252d","$typeOfContent":"","type":"SetVariable","$title":"hideInputText [false]","$invalid":false,"settings":{"variable":"hideInputText","value":"false"},"conditions":[]}],"$inputSuggestions":[],"$defaultOutput":{"stateId":"fallback","$invalid":false},"$tags":[],"id":"global-actions","$invalidContentActions":false,"$invalidOutputs":false,"$invalidCustomActions":false,"$invalid":false}}