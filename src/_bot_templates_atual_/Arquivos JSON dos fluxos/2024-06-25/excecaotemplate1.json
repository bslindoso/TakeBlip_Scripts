{
  "flow": {
    "onboarding": {
      "$contentActions": [
        {
          "input": {
            "bypass": false,
            "$cardContent": {
              "document": {
                "id": "4ac90719-688a-42fa-8308-fbe1452ba381",
                "type": "text/plain",
                "content": "Entrada do usuário"
              },
              "editable": false,
              "deletable": false,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "f4078b7c-fd36-47ec-a5d6-57e5392cddaa",
          "typeOfStateId": "state",
          "$connId": "con_3",
          "$id": "e5559775-f7cb-4e69-af0e-5b176dd55f2a",
          "conditions": [
            {
              "source": "input",
              "comparison": "notExists",
              "values": []
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "f4078b7c-fd36-47ec-a5d6-57e5392cddaa",
          "typeOfStateId": "state",
          "$connId": "con_8",
          "$id": "b38c224e-b7d0-45b6-a030-ebef10cbf9eb",
          "conditions": [
            {
              "source": "input",
              "comparison": "exists",
              "values": []
            }
          ],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [
        {
          "$id": "c9be2de8-d656-4a9b-aa6b-4b7c2a4b2f53",
          "$typeOfContent": "",
          "type": "SetVariable",
          "$title": "SET previousException",
          "$invalid": false,
          "settings": {
            "variable": "previousException",
            "value": "{{exception}}"
          },
          "conditions": [
            {
              "source": "context",
              "comparison": "notExists",
              "values": [],
              "variable": "previousException"
            }
          ]
        }
      ],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "f4078b7c-fd36-47ec-a5d6-57e5392cddaa",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [],
      "id": "onboarding",
      "root": true,
      "$title": "Início",
      "$position": {
        "top": "140px",
        "left": "454px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "fallback": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "0adf1af9-611b-4df8-965b-ed9dc16a02dc",
                "type": "text/plain",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "1c4f6841-a1e2-419b-8145-23fb8d99101b",
          "typeOfStateId": "state",
          "$connId": "con_13",
          "$id": "3f9cb29d-c318-4945-8275-d91660404291",
          "conditions": [
            {
              "source": "input",
              "comparison": "exists",
              "values": []
            }
          ],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "8ebfc765-beb5-4731-bf4d-103702b05a37",
          "$typeOfContent": "",
          "type": "SetVariable",
          "$title": "service",
          "$invalid": false,
          "settings": {
            "variable": "service",
            "value": "excecao"
          },
          "conditions": []
        },
        {
          "$id": "e0a17a5b-fe39-465c-9afb-d1284f6cd71d",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "exception",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(previousState, typeInput, previousId) {\n    try {\n        typeInput = JSON.parse(typeInput).input\n        let idFormated = previousState.split(' ');\n        idFormated = idFormated[0].replace(/\\[/g,'').replace(/\\]/g,'').replace(/\\./g,'');\n        const exception = {\n            id: `${idFormated}`,\n            input: '{{input.content}}',\n            redirectMenu: `${typeInput}`,\n            blockId: previousId\n        }\n        return exception\n    }\n    catch (e) {\n        return 'error'\n    }\n}",
            "inputVariables": [
              "state.previous.name",
              "validInputJs",
              "state.previous.id"
            ],
            "outputVariable": "exception",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "onboarding",
        "$invalid": false
      },
      "$tags": [
        {
          "id": "blip-tag-dd432ee6-0ca2-4264-9382-6348da5c46b1",
          "label": "SetVariable",
          "background": "#b80000",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-c4e1b16a-bd21-48ba-8e96-1d282c4bd636",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "fallback",
      "$title": "Exceções",
      "$position": {
        "top": "124.429px",
        "left": "1123.43px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "400586b3-d77c-40ed-ba74-8aa107b25f0b": {
      "$contentActions": [
        {
          "action": {
            "$id": "659d10bd-84ad-467a-a07a-efa695f7ac90",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "dfc01f44-07f8-4622-9b81-9c9f5640c48f",
              "type": "application/vnd.lime.chatstate+json",
              "content": {
                "state": "composing",
                "interval": 1000
              }
            },
            "$cardContent": {
              "document": {
                "id": "dfc01f44-07f8-4622-9b81-9c9f5640c48f",
                "type": "application/vnd.lime.chatstate+json",
                "content": {
                  "state": "composing",
                  "interval": 1000
                }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "5e7927f3-ac9f-4a17-81e7-d94ca94480f3",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "f2da904c-8386-4900-b9ae-cc79c016e327",
              "type": "text/plain",
              "content": "{{messageErrorFormatJs@text}}",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "f2da904c-8386-4900-b9ae-cc79c016e327",
                "type": "text/plain",
                "content": "{{messageErrorFormatJs@text}}"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "85121adb-6290-44f5-855c-0090b54eaaab",
                "type": "text/plain",
                "textContent": "Entrada do usuário",
                "content": "Entrada do usuário"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "9f92b0eb-ace8-4357-b75b-d59d299bde53",
          "$typeOfContent": "",
          "type": "TrackEvent",
          "$title": "defineTrackingDeExibicao [FNS]",
          "$invalid": false,
          "settings": {
            "extras": {},
            "category": "{{messageErrorFormatJs@tracking_exibicao}}",
            "action": "Exibicao"
          },
          "conditions": [
            {
              "source": "context",
              "comparison": "notEquals",
              "variable": "defineTrackingDeExibicao",
              "values": [
                "error"
              ]
            }
          ]
        },
        {
          "$id": "e99671d5-2e40-49ba-9cd3-03f6e0632873",
          "$typeOfContent": "",
          "type": "TrackEvent",
          "$title": "defineTrackingDeOrigem[FNS]",
          "$invalid": false,
          "settings": {
            "extras": {},
            "category": "{{messageErrorFormatJs@tracking_origem}}",
            "action": "{{messageErrorFormatJs@tracking_origem_acao}}"
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "54d99b2c-b338-4f12-a938-59ab815c9e4d",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "background": "#61D36F",
          "label": "Event tracking",
          "id": "blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9",
          "canChangeBackground": false
        }
      ],
      "id": "400586b3-d77c-40ed-ba74-8aa107b25f0b",
      "root": false,
      "$title": "[X.1.1.0] Formatos não suportados",
      "$position": {
        "top": "405px",
        "left": "691px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "54d99b2c-b338-4f12-a938-59ab815c9e4d": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "0b55f6aa-8e8f-4f70-b27e-1d3c8cb1d71c",
                "type": "text/plain",
                "textContent": "Entrada do usuário",
                "content": "Entrada do usuário"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "02558330-d8fc-495d-88c7-5040869253bf",
          "$typeOfContent": "",
          "type": "SetVariable",
          "$title": "returnException",
          "$invalid": false,
          "settings": {
            "variable": "returnException",
            "value": "true"
          },
          "conditions": []
        },
        {
          "$id": "a48eb7d5-7d47-4340-8248-b37c81533ded",
          "$typeOfContent": "",
          "type": "SetVariable",
          "$title": "validApiJs [CLEAR]",
          "$invalid": false,
          "settings": {
            "variable": "validApiJs"
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [
        {
          "$id": "f1a3443f-dc78-4994-9cef-d2220f970f42",
          "$typeOfContent": "",
          "type": "Redirect",
          "$title": "[GO TO] Bloco Anterior",
          "$invalid": false,
          "settings": {
            "context": {
              "type": "text/plain",
              "value": "{{exception}}"
            },
            "address": "{{service}}"
          },
          "conditions": []
        }
      ],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "onboarding",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "background": "#0A6045",
          "label": "REDIRECT TO",
          "id": "blip-tag-f0773d70-1b65-17d8-0513-88aa4e892421",
          "canChangeBackground": false
        }
      ],
      "id": "54d99b2c-b338-4f12-a938-59ab815c9e4d",
      "root": false,
      "$title": "[REDIRECT TO] Bloco Anterior",
      "$position": {
        "top": "255.667px",
        "left": "1315.78px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "addonsSettings": {
        "backgroundColor": "#c8e6c9",
        "textColor": "#000000"
      }
    },
    "ec24aa87-3496-4366-8bf1-43cdf503265a": {
      "$contentActions": [
        {
          "action": {
            "$id": "9b49b95d-6813-4e8a-80a4-9b41e17d213d",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "e886a351-4239-4d25-9f89-c87f8634775e",
              "type": "text/plain",
              "content": "{{sentenceOtherMistakesJs}}",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "e886a351-4239-4d25-9f89-c87f8634775e",
                "type": "text/plain",
                "content": "{{sentenceOtherMistakesJs}}"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "8d823f9c-0e66-4767-9e2b-31c27c736154",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "d6532e0a-e4fb-4e27-801b-85f606c1f690",
          "typeOfStateId": "state",
          "$connId": "con_18",
          "$id": "56cb1961-fb3a-448c-ad81-3ae697a4a229",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": [
                "ERRO API"
              ],
              "variable": "exception@redirectMenu"
            }
          ],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "9e6c2f11-6533-4720-9255-01e1be734e84",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "sentenceOtherMistakesJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(exception) {\n    try {\n        let exceptionJs = JSON.parse(exception).redirectMenu\n\n        if (exceptionJs == 'ERRO DINAMICO') {\n            return `Desculpe, não consegui entender qual opção você selecionou. ✖\n\n{{n1}}Selecione uma das opções a seguir.{{n2}} 👇`\n        }\n        if (exceptionJs == 'ERRO NUMERICO') {\n            return `Desculpe, não consegui entender o número que você digitou. ✖\n\n{{n1}}Digite um dos números a seguir.{{n2}} 👇`\n        }\n        if (exceptionJs == 'ERRO NOTA') {\n            return `Desculpe, {{n1}}eu não consegui entender a nota que você informou.{{n2}} ✖\n\n🟦 Digite um número entre 1 e 10.`\n        }\n        if (exceptionJs == 'ERRO API') {\n            return `Desculpe, estamos passando por um problema em nosso sistema. ✖\n\n🟦 {{n1}}Aguarde por alguns minutos e tente novamente...{{n2}}`\n        }\n        if (exceptionJs == 'ERRO MENU HIBRIDO') {\n            return `Desculpe, não consegui entender o número que você digitou. ✖\n\n{{n1}}Digite um dos números ou clique no botão a seguir.{{n2}} 👇`\n        }\n    }\n    catch (e) {\n        return 'error'\n    }\n\n}",
            "inputVariables": [
              "exception"
            ],
            "outputVariable": "sentenceOtherMistakesJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "fdfac7b3-b895-4490-889c-0e2af600e129",
          "$typeOfContent": "",
          "type": "SetVariable",
          "$title": "hideInputText [false] (default TRUE)",
          "$invalid": false,
          "settings": {
            "variable": "hideInputText",
            "value": "true"
          },
          "conditions": []
        },
        {
          "$id": "a6f8dce1-9500-435e-a29f-f019e2d0119c",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "defineTrackingDeExibicao [MENU]",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(exception) {\n    try {\n        exception = JSON.parse(exception)\n\n        if (exception.redirectMenu == 'ERRO DINAMICO') {\n            return `erro menu dinamico exibicao`\n        }\n        if (exception.redirectMenu == 'ERRO NUMERICO') {\n            return `erro menu numerico exibicao`\n        }\n        if (exception.redirectMenu == 'ERRO NOTA') {\n            return `erro nota nps exibicao`\n        }\n        if (exception.redirectMenu == 'ERRO API') {\n            return `erro api exibicao`\n        }\n        if (exception.redirectMenu == 'ERRO MENU HIBRIDO') {\n            return `erro menu numerico hibrido exibicao`\n        }\n    }\n    catch (e) {\n        return 'error'\n    }\n\n} ",
            "inputVariables": [
              "exception"
            ],
            "outputVariable": "defineTrackingDeExibicao",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "37c37187-c966-4172-aa5b-1aebd41461d7",
          "$typeOfContent": "",
          "type": "TrackEvent",
          "$title": "defineTrackingDeExibicao",
          "$invalid": false,
          "settings": {
            "extras": {},
            "category": "{{defineTrackingDeExibicao}}",
            "action": "Exibicao"
          },
          "conditions": [
            {
              "source": "context",
              "comparison": "notEquals",
              "variable": "defineTrackingDeExibicao",
              "values": [
                "error"
              ]
            }
          ]
        },
        {
          "$id": "877d6758-b44c-44f5-ab22-30d52424c577",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "defineTrackingDeOrigem [MENU]",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(exception, service) {\n    try {\n        let exception = JSON.parse(exception)        \n\n        if (exception.redirectMenu == 'ERRO DINAMICO') {\n            return {\n                categoria: `erro menu origem`,\n                acao: `${service} | ${exception.id} | ${exception.input}`\n            }\n        }\n        \n        if (exception.redirectMenu == 'ERRO MENU HIBRIDO') {\n            return {\n                categoria: `erro menu origem`,\n                acao: `${service} | ${exception.id} | ${exception.input}`\n            }\n        }        \n        if (exception.redirectMenu == 'ERRO NUMERICO') {\n            return {\n                categoria: `erro menu numerico origem`,\n                acao: `${service} | ${exception.id} | ${exception.input}`\n            }\n        }\n        if (exception.redirectMenu == 'ERRO NOTA') {\n            return {\n                categoria: `erro avaliacao origem`,\n                acao: `${service} | ${exception.id} | ${exception.input}`\n            }\n        }\n        if (exception.redirectMenu == 'ERRO API') {\n            return {\n                categoria: `erro api origem`,\n                acao: `${service} | ${exception.id} | ${exception.input}`\n            }\n        }\n    }\n    catch (e) {\n        return 'error'\n    }\n\n}",
            "inputVariables": [
              "exception",
              "service"
            ],
            "outputVariable": "defineTrackingDeOrigem",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "0656babe-47c1-4f19-bd90-534326233d06",
          "$typeOfContent": "",
          "type": "TrackEvent",
          "$title": "defineTrackingDeOrigem",
          "$invalid": false,
          "settings": {
            "extras": {},
            "category": "{{defineTrackingDeOrigem@categoria}}",
            "action": "{{defineTrackingDeOrigem@acao}}"
          },
          "conditions": [
            {
              "source": "context",
              "comparison": "notEquals",
              "variable": "defineTrackingDeOrigem",
              "values": [
                "error"
              ]
            }
          ]
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "54d99b2c-b338-4f12-a938-59ab815c9e4d",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-a00bd978-b330-40ae-94aa-239aac41cf43",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "background": "#b80000",
          "label": "SetVariable",
          "id": "blip-tag-dd432ee6-0ca2-4264-9382-6348da5c46b1",
          "canChangeBackground": false
        },
        {
          "background": "#61D36F",
          "label": "Event tracking",
          "id": "blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9",
          "canChangeBackground": false
        }
      ],
      "id": "ec24aa87-3496-4366-8bf1-43cdf503265a",
      "root": false,
      "$title": "[X.1.0.0] Erro Menu",
      "$position": {
        "top": "407px",
        "left": "195px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "d0d3ba85-6e59-4915-8ff6-070c3d7b1376": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "6d96947e-81eb-4195-9a03-8a7f8906e5eb",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [
        {
          "$id": "7455ae48-cff1-4bbb-b8f7-34f0ecea3ba1",
          "$typeOfContent": "",
          "type": "Redirect",
          "$title": "[GO TO] Menu Principal",
          "$invalid": false,
          "settings": {
            "context": {
              "type": "text/plain",
              "value": "Menu"
            },
            "address": "{{resource.serviceList@boas_vindas}}"
          },
          "conditions": []
        }
      ],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "onboarding",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "background": "#0A6045",
          "label": "REDIRECT TO",
          "id": "blip-tag-f0773d70-1b65-17d8-0513-88aa4e892421",
          "canChangeBackground": false
        }
      ],
      "id": "d0d3ba85-6e59-4915-8ff6-070c3d7b1376",
      "root": false,
      "$title": "[REDIRECT TO] Menu Principal",
      "$position": {
        "top": "120px",
        "left": "1500px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "addonsSettings": {
        "backgroundColor": "#c8e6c9",
        "textColor": "#000000"
      }
    },
    "1c4f6841-a1e2-419b-8145-23fb8d99101b": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "f4a76ec3-f892-4cad-ad43-60297c09eb7b",
                "type": "text/plain",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [
        {
          "$id": "3fb7ef00-299c-4276-8405-acb5cf3a78a4",
          "$typeOfContent": "",
          "type": "Redirect",
          "$title": "[GO TO] Exceções",
          "$invalid": false,
          "settings": {
            "context": {
              "type": "text/plain",
              "value": "{{exception}}"
            },
            "address": "{{service}}"
          },
          "conditions": []
        }
      ],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "onboarding",
        "$invalid": false
      },
      "$tags": [
        {
          "background": "#0A6045",
          "label": "REDIRECT TO",
          "id": "blip-tag-f0773d70-1b65-17d8-0513-88aa4e892421",
          "canChangeBackground": false
        }
      ],
      "id": "1c4f6841-a1e2-419b-8145-23fb8d99101b",
      "$title": "[REDIRECT TO] Exceções",
      "$position": {
        "top": "120px",
        "left": "1315px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "addonsSettings": {
        "backgroundColor": "#c8e6c9",
        "textColor": "#000000"
      }
    },
    "f4078b7c-fd36-47ec-a5d6-57e5392cddaa": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "d177afe0-1fc9-47f7-8d6d-a8888d6c114c",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "f2e40782-06ce-4af7-b1e6-bde9e4949f07",
          "typeOfStateId": "state",
          "$connId": "con_23",
          "$id": "b5193d0c-b095-4c63-ac1e-c7f152a63d34",
          "conditions": [
            {
              "source": "context",
              "comparison": "contains",
              "values": [
                "true"
              ],
              "variable": "inactivity"
            }
          ],
          "$invalid": false
        },
        {
          "typeOfStateId": "state",
          "$connId": "con_28",
          "$id": "6a92a1c2-2268-4114-a92e-ee5f30f5a409",
          "conditions": [
            {
              "source": "context",
              "comparison": "greaterThan",
              "values": [
                "2"
              ],
              "variable": "countError"
            }
          ],
          "$invalid": false,
          "stateId": "105d9525-9089-46c5-b08b-eeda062ad784"
        },
        {
          "stateId": "d6532e0a-e4fb-4e27-801b-85f606c1f690",
          "typeOfStateId": "state",
          "$connId": "con_33",
          "$id": "b5c7a478-92b6-42af-923e-a12eaf625c36",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": [
                "reserved"
              ],
              "variable": "validInputJs@type"
            },
            {
              "source": "context",
              "comparison": "equals",
              "variable": "validInputJs@input",
              "values": [
                "SAIR"
              ]
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "400586b3-d77c-40ed-ba74-8aa107b25f0b",
          "typeOfStateId": "state",
          "$connId": "con_38",
          "$id": "f4d3a0c7-b477-401a-a188-e3e1d5e7fc82",
          "conditions": [
            {
              "source": "context",
              "comparison": "notEquals",
              "values": [
                "OUTRO ERRO"
              ],
              "variable": "messageErrorFormatJs"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "ec24aa87-3496-4366-8bf1-43cdf503265a",
          "typeOfStateId": "state",
          "$connId": "con_43",
          "$id": "ff0bb540-90f4-42dd-8368-93b37bf6ba79",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": [
                "ERRO DINAMICO",
                "ERRO API",
                "ERRO NOTA",
                "ERRO NUMERICO",
                "ERRO MENU HIBRIDO"
              ],
              "variable": "exception@redirectMenu"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "9d03752e-ab57-4b09-867c-a0123405f794",
          "typeOfStateId": "state",
          "$connId": "con_48",
          "$id": "550bf6a9-b6d8-4600-a6b6-b064bc1f7fc2",
          "conditions": [
            {
              "source": "input",
              "comparison": "exists",
              "values": [],
              "variable": "exception@redirectMenu"
            }
          ],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "b2d94a35-4b59-4905-9ff7-293907050f92",
          "$typeOfContent": "",
          "type": "SetVariable",
          "$title": "setCountError",
          "$invalid": false,
          "settings": {
            "variable": "countError",
            "value": "0"
          },
          "conditions": [
            {
              "source": "context",
              "comparison": "notExists",
              "variable": "countError",
              "values": []
            }
          ]
        },
        {
          "$id": "05f551fa-6584-49bc-b7c6-d1a549106cec",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "processCountError",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(countError, previousException, exception) {\n    try {\n        countError = Number(countError)\n        previousException = JSON.parse(previousException)\n        exception = JSON.parse(exception)\n\n        if(countError > 2){\n            return countError = 0\n        }\n        if (previousException.id == exception.id) {\n            return countError += 1\n        }\n\n        return countError = 1\n    }\n    catch (e) {\n        return 'error'\n    }\n}",
            "inputVariables": [
              "countError",
              "previousException",
              "exception"
            ],
            "outputVariable": "countError",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "883d49f3-7dbf-434a-9053-1082ad66801b",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "processPreviousException",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(previousException, exception) {\n    try {\n        previousException = JSON.parse(previousException)\n        exception = JSON.parse(exception)\n\n        if (previousException.id != exception.id) {\n            return previousException = exception\n        }\n        return exception\n    }\n    catch (e) {\n        return 'error'\n    }\n\n}",
            "inputVariables": [
              "previousException",
              "exception"
            ],
            "outputVariable": "previousException",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "e1e32913-720e-46da-91bc-9572c948db8b",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "inactivity",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(exception) {\n    try {\n        exception = JSON.parse(exception)\n\n        if (exception.input == \"\") {\n            return true\n        }\n        return false\n    }\n    catch (e) {\n        return error\n    }\n}",
            "inputVariables": [
              "exception"
            ],
            "outputVariable": "inactivity",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "19716dbd-22db-4bd5-85e6-a158605ab245",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "messageErrorFormatJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(exception) {\n    exception = JSON.parse(exception)\n    let inputType = exception.input\n\n    const regex = {\n        \"image\": /image/,\n        \"audio\": /audio/,\n        \"video\": /video/,\n        \"emoji\": /[\\u2600-\\u26ff]|[\\u2600-\\u27ff]|[\\u2700-\\u27bf]|\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff]|\\ud83c[\\udf00-\\udfff]|\\ud83d[\\udc00-\\ude4f]|\\ud83d[\\ude80-\\udeff]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\udffb-\\udfff]/,\n        \"link\": /^(((https?:\\/\\/)[^\\s.]+|(www))\\.[\\w][^\\s]+)$/,\n        \"arquivo\": /application|text\\/csv|text\\/html/,\n        \"figurinha\": /application\\/octet-stream|image\\/webp/\n    }\n\n\n    if (inputType.match(regex.image)) {\n        return {\n            text: \"Ainda não sei processar imagens. {{n1}}Entendo apenas texto.{{n2}} 😉\",\n            tracking_exibicao: \"erro imagem exibicao\",\n            tracking_origem: \"erro imagem origem\",\n            tracking_origem_acao: `{{service}} | {{exception@id}} | {{exception@input}}`\n        }\n    }\n\n    if (inputType.match(regex.audio)) {\n        return {\n            text: \"Ainda não consigo entender arquivos de áudio, {{n1}}mas podemos conversar por texto.{{n2}} 😉\",\n            tracking_exibicao: \"erro audio exibicao\",\n            tracking_origem: \"erro audio origem\",\n            tracking_origem_acao: `{{service}} | {{exception@id}} | {{exception@input}}`\n        }\n    }\n\n    if (inputType.match(regex.video)) {\n        return {\n            text: \"Por enquanto não consigo assistir vídeos, {{n1}}mas você pode conversar comigo por texto.{{n2}} 😉\",\n            tracking_exibicao: \"erro video exibicao\",\n            tracking_origem: \"erro video origem\",\n            tracking_origem_acao: `{{service}} | {{exception@id}} | {{exception@input}}`\n        }\n    }\n\n    if (inputType.match(regex.emoji) || inputType.match(regex.figurinha)) {\n        return {\n            text: \"Ainda não consigo ler emojis ou figurinhas. Por enquanto, {{n1}}só mensagens de texto.{{n2}} 😉\",\n            tracking_exibicao: \"erro emoji sticker exibicao\",\n            tracking_origem: \"erro emoji sticker origem\",\n            tracking_origem_acao: `{{service}} | {{exception@id}} | {{exception@input}}`\n        }\n    }\n\n    if (inputType.match(regex.arquivo)) {\n        return {\n            text: \"Ainda não entendo este tipo de conteúdo.\\n\\n{{n1}}Por enquanto só consigo ler mensagens de texto.{{n2}} 😉\",\n            tracking_exibicao: \"erro arquivo exibicao\",\n            tracking_origem: \"erro arquivo origem\",\n            tracking_origem_acao: `{{service}} | {{exception@id}} | {{exception@input}}`\n        }\n    }\n\n    if (inputType.match(regex.link)) {\n        return {\n            text: \"Ainda não consigo acessar nenhum link, {{n1}}mas você pode conversar comigo por texto.{{n2}}\",\n            tracking_exibicao: \"erro link exibicao\",\n            tracking_origem: \"erro link origem\",\n            tracking_origem_acao: `{{service}} | {{exception@id}} | {{exception@input}}`\n        }\n    }\n\n    return \"OUTRO ERRO\"\n}\n",
            "inputVariables": [
              "exception"
            ],
            "outputVariable": "messageErrorFormatJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "fallback",
        "$invalid": false
      },
      "$tags": [
        {
          "id": "blip-tag-d7ac0013-2e45-4410-98b7-9d522e17192b",
          "label": "SetVariable",
          "background": "#b80000",
          "canChangeBackground": false
        },
        {
          "id": "blip-tag-8bd09876-c866-4979-adef-faa3753cb406",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        }
      ],
      "id": "f4078b7c-fd36-47ec-a5d6-57e5392cddaa",
      "root": false,
      "$title": "[REQUIREMENTS]",
      "$position": {
        "top": "240px",
        "left": "453px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "invalidOutputs": true,
      "addonsSettings": {
        "backgroundColor": "#000000",
        "textColor": "#ffffff"
      }
    },
    "e4484b9f-a98a-4544-8a8a-1138c84599a5": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "581d2ca6-5ab2-4e38-8726-d22b30bcf23c",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "3ed14941-bd24-4013-a18d-1f4c6e4ace91",
          "$typeOfContent": "",
          "type": "SetVariable",
          "$title": "clearException",
          "$invalid": false,
          "settings": {
            "variable": "exception"
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [
        {
          "$id": "8735939c-ee24-45e9-ba72-24fe28e39c0d",
          "$typeOfContent": "",
          "type": "Redirect",
          "$title": "[GO TO] Finalizar",
          "$invalid": false,
          "settings": {
            "context": {
              "type": "text/plain",
              "value": "ola"
            },
            "address": "{{resource.serviceList@finalizacao}}"
          },
          "conditions": []
        }
      ],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "onboarding",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "background": "#b80000",
          "label": "SetVariable",
          "id": "blip-tag-dd432ee6-0ca2-4264-9382-6348da5c46b1",
          "canChangeBackground": false
        },
        {
          "background": "#0A6045",
          "label": "REDIRECT TO",
          "id": "blip-tag-f0773d70-1b65-17d8-0513-88aa4e892421",
          "canChangeBackground": false
        }
      ],
      "id": "e4484b9f-a98a-4544-8a8a-1138c84599a5",
      "root": false,
      "$title": "[REDIRECT TO] Finalizar",
      "$position": {
        "top": "253.222px",
        "left": "1501.67px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "addonsSettings": {
        "backgroundColor": "#c8e6c9",
        "textColor": "#000000"
      }
    },
    "9d03752e-ab57-4b09-867c-a0123405f794": {
      "$contentActions": [
        {
          "action": {
            "$id": "3603a4ad-a386-4ce4-961e-4c27d12ddd84",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "e7f81448-4fc5-449f-86a4-201bfa0f0c11",
              "type": "application/vnd.lime.chatstate+json",
              "content": {
                "state": "composing",
                "interval": 1000
              }
            },
            "$cardContent": {
              "document": {
                "id": "e7f81448-4fc5-449f-86a4-201bfa0f0c11",
                "type": "application/vnd.lime.chatstate+json",
                "content": {
                  "state": "composing",
                  "interval": 1000
                }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "33dedaf4-60d1-47c8-b756-26a38f4812f4",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "79a882fb-0676-4697-b48d-7cdeae7a014f",
              "type": "text/plain",
              "content": "{{phraseErrorWithInputJs}}",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "79a882fb-0676-4697-b48d-7cdeae7a014f",
                "type": "text/plain",
                "content": "{{phraseErrorWithInputJs}}"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "1472e4b5-0834-4fab-ac3d-1f24e24d44a9",
                "type": "text/plain",
                "textContent": "User input",
                "content": "name"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false,
            "variable": "name"
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "a086fa26-3b26-4e34-a3a6-1284f6e800a6",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "phraseErrorWithInputJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(exception) {\n    try {\n        let exceptionJs = JSON.parse(exception).redirectMenu\n        let blocoId = JSON.parse(exception).id\n\n        if (exceptionJs == 'ERRO NOME') {\n            return `Desculpe, não consegui entender o seu nome. ✖\n\n🟦 {{n1}}Digite somente texto.{{n2}}`\n        }\n        if (exceptionJs == 'ERRO CPF') {\n            return `Desculpe, não consegui entender o CPF que você digitou. ✖\n\n🟦 {{n1}}Digite conforme o exemplo:{{n2}} 12378945612`\n        }\n        if (exceptionJs == 'ERRO EMAIL') {\n            return `Desculpe, não consegui entender o e-mail informado. ✖\n\n🟦 {{n1}}Digite conforme o exemplo a seguir:{{n2}} careplus@chatbot.com.br`\n        }\n        if (exceptionJs == 'ERRO TELEFONE') {\n            return `Desculpe, não consegui entender o n° de telefone informado. ✖\n\n🟦 {{n1}}Digite conforme o exemplo a seguir:{{n2}} 31 9 95967894`\n        }\n        if (exceptionJs == 'ERRO TELEFONE 2') {\n            return `Desculpe, não consegui entender o n° de telefone informado. ✖\n\n🟦 {{n1}}Digite conforme o exemplo a seguir:{{n2}} 31 9 95967894`\n        }\n        if (exceptionJs == 'ERRO DATA') {\n            return `Desculpe, não consegui entender a data que você digitou. ✖\n\n🟦 {{n1}}Digite conforme o exemplo:{{n2}} 26/07/1997`\n        }\n        if (exceptionJs == 'ERRO DIA SEMANA') {\n            return `Desculpe, não consegui entender o dia que você digitou. ✖\n\n🟦 {{n1}}Digite conforme o exemplo:{{n2}} segunda-feira`\n        }\n        if (exceptionJs == 'ERRO PERIODO') {\n            return `Desculpe, não consegui entender o período que você digitou. ✖\n\n🟦 {{n1}}Digite conforme o exemplo:{{n2}} manhã`\n        }\n        if (exceptionJs == 'ERRO EMPRESA') {\n            return `Desculpe, não consegui entender a empresa que você digitou. ✖\n\n🟦 {{n1}}Digite conforme o exemplo:{{n2}} Care Plus Clinic`\n        }\n        if (exceptionJs == 'ERRO NOTA') {\n            return `{{n1}}Desculpe, eu não consegui entender a nota que você informou.{{n2}} ✖\n\n🟦 Digite um número entre 1 e 10.`\n        }\n        if (exceptionJs == 'ERRO ') {\n            return ``\n        }\n    }\n    catch (e) {\n        return 'error'\n    }\n\n}",
            "inputVariables": [
              "exception"
            ],
            "outputVariable": "phraseErrorWithInputJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "3dc55ca2-7883-4f2c-b1f0-92539212357a",
          "$typeOfContent": "",
          "type": "SetVariable",
          "$title": "hideInputText [false] (default TRUE)",
          "$invalid": false,
          "settings": {
            "variable": "hideInputText",
            "value": "true"
          },
          "conditions": [
            {
              "values": [
                "ERRO NOME",
                "ERRO EMAIL",
                "ERRO TELEFONE",
                "ERRO CPF",
                "ERRO DIA SEMANA",
                "ERRO DATA",
                "ERRO EMPRESA",
                "ERRO PERIODO"
              ],
              "source": "context",
              "comparison": "equals",
              "variable": "exception@redirectMenu"
            }
          ]
        },
        {
          "$id": "a562f64b-d400-4ad1-8517-f22d8093e341",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "defineTrackingDeExibicao [INPUT]",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(exception) {\n    try {\n        exception = JSON.parse(exception)\n\n        if (exception.redirectMenu == 'ERRO NOME') {\n            return `erro nome exibicao`\n        }\n        if (exception.redirectMenu == 'ERRO CPF') {\n            return `erro cpf exibicao`\n        }\n        if (exception.redirectMenu == 'ERRO EMAIL') {\n            return `erro email exibicao`\n        }\n        if (exception.redirectMenu == 'ERRO TELEFONE') {\n            return `erro numero telefone exibicao`\n        }\n        if (exception.redirectMenu == 'ERRO DATA') {\n            return `erro data exibicao`\n        }\n        if (exception.redirectMenu == 'ERRO DIA SEMANA') {\n            return `erro dia semana exibicao`\n        }\n        if (exception.redirectMenu == 'ERRO PERIODO') {\n            return `erro período exibicao`\n        }\n        if (exception.redirectMenu == 'ERRO EMPRESA') {\n            return `erro empresa exibicao`\n        }\n    }\n    catch (e) {\n        return 'error'\n    }\n\n}",
            "inputVariables": [
              "exception"
            ],
            "outputVariable": "defineTrackingDeExibicao",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "3ab79072-91ec-4732-8986-5b803312866d",
          "$typeOfContent": "",
          "type": "TrackEvent",
          "$title": "defineTrackingDeExibicao",
          "$invalid": false,
          "settings": {
            "extras": {},
            "category": "{{defineTrackingDeExibicao}}",
            "action": "Exibicao"
          },
          "conditions": [
            {
              "source": "context",
              "comparison": "notEquals",
              "variable": "defineTrackingDeExibicao",
              "values": [
                "error"
              ]
            }
          ]
        },
        {
          "$id": "393b09ca-1bff-4259-b6c1-f69353a07202",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "defineTrackingDeOrigem [INPUT]",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(exception, service) {\n    try {\n        let exception = JSON.parse(exception)  \n\n        let defineTracking = {\n            categoria: `error`,\n            acao: `${service} | ${exception.id} | ${exception.input}`\n        }\n\n        if (exception.redirectMenu == 'ERRO NOME') {\n            defineTracking.categoria = `erro nome origem`\n        }\n        if (exception.redirectMenu == 'ERRO NUMERO INTEIRO') {\n            defineTracking.categoria = `erro numero inteiro origem`\n        }\n        if (exception.redirectMenu == 'ERRO CPF') {\n            defineTracking.categoria = `erro cpf origem`\n        }\n        if (exception.redirectMenu == 'ERRO CNPJ') {\n            defineTracking.categoria = `erro cnpj origem`\n        }\n        if (exception.redirectMenu == 'ERRO CPF CNPJ') {\n            defineTracking.categoria = `erro cpf cnpj origem`\n        }\n        if (exception.redirectMenu == 'ERRO EMAIL') {\n            defineTracking.categoria = `erro email origem`\n        }\n        if (exception.redirectMenu == 'ERRO TELEFONE') {\n            defineTracking.categoria = `erro telefone origem`\n        }\n        if (exception.redirectMenu == 'ERRO DATA') {\n            defineTracking.categoria = `erro data origem`\n        }\n        if (exception.redirectMenu == 'ERRO CEP') {\n            defineTracking.categoria = `erro cep origem`\n        }\n        if (exception.redirectMenu == 'ERRO ENDERECO') {\n            defineTracking.categoria = `erro endereco origem`\n        }\n        if (exception.redirectMenu == 'ERRO MOEDA') {\n            defineTracking.categoria = `erro moeda origem`\n        }\n        if (exception.redirectMenu == 'ERRO ALFA NUMERICO') {\n            defineTracking.categoria = `erro alfanumerico origem`\n        }\n        if (exception.redirectMenu == 'ERRO IMAGEM') {\n            defineTracking.categoria = `erro imagem origem`\n        }\n        return defineTracking\n    }\n    catch (e) {\n        return 'error'\n    }\n\n}",
            "inputVariables": [
              "exception",
              "service"
            ],
            "outputVariable": "defineTrackingDeOrigem",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "a145b3f8-d6e2-438e-8763-00ec1d39a0e5",
          "$typeOfContent": "",
          "type": "TrackEvent",
          "$title": "defineTrackingDeOrigem",
          "$invalid": false,
          "settings": {
            "extras": {},
            "category": "{{defineTrackingDeOrigem@categoria}}",
            "action": "{{defineTrackingDeOrigem@acao}}"
          },
          "conditions": [
            {
              "source": "context",
              "comparison": "notEquals",
              "variable": "defineTrackingDeOrigem",
              "values": [
                "error"
              ]
            }
          ]
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "54d99b2c-b338-4f12-a938-59ab815c9e4d",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "id": "blip-tag-68d0da90-ee55-427f-b191-c23f165f3b2e",
          "label": "ExecuteScript",
          "background": "#FF961E",
          "canChangeBackground": false
        },
        {
          "background": "#b80000",
          "label": "SetVariable",
          "id": "blip-tag-dd432ee6-0ca2-4264-9382-6348da5c46b1",
          "canChangeBackground": false
        },
        {
          "background": "#61D36F",
          "label": "Event tracking",
          "id": "blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9",
          "canChangeBackground": false
        }
      ],
      "id": "9d03752e-ab57-4b09-867c-a0123405f794",
      "root": false,
      "$title": "[X.22.0.0] Erro Input",
      "$position": {
        "top": "407px",
        "left": "453px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "0e5d6ae6-a400-4267-a294-9b22fc707da7": {
      "$contentActions": [
        {
          "action": {
            "$id": "40ccc244-df19-4bf9-a7d1-e4f5f4c46722",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "19eb619d-6f11-4923-b326-72ab8352b8ba",
              "type": "application/vnd.lime.chatstate+json",
              "content": {
                "state": "composing",
                "interval": 1000
              }
            },
            "$cardContent": {
              "document": {
                "id": "19eb619d-6f11-4923-b326-72ab8352b8ba",
                "type": "application/vnd.lime.chatstate+json",
                "content": {
                  "state": "composing",
                  "interval": 1000
                }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "b5a6f654-d2d1-4e03-b68a-1f821b914c28",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{objMenu@type}}",
              "rawContent": "{{objMenu@content}}"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": false,
            "$cardContent": {
              "document": {
                "id": "be996d59-606a-485c-bd73-cb31970b6f66",
                "type": "text/plain",
                "content": "Entrada do usuário"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false,
            "expiration": "0:15"
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "805b940d-59ca-4f6e-8450-134e65c61cf8",
          "typeOfStateId": "state",
          "$connId": "con_53",
          "$id": "c30560be-2a56-408c-b3fc-0407bc5ea2d5",
          "conditions": [
            {
              "source": "input",
              "comparison": "notExists",
              "values": []
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "bf40442e-5224-420a-af76-bcc8be018387",
          "typeOfStateId": "state",
          "$connId": "con_58",
          "$id": "4b50d6da-6cf1-44f9-bdd4-b7dcf8db0efe",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": [
                "Retomar conversa"
              ],
              "variable": "validInputJs@input"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "842e97e0-7d00-444d-bda0-8bed7bbdc90e",
          "typeOfStateId": "state",
          "$connId": "con_63",
          "$id": "3eff8c2b-4003-49f3-a732-5d56cd43750c",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": [
                "Finalizar conversa ❌"
              ],
              "variable": "validInputJs@input"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "1d5fc70f-3617-4f9c-9aeb-dacfbea1acdb",
          "typeOfStateId": "state",
          "$connId": "con_68",
          "$id": "4c886f3f-38e7-448f-8e3a-221d3d3d7dca",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": [
                "Menu"
              ],
              "variable": "validInputJs@input"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "842e97e0-7d00-444d-bda0-8bed7bbdc90e",
          "typeOfStateId": "state",
          "$connId": "con_73",
          "$id": "577bc8f7-593f-454d-994b-b5c56e6d7605",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": [
                "Sair"
              ],
              "variable": "validInputJs@input"
            }
          ],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "0af07bf9-f694-4636-a08b-fc1d339ed605",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "inputOptionJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(hideInputText, sentenceOtherMistakesJs, returnJs) {\n\n  let properties = {\n    'text': `Você passou 2h sem me responder. 🙁\n\n{{n1}}O que gostaria de fazer?{{n2}}`,\n    'options': [\"Retomar conversa\", \"Finalizar conversa ❌\"],\n    'values': [\"Retomar conversa\", \"Finalizar conversa ❌\"],\n    'description': [],\n    'itens': [\n      { name: ['Retomar conversa', 'sim', 'ss', 's', 'claro', 'ok', 'certo', 'yes', 'voltar'] },\n      { name: ['Finalizar conversa ❌', 'não', 'nao', 'no', 'n', 'nope', 'sair', 'encerrar', 'finalizar', 'adeus'] }\n    ],\n    menuScope: {\n      \"whatsappButton\": true,\n      \"whatsappList\": false,\n      \"blipchatQuickReply\": false,\n      \"blipchatMenu\": true,\n      \"defaultText\": false\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Exibe mensagem e exceção no MENU\n  if (hideInputText == 'true' || hideInputText == true) {\n    properties.text = sentenceOtherMistakesJs\n  } else {\n    // Exibe mensagem de retorno\n    // if (returnJs == 'true' || returnJs == true) {\n    //   properties.text = 'Olá! Seja bem-vindo(a) novamente! 😄'\n    // }\n  }\n  ////////////////////////////////////////////////////////////////////////////////\n\n  properties.itens = addItensNumeracao(properties.itens);\n\n  // Adição de opções sem numeração\n  let opcoesExtras = []\n\n  opcoesExtras = addItens(opcoesExtras);\n\n  for (let i = 0; i < opcoesExtras.length; i++) {\n    properties.itens.push(opcoesExtras[i]);\n  }\n\n  return JSON.stringify(properties);\n}\n\nfunction addItens(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n  }\n  return newItens;\n}\n\nfunction addItensNumeracao(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n    newNames.push(`${i + 1}`); // Acrescenta numeração automática\n  }\n  return newItens;\n} \n",
            "inputVariables": [
              "hideInputText",
              "sentenceOtherMistakesJs",
              "return"
            ],
            "outputVariable": "inputOptionJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "181a73ce-4d24-4c10-90f2-d2e8c352791e",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "objMenu",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.FunctionGetMenu}}\n\nconst run = (platform, menu) => {\n  menu = JSON.parse(menu);\n  platform = platform.toLowerCase();\n\n  if (platform == 'instagram' || platform == 'messenger') {\n    const objectType = {\n      'type': `text/plain`\n    }\n    return objectType\n  };\n\n  let default_msg = {\n    \"text\": menu.text,\n    \"header\": 'Menu',\n    \"body\": menu.text,\n    \"footer\": '',\n    \"button\": 'Menu',\n    \"title\": 'Menu',\n    \"namespaceTemplate\": '',\n    \"nameTemplate\": '',\n    \"options\": menu.options,\n    \"values\": menu.values,\n    \"submenu\": [],\n    \"description\": menu.description,\n    \"menuScope\": {\n      ... menu.menuScope,\n      \"platform\": platform\n    },\n  };\n\n  var newMenu = getMenuForPlatform(default_msg);\n\n  return newMenu;\n};",
            "inputVariables": [
              "platform",
              "inputOptionJs"
            ],
            "outputVariable": "objMenu",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "6146ae07-d367-4b08-9daa-f2a8e356a3fc",
          "$typeOfContent": "",
          "type": "TrackEvent",
          "$title": "inatividade exibicao",
          "$invalid": false,
          "settings": {
            "extras": {},
            "category": "inatividade exibicao",
            "action": "Exibicao"
          },
          "conditions": []
        },
        {
          "$id": "9dacfb2b-f6b6-49cb-ab96-aba98696f18b",
          "$typeOfContent": "",
          "type": "TrackEvent",
          "$title": "inatividade origem",
          "$invalid": false,
          "settings": {
            "extras": {},
            "category": "inatividade origem",
            "action": "{{service}} | {{exception@id}}"
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [
        {
          "$id": "4c3fd580-c601-45cc-8eae-e805e71a605f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "validInputJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "// ============================================================================\n//      TYPE\n// ============================================================================\n// - reserved => quando há alguma palavra reservada que o bot deverá processar, \n// como SAIR E MENU por exemplo\n// - error => quando alguma validação deverá retornar um erro para cair em exceção\n// - success => quando a validação foi bem sucedida.\n// ============================================================================\n//      INPUT\n// ============================================================================\n// Retorna o input após processamento.\n// - Se type == error => o input será a descrição do erro. Ex: ERRO CEP\n// - Se type == success => o input será o input original processado.\n// ============================================================================\n//      VALIDATION\n// ============================================================================\n// Retorna em qual validação o input foi processado. Ex: cep\n// ============================================================================\n{{resource.FunctionProcessInput}}\n\nfunction run(input, inputType, platform, menu) {\n    try {\n\n        // =================================================================================\n        //             ATENÇÃO: MANIPULAR SOMENTE AS DUAS CONSTANTES A SEGUIR\n        // =================================================================================\n        // - validacaoMenu => true para validação de Menu, false para Input\n        // - validacoesInput => insira aqui que tipo de validação de input vai ser  \n        //   necessário (se mais de um for selecionado, apenas o mais acima será validado)\n        // - erroMenuEspecial => altere somente se, caso a validação seja um Menu e para\n        //   este menu haja um tratamento diferente de exceção.\n        // =================================================================================\n        const validacaoMenu = true;\n        const erroMenuEspecial = 'ERRO DINAMICO';\n        const validacoesInput = {\n            primeiroNome: false,\n            nomeCompleto: false,\n            email: false,\n            telefone: false,\n            cep: false,\n            data: false,\n            img: false,\n            imgTxt: false,\n            endereco: false,\n            moeda: false,\n            cpf: false,\n            cnpj: false,\n            cpfcnpj: false\n        };\n        // ========================================================================\n\n        // Inicia o objeto que será retornado pela função\n        let processedInput = {\n            'type': null,\n            'input': null,\n            'validation': 'none'\n        }\n\n        // Verifica se o usuário digitou SAIR ou MENU\n        // if (input == 'sair' || input == 'SAIR' || input == 'Sair') {\n        //     processedInput.type = 'reserved'\n        //     processedInput.input = 'SAIR'\n        //     return JSON.stringify(processedInput)\n        // } else if (input == 'menu' || input == 'MENU' || input == 'Menu') {\n        //     processedInput.type = 'reserved'\n        //     processedInput.input = 'MENU'\n        //     return JSON.stringify(processedInput)\n        // }\n\n        // Formata variáveis\n        menu = JSON.parse(menu);\n        platform = platform.toUpperCase()\n\n        if (validacaoMenu) {\n            // Validação de MENU\n            processedInput = validaMenu(input, menu, platform)\n\n            // Verifica se precisa mudar a mensagem de erro do Menu Dinâmico para o Especial\n            if ((processedInput.input == 'ERRO DINAMICO' || processedInput.input == 'ERRO NUMERICO') && erroMenuEspecial != '') {\n                processedInput.input = erroMenuEspecial; \n            }\n            return JSON.stringify(processedInput);\n\n        } else {\n            // Validação de INPUT\n            const val = Object.entries(validacoesInput);\n            processedInput = validaInput(val, input, inputType)\n\n            // Se nenhuma validação foi processada, retorna o input sem validação\n            if (processedInput.input == 'INPUT SEM VALIDAÇÕES') {\n                return JSON.stringify({type: 'success', input: input, validation: 'none'});\n\n            } else {\n                return JSON.stringify(processedInput);\n            }\n        }\n\n    } catch (e) {\n        return {type: 'error', input: 'ERRO INESPERADO', validation: 'none'}\n    }\n}",
            "inputVariables": [
              "input.content",
              "input.type",
              "platform",
              "inputOptionJs"
            ],
            "outputVariable": "validInputJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "ca0780fb-4590-4991-b281-fda1d115b2b6",
          "$typeOfContent": "",
          "type": "TrackEvent",
          "$title": "inatividade selecao",
          "$invalid": false,
          "settings": {
            "extras": {},
            "category": "inatividade selecao",
            "action": "{{validInputJs@input}}"
          },
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": [
                "success"
              ],
              "variable": "validInputJs@type"
            },
            {
              "source": "input",
              "comparison": "exists",
              "values": []
            }
          ]
        },
        {
          "$id": "66155932-cd0b-4c34-9628-39d25d459551",
          "$typeOfContent": "",
          "type": "TrackEvent",
          "$title": "inatividade input inesperado",
          "$invalid": false,
          "settings": {
            "extras": {},
            "category": "inatividade input inesperado",
            "action": "{{input.content}}"
          },
          "conditions": [
            {
              "source": "input",
              "comparison": "exists",
              "values": []
            },
            {
              "source": "context",
              "comparison": "equals",
              "variable": "validInputJs@type",
              "values": [
                "error",
                "reserved"
              ]
            }
          ]
        },
        {
          "$id": "c37107eb-9def-44a7-9eb9-a505b84cf2c3",
          "$typeOfContent": "",
          "type": "TrackEvent",
          "$title": "inatividade relatorio consolidado",
          "$invalid": false,
          "settings": {
            "extras": {},
            "category": "inatividade relatorio consolidado",
            "action": "{{contact.name}} | {{contact.phoneNumber}} | {{contact.email}} | {{calendar.time}} | {{calendar.date}} | {{calendar.time}} | {{menuOptEscolhida}} | {{menuDermoOdonto}}"
          },
          "conditions": []
        },
        {
          "$id": "dd4e4c4e-7152-4024-afa8-363a7ae23601",
          "$typeOfContent": "",
          "type": "SetVariable",
          "$title": "hideInputText [false]",
          "$invalid": false,
          "settings": {
            "variable": "hideInputText",
            "value": "false"
          },
          "conditions": []
        }
      ],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "e4484b9f-a98a-4544-8a8a-1138c84599a5",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "background": "#61D36F",
          "label": "Event tracking",
          "id": "blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9",
          "canChangeBackground": false
        },
        {
          "background": "#FF6F1E",
          "label": "executeScript",
          "id": "blip-tag-df3af129-53bb-ec72-481d-85ae1c73cfe0",
          "canChangeBackground": false
        },
        {
          "background": "#ffe500",
          "label": "UserInput",
          "id": "blip-tag-dbc9a043-f12b-4db2-98bd-6b11c3074486",
          "canChangeBackground": false
        }
      ],
      "id": "0e5d6ae6-a400-4267-a294-9b22fc707da7",
      "$title": "[I.0.0.0] [MENU] - Inatividade 2h",
      "$position": {
        "top": "691px",
        "left": "617px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "addonsSettings": {
        "backgroundColor": "#455a64",
        "textColor": "#ffffff"
      }
    },
    "e96a33b2-e693-4c01-9c0f-113ed3309f57": {
      "$contentActions": [
        {
          "action": {
            "$id": "40ccc244-df19-4bf9-a7d1-e4f5f4c46722",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "19eb619d-6f11-4923-b326-72ab8352b8ba",
              "type": "application/vnd.lime.chatstate+json",
              "content": {
                "state": "composing",
                "interval": 1000
              }
            },
            "$cardContent": {
              "document": {
                "id": "19eb619d-6f11-4923-b326-72ab8352b8ba",
                "type": "application/vnd.lime.chatstate+json",
                "content": {
                  "state": "composing",
                  "interval": 1000
                }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "b5a6f654-d2d1-4e03-b68a-1f821b914c28",
            "$typeOfContent": "raw-content",
            "type": "SendRawMessage",
            "settings": {
              "metadata": {},
              "type": "{{objMenu@type}}",
              "rawContent": "{{objMenu@content}}"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": false,
            "$cardContent": {
              "document": {
                "id": "be996d59-606a-485c-bd73-cb31970b6f66",
                "type": "text/plain",
                "content": "Entrada do usuário"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false,
            "expiration": "0:15"
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [
        {
          "stateId": "6167a990-7793-41ed-82fd-e1b55584d722",
          "typeOfStateId": "state",
          "$connId": "con_78",
          "$id": "4b50d6da-6cf1-44f9-bdd4-b7dcf8db0efe",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": [
                "Falar com atendente"
              ],
              "variable": "validInputJs@input"
            }
          ],
          "$invalid": false
        },
        {
          "stateId": "842e97e0-7d00-444d-bda0-8bed7bbdc90e",
          "typeOfStateId": "state",
          "$connId": "con_83",
          "$id": "577bc8f7-593f-454d-994b-b5c56e6d7605",
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": [
                "Finalizar conversa ❌"
              ],
              "variable": "validInputJs@input"
            }
          ],
          "$invalid": false
        }
      ],
      "$enteringCustomActions": [
        {
          "$id": "0af07bf9-f694-4636-a08b-fc1d339ed605",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "inputOptionJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "function run(hideInputText, sentenceOtherMistakesJs, returnJs) {\n\n  let properties = {\n    'text': `Desculpe, eu realmente não estou conseguindo entender o que você quer me dizer. 😓\n\n{{n1}}O que gostaria de fazer agora?{{n2}}`,\n    'options': [\"Falar com atendente\", \"Finalizar conversa ❌\"],\n    'values': [\"Falar com atendente\", \"Finalizar conversa ❌\"],\n    'description': [],\n    'itens': [\n      { name: ['Falar com atendente', 'atendimento', 'atendente', 'falar'] },\n      { name: ['Finalizar conversa ❌', 'sair', 'encerrar', 'finalizar'] },\n    ],\n    menuScope: {\n      \"whatsappButton\": true,\n      \"whatsappList\": false,\n      \"blipchatQuickReply\": false,\n      \"blipchatMenu\": true,\n      \"defaultText\": false\n    }\n  }\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Exibe mensagem e exceção no MENU\n  if (hideInputText == 'true' || hideInputText == true) {\n    properties.text = sentenceOtherMistakesJs\n  } else {\n    // Exibe mensagem de retorno\n    // if (returnJs == 'true' || returnJs == true) {\n    //   properties.text = 'Olá! Seja bem-vindo(a) novamente! 😄'\n    // }\n  }\n  ////////////////////////////////////////////////////////////////////////////////\n\n  properties.itens = addItensNumeracao(properties.itens);\n\n  // Adição de opções sem numeração\n  let opcoesExtras = []\n\n  opcoesExtras = addItens(opcoesExtras);\n\n  for (let i = 0; i < opcoesExtras.length; i++) {\n    properties.itens.push(opcoesExtras[i]);\n  }\n\n  return JSON.stringify(properties);\n}\n\nfunction addItens(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n  }\n  return newItens;\n}\n\nfunction addItensNumeracao(itens) {\n  let newItens = [];\n  let newNames;\n  let name;\n  let match;\n  for (let i = 0; i < itens.length; i++) {\n    name = itens[i].name;\n    newNames = []\n    for (let y = 0; y < itens[i].name.length; y++) {\n      match = name[y];\n      newNames.push(match);\n      // Adiciona uma variação lowerCase e UpperCase para cada opção do itens\n      newNames.push(match.toLowerCase());\n      newNames.push(match.toUpperCase());\n      newItens[i] = { name: newNames };\n    }\n    newNames.push(`${i + 1}`); // Acrescenta numeração automática\n  }\n  return newItens;\n} \n",
            "inputVariables": [
              "hideInputText",
              "sentenceOtherMistakesJs",
              "return"
            ],
            "outputVariable": "inputOptionJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "181a73ce-4d24-4c10-90f2-d2e8c352791e",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "objMenu",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "{{resource.FunctionGetMenu}}\n\nconst run = (platform, menu) => {\n  menu = JSON.parse(menu);\n  platform = platform.toLowerCase();\n\n  if (platform == 'instagram' || platform == 'messenger') {\n    const objectType = {\n      'type': `text/plain`\n    }\n    return objectType\n  };\n\n  let default_msg = {\n    \"text\": menu.text,\n    \"header\": 'Menu',\n    \"body\": menu.text,\n    \"footer\": '',\n    \"button\": 'Menu',\n    \"title\": 'Menu',\n    \"namespaceTemplate\": '',\n    \"nameTemplate\": '',\n    \"options\": menu.options,\n    \"values\": menu.values,\n    \"submenu\": [],\n    \"description\": menu.description,\n    \"menuScope\": {\n      ... menu.menuScope,\n      \"platform\": platform\n    },\n  };\n\n  var newMenu = getMenuForPlatform(default_msg);\n\n  return newMenu;\n};",
            "inputVariables": [
              "platform",
              "inputOptionJs"
            ],
            "outputVariable": "objMenu",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "4ad3ccb6-67da-4883-81bd-894ac086cb24",
          "$typeOfContent": "",
          "type": "TrackEvent",
          "$title": "erro persistente exibicao",
          "$invalid": false,
          "settings": {
            "extras": {},
            "category": "erro persistente exibicao",
            "action": "Exibicao"
          },
          "conditions": []
        },
        {
          "$id": "c6f05e54-1e52-402b-9eda-305992e867ab",
          "$typeOfContent": "",
          "type": "TrackEvent",
          "$title": "erro persistente origem",
          "$invalid": false,
          "settings": {
            "extras": {},
            "action": "{{service}} | {{exception@id}} | {{exception@input}}",
            "category": "erro persistente origem"
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [
        {
          "$id": "4c3fd580-c601-45cc-8eae-e805e71a605f",
          "$typeOfContent": "",
          "type": "ExecuteScript",
          "$title": "validInputJs",
          "$invalid": false,
          "settings": {
            "function": "run",
            "source": "// ============================================================================\n//      TYPE\n// ============================================================================\n// - reserved => quando há alguma palavra reservada que o bot deverá processar, \n// como SAIR E MENU por exemplo\n// - error => quando alguma validação deverá retornar um erro para cair em exceção\n// - success => quando a validação foi bem sucedida.\n// ============================================================================\n//      INPUT\n// ============================================================================\n// Retorna o input após processamento.\n// - Se type == error => o input será a descrição do erro. Ex: ERRO CEP\n// - Se type == success => o input será o input original processado.\n// ============================================================================\n//      VALIDATION\n// ============================================================================\n// Retorna em qual validação o input foi processado. Ex: cep\n// ============================================================================\n{{resource.FunctionProcessInput}}\n\nfunction run(input, inputType, platform, menu) {\n    try {\n\n        // =================================================================================\n        //             ATENÇÃO: MANIPULAR SOMENTE AS DUAS CONSTANTES A SEGUIR\n        // =================================================================================\n        // - validacaoMenu => true para validação de Menu, false para Input\n        // - validacoesInput => insira aqui que tipo de validação de input vai ser  \n        //   necessário (se mais de um for selecionado, apenas o mais acima será validado)\n        // - erroMenuEspecial => altere somente se, caso a validação seja um Menu e para\n        //   este menu haja um tratamento diferente de exceção.\n        // =================================================================================\n        const validacaoMenu = true;\n        const erroMenuEspecial = 'ERRO DINAMICO';\n        const validacoesInput = {\n            primeiroNome: false,\n            nomeCompleto: false,\n            email: false,\n            telefone: false,\n            cep: false,\n            data: false,\n            img: false,\n            imgTxt: false,\n            endereco: false,\n            moeda: false,\n            cpf: false,\n            cnpj: false,\n            cpfcnpj: false\n        };\n        // ========================================================================\n\n        // Inicia o objeto que será retornado pela função\n        let processedInput = {\n            'type': null,\n            'input': null,\n            'validation': 'none'\n        }\n\n        // Verifica se o usuário digitou SAIR ou MENU\n        if (input == 'sair' || input == 'SAIR' || input == 'Sair') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'SAIR'\n            return JSON.stringify(processedInput)\n        } else if (input == 'voltar' || input == 'VOLTAR' || input == 'Menu' || input == 'Voltar' || input == 'menu' || input == 'MENU') {\n            processedInput.type = 'reserved'\n            processedInput.input = 'VOLTAR'\n            return JSON.stringify(processedInput)\n        }\n        \n        // Formata variáveis\n        menu = JSON.parse(menu);\n        platform = platform.toUpperCase()\n\n        if (validacaoMenu) {\n            // Validação de MENU\n            processedInput = validaMenu(input, menu, platform)\n\n            // Verifica se precisa mudar a mensagem de erro do Menu Dinâmico para o Especial\n            if ((processedInput.input == 'ERRO DINAMICO' || processedInput.input == 'ERRO NUMERICO') && erroMenuEspecial != '') {\n                processedInput.input = erroMenuEspecial;\n            }\n            return JSON.stringify(processedInput);\n\n        } else {\n            // Validação de INPUT\n            const val = Object.entries(validacoesInput);\n            processedInput = validaInput(val, input, inputType)\n\n            // Se nenhuma validação foi processada, retorna o input sem validação\n            if (processedInput.input == 'INPUT SEM VALIDAÇÕES') {\n                return JSON.stringify({ type: 'success', input: input, validation: 'none' });\n\n            } else {\n                return JSON.stringify(processedInput);\n            }\n        }\n\n    } catch (e) {\n        return { type: 'error', input: 'ERRO INESPERADO', validation: 'none' }\n    }\n}",
            "inputVariables": [
              "input.content",
              "input.type",
              "platform",
              "inputOptionJs"
            ],
            "outputVariable": "validInputJs",
            "LocalTimeZoneEnabled": false
          },
          "conditions": []
        },
        {
          "$id": "5d1c5166-198b-430b-b5cb-4ef1707d7b0f",
          "$typeOfContent": "",
          "type": "SetVariable",
          "$title": "hideInputText [false]",
          "$invalid": false,
          "settings": {
            "variable": "hideInputText",
            "value": "false"
          },
          "conditions": []
        },
        {
          "$id": "79b0b6f3-9e82-491f-bfde-9a92b4b0d24b",
          "$typeOfContent": "",
          "type": "TrackEvent",
          "$title": "erro persistente selecao",
          "$invalid": false,
          "settings": {
            "extras": {},
            "category": "erro persistente selecao",
            "action": "{{validInputJs@input}}"
          },
          "conditions": [
            {
              "source": "context",
              "comparison": "equals",
              "values": [
                "success"
              ],
              "variable": "validInputJs@type"
            },
            {
              "source": "input",
              "comparison": "exists",
              "values": []
            }
          ]
        },
        {
          "$id": "731e5e70-c281-4a4e-9b63-0be0f8533bfd",
          "$typeOfContent": "",
          "type": "TrackEvent",
          "$title": "erro persistente inesperado",
          "$invalid": false,
          "settings": {
            "extras": {},
            "category": "erro persistente inesperado",
            "action": "{{input.content}}"
          },
          "conditions": [
            {
              "source": "input",
              "comparison": "exists",
              "values": []
            },
            {
              "source": "context",
              "comparison": "equals",
              "variable": "validInputJs@type",
              "values": [
                "error",
                "reserved"
              ]
            }
          ]
        }
      ],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "e4484b9f-a98a-4544-8a8a-1138c84599a5",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "background": "#FF6F1E",
          "label": "executeScript",
          "id": "blip-tag-df3af129-53bb-ec72-481d-85ae1c73cfe0",
          "canChangeBackground": false
        },
        {
          "background": "#61D36F",
          "label": "Event tracking",
          "id": "blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9",
          "canChangeBackground": false
        },
        {
          "background": "#ffe500",
          "label": "UserInput",
          "id": "blip-tag-dbc9a043-f12b-4db2-98bd-6b11c3074486",
          "canChangeBackground": false
        }
      ],
      "id": "e96a33b2-e693-4c01-9c0f-113ed3309f57",
      "$title": "[E.0.0.2] [MENU] Erro Persistente",
      "$position": {
        "top": "699px",
        "left": "163px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "addonsSettings": {
        "backgroundColor": "#455a64",
        "textColor": "#ffffff"
      }
    },
    "3c64385e-253b-43d0-9316-aabd7c5e15cb": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "581d2ca6-5ab2-4e38-8726-d22b30bcf23c",
                "type": "text/plain",
                "textContent": "User input",
                "content": "User input"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "3ed14941-bd24-4013-a18d-1f4c6e4ace91",
          "$typeOfContent": "",
          "type": "SetVariable",
          "$title": "clearException",
          "$invalid": false,
          "settings": {
            "variable": "exception"
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [
        {
          "$id": "8735939c-ee24-45e9-ba72-24fe28e39c0d",
          "$typeOfContent": "",
          "type": "Redirect",
          "$title": "[GO TO] Transbordo",
          "$invalid": false,
          "settings": {
            "context": {
              "type": "text/plain",
              "value": "ola"
            },
            "address": "{{resource.serviceList@transbordo}}"
          },
          "conditions": []
        }
      ],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "onboarding",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "background": "#b80000",
          "label": "SetVariable",
          "id": "blip-tag-dd432ee6-0ca2-4264-9382-6348da5c46b1",
          "canChangeBackground": false
        },
        {
          "background": "#0A6045",
          "label": "REDIRECT TO",
          "id": "blip-tag-f0773d70-1b65-17d8-0513-88aa4e892421",
          "canChangeBackground": false
        }
      ],
      "id": "3c64385e-253b-43d0-9316-aabd7c5e15cb",
      "root": false,
      "$title": "[REDIRECT TO] Transbordo",
      "$position": {
        "top": "388.667px",
        "left": "1319.22px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "addonsSettings": {
        "backgroundColor": "#c8e6c9",
        "textColor": "#000000"
      }
    },
    "805b940d-59ca-4f6e-8450-134e65c61cf8": {
      "$contentActions": [
        {
          "action": {
            "$id": "cb64d748-1460-482a-8131-7d951b2d5f4d",
            "$typeOfContent": "chat-state",
            "type": "SendMessage",
            "settings": {
              "id": "386598b1-5186-401c-94d2-179fb712360a",
              "type": "application/vnd.lime.chatstate+json",
              "content": {
                "state": "composing",
                "interval": 1000
              }
            },
            "$cardContent": {
              "document": {
                "id": "386598b1-5186-401c-94d2-179fb712360a",
                "type": "application/vnd.lime.chatstate+json",
                "content": {
                  "state": "composing",
                  "interval": 1000
                }
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "action": {
            "$id": "6fa04a0b-9432-4f41-9940-b3b54f072eba",
            "$typeOfContent": "text",
            "type": "SendMessage",
            "settings": {
              "id": "0be46382-9ad9-4e2d-bdd3-a52258706df1",
              "type": "text/plain",
              "content": "{{n1}}Nossa conversa está sendo encerrada por falta de interação...{{n2}}\n\nMas não se preocupe, caso precise de mais informações, é só mandar uma mensagem! 😉",
              "metadata": {}
            },
            "$cardContent": {
              "document": {
                "id": "0be46382-9ad9-4e2d-bdd3-a52258706df1",
                "type": "text/plain",
                "content": "{{n1}}Nossa conversa está sendo encerrada por falta de interação...{{n2}}\n\nMas não se preocupe, caso precise de mais informações, é só mandar uma mensagem! 😉"
              },
              "editable": true,
              "deletable": true,
              "position": "left"
            }
          },
          "$invalid": false
        },
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "854ef612-265c-4870-9dec-4a45eeb44cf7",
                "type": "text/plain",
                "textContent": "Entrada do usuário",
                "content": "Entrada do usuário"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [
        {
          "$id": "8e7fc26a-af30-4401-9f64-e27a9adf21bb",
          "$typeOfContent": "",
          "type": "TrackEvent",
          "$title": "finalizacao inatividade exibicao",
          "$invalid": false,
          "settings": {
            "extras": {},
            "category": "finalizacao inatividade exibicao",
            "action": "exibicao"
          },
          "conditions": []
        },
        {
          "$id": "88f40df9-efb3-44de-944e-46fc45c91a01",
          "$typeOfContent": "",
          "type": "TrackEvent",
          "$title": "finalizacao inatividade relatorio",
          "$invalid": false,
          "settings": {
            "extras": {},
            "category": "finalizacao inatividade relatorio",
            "action": "{{contact.name}} | {{contact.phoneNumber}} | {{contact.email}} | {{menuOptEscolhida}} | {{menuDermoOdonto}} | https://careplusclinic.blip.ai/application/detail/routercpclinicdev/users{{contact.identity}}"
          },
          "conditions": []
        }
      ],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "e4484b9f-a98a-4544-8a8a-1138c84599a5",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "background": "#61D36F",
          "label": "Event tracking",
          "id": "blip-tag-c54b55c8-285f-be44-167f-ddb9370efbe9",
          "canChangeBackground": false
        }
      ],
      "id": "805b940d-59ca-4f6e-8450-134e65c61cf8",
      "root": false,
      "$title": "[F.1.0.1] Mensagem inatividade (2 horas)",
      "$position": {
        "top": "590px",
        "left": "845px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    },
    "f2e40782-06ce-4af7-b1e6-bde9e4949f07": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "4c7f6a59-96d9-40a2-862b-e86b26477bb2",
                "type": "text/plain",
                "textContent": "Entrada do usuário",
                "content": "Entrada do usuário"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "0e5d6ae6-a400-4267-a294-9b22fc707da7",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "background": "#3A4A65",
          "label": "GO TO",
          "id": "blip-tag-773a68c4-9d6a-130f-a827-57ffce8bca5a",
          "canChangeBackground": false
        }
      ],
      "id": "f2e40782-06ce-4af7-b1e6-bde9e4949f07",
      "root": false,
      "$title": "[GO TO] Inatividade",
      "$position": {
        "top": "114.857px",
        "left": "755.571px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "addonsSettings": {
        "backgroundColor": "#fff9c4",
        "textColor": "#000000"
      }
    },
    "105d9525-9089-46c5-b08b-eeda062ad784": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "595b62a1-e6b5-4023-8ee0-d5a746aee84c",
                "type": "text/plain",
                "textContent": "Entrada do usuário",
                "content": "Entrada do usuário"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "e96a33b2-e693-4c01-9c0f-113ed3309f57",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "background": "#3A4A65",
          "label": "GO TO",
          "id": "blip-tag-773a68c4-9d6a-130f-a827-57ffce8bca5a",
          "canChangeBackground": false
        }
      ],
      "id": "105d9525-9089-46c5-b08b-eeda062ad784",
      "root": false,
      "$title": "[GO TO] Erro Persistente",
      "$position": {
        "top": "249px",
        "left": "756px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "addonsSettings": {
        "backgroundColor": "#fff9c4",
        "textColor": "#000000"
      }
    },
    "d6532e0a-e4fb-4e27-801b-85f606c1f690": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "d6f18ee8-a9a9-49bb-b69e-d667bc919764",
                "type": "text/plain",
                "textContent": "Entrada do usuário",
                "content": "Entrada do usuário"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "e4484b9f-a98a-4544-8a8a-1138c84599a5",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "background": "#3A4A65",
          "label": "GO TO",
          "id": "blip-tag-773a68c4-9d6a-130f-a827-57ffce8bca5a"
        }
      ],
      "id": "d6532e0a-e4fb-4e27-801b-85f606c1f690",
      "root": false,
      "$title": "[GO TO] Finalização",
      "$position": {
        "top": "272.286px",
        "left": "197.429px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "addonsSettings": {
        "backgroundColor": "#fff9c4",
        "textColor": "#000000"
      }
    },
    "842e97e0-7d00-444d-bda0-8bed7bbdc90e": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "d6f18ee8-a9a9-49bb-b69e-d667bc919764",
                "type": "text/plain",
                "textContent": "Entrada do usuário",
                "content": "Entrada do usuário"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "e4484b9f-a98a-4544-8a8a-1138c84599a5",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "background": "#3A4A65",
          "label": "GO TO",
          "id": "blip-tag-773a68c4-9d6a-130f-a827-57ffce8bca5a",
          "canChangeBackground": false
        }
      ],
      "id": "842e97e0-7d00-444d-bda0-8bed7bbdc90e",
      "root": false,
      "$title": "[GO TO] Finalização [1]",
      "$position": {
        "top": "803.286px",
        "left": "388.429px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "addonsSettings": {
        "backgroundColor": "#fff9c4",
        "textColor": "#000000",
        "commentsIdList": []
      }
    },
    "bf40442e-5224-420a-af76-bcc8be018387": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "c7a549b8-179c-4671-bbfd-46d396638bb9",
                "type": "text/plain",
                "textContent": "Entrada do usuário",
                "content": "Entrada do usuário"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "54d99b2c-b338-4f12-a938-59ab815c9e4d",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "background": "#3A4A65",
          "label": "GO TO",
          "id": "blip-tag-773a68c4-9d6a-130f-a827-57ffce8bca5a",
          "canChangeBackground": false
        }
      ],
      "id": "bf40442e-5224-420a-af76-bcc8be018387",
      "root": false,
      "$title": "[GO TO] Bloco Anterior",
      "$position": {
        "top": "598.571px",
        "left": "388.571px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "addonsSettings": {
        "backgroundColor": "#fff9c4",
        "textColor": "#000000"
      }
    },
    "1d5fc70f-3617-4f9c-9aeb-dacfbea1acdb": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "0eb1b274-7322-4769-b50a-327add58f461",
                "type": "text/plain",
                "textContent": "Entrada do usuário",
                "content": "Entrada do usuário"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "d0d3ba85-6e59-4915-8ff6-070c3d7b1376",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "$tags": [
        {
          "background": "#3A4A65",
          "label": "GO TO",
          "id": "blip-tag-773a68c4-9d6a-130f-a827-57ffce8bca5a"
        }
      ],
      "id": "1d5fc70f-3617-4f9c-9aeb-dacfbea1acdb",
      "root": false,
      "$title": "[GO TO] Menu Principal",
      "$position": {
        "top": "801.286px",
        "left": "840.571px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false,
      "addonsSettings": {
        "backgroundColor": "#fff9c4",
        "textColor": "#000000"
      }
    },
    "6167a990-7793-41ed-82fd-e1b55584d722": {
      "$contentActions": [
        {
          "input": {
            "bypass": true,
            "$cardContent": {
              "document": {
                "id": "8dc1e5e7-6e0f-439e-a632-27e7da186d6e",
                "type": "text/plain",
                "textContent": "Entrada do usuário",
                "content": "Entrada do usuário"
              },
              "editable": false,
              "deletable": true,
              "position": "right",
              "editing": false
            },
            "$invalid": false
          },
          "$invalid": false
        }
      ],
      "$conditionOutputs": [],
      "$enteringCustomActions": [],
      "$leavingCustomActions": [],
      "$inputSuggestions": [],
      "$defaultOutput": {
        "stateId": "3c64385e-253b-43d0-9316-aabd7c5e15cb",
        "$invalid": false,
        "typeOfStateId": "state"
      },
      "isAiGenerated": false,
      "$tags": [
        {
          "background": "#3A4A65",
          "label": "GO TO",
          "id": "blip-tag-773a68c4-9d6a-130f-a827-57ffce8bca5a",
          "canChangeBackground": false
        }
      ],
      "id": "6167a990-7793-41ed-82fd-e1b55584d722",
      "root": false,
      "$title": "[GO TO] Transbordo",
      "$position": {
        "top": "563px",
        "left": "163px"
      },
      "$invalidContentActions": false,
      "$invalidOutputs": false,
      "$invalidCustomActions": false,
      "$invalid": false
    }
  },
  "globalActions": {
    "$contentActions": [],
    "$conditionOutputs": [],
    "$enteringCustomActions": [
      {
        "$id": "0def2b58-d42e-49ec-b517-c5c4a1302a46",
        "$typeOfContent": "",
        "type": "ExecuteScript",
        "$title": "SET lastStateWithContent",
        "$invalid": false,
        "settings": {
          "function": "run",
          "source": "function run(stateName, stateId, previousStateName = null, previousStateId = null, service) {\n    return {\n        name: stateName,\n        id: stateId,\n        previousName: previousStateName,\n        previousId: previousStateId,\n        service: service\n    }\n}",
          "inputVariables": [
            "state.name",
            "state.id",
            "state.previous.name",
            "state.previous.id",
            "service"
          ],
          "outputVariable": "lastStateWithContent"
        },
        "conditions": [
          {
            "$$hashKey": "object:757",
            "values": [
              "[CONTENT]"
            ],
            "source": "context",
            "comparison": "contains",
            "variable": "state.name"
          }
        ]
      }
    ],
    "$leavingCustomActions": [
      {
        "$id": "ff7c65ff-d124-467b-b168-443eb70c3b97",
        "$typeOfContent": "",
        "type": "ExecuteScript",
        "$title": "SET lastStateWithInput",
        "$invalid": false,
        "settings": {
          "function": "run",
          "source": "function run(stateName, stateId, previousStateName = null, previousStateId = null, service) {\n    return {\n        name: stateName,\n        id: stateId,\n        previousName: previousStateName,\n        previousId: previousStateId,\n        service: service\n    }\n}",
          "inputVariables": [
            "state.name",
            "state.id",
            "state.previous.name",
            "state.previous.id",
            "service"
          ],
          "outputVariable": "lastStateWithInput"
        },
        "conditions": [
          {
            "$$hashKey": "object:1341",
            "values": [
              "[INPUT]"
            ],
            "source": "context",
            "comparison": "contains",
            "variable": "state.name"
          }
        ]
      },
      {
        "$id": "c1c53497-f2ab-448b-aa38-de7b8eb58bc8",
        "$typeOfContent": "",
        "type": "SetVariable",
        "$title": "hideInputText [false]",
        "$invalid": false,
        "settings": {
          "variable": "hideInputText",
          "value": "false"
        },
        "conditions": []
      }
    ],
    "$inputSuggestions": [],
    "$defaultOutput": {
      "stateId": "fallback",
      "$invalid": false
    },
    "$tags": [],
    "id": "global-actions",
    "$invalidContentActions": false,
    "$invalidOutputs": false,
    "$invalidCustomActions": false,
    "$invalid": false
  }
}